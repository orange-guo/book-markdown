"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[8711],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>f});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(t),g=a,f=d["".concat(c,".").concat(g)]||d[g]||p[g]||o;return t?n.createElement(f,i(i({ref:r},s),{},{components:t})):n.createElement(f,i({ref:r},s))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},96325:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=t(83117),a=(t(67294),t(3905));const o={},i="Gradle",l={unversionedId:"software-engineering/language/java/gradle",id:"software-engineering/language/java/gradle",title:"Gradle",description:"Project",source:"@site/docs/software-engineering/language/java/gradle.md",sourceDirName:"software-engineering/language/java",slug:"/software-engineering/language/java/gradle",permalink:"/zh-CN/docs/software-engineering/language/java/gradle",draft:!1,editUrl:"https://github.com/orange-guo/markdowns/tree/master/docs/software-engineering/language/java/gradle.md",tags:[],version:"current",lastUpdatedBy:"Xiangcheng Kuo",lastUpdatedAt:1705633703,formattedLastUpdatedAt:"2024\u5e741\u670819\u65e5",frontMatter:{},sidebar:"softwareEngineering",previous:{title:"Concurrent",permalink:"/zh-CN/docs/software-engineering/language/java/concurrent"},next:{title:"Java",permalink:"/zh-CN/docs/software-engineering/language/java/"}},c={},u=[{value:"Project",id:"project",level:2},{value:"Plugin",id:"plugin",level:3},{value:"Reference",id:"reference",level:2},{value:"Doc",id:"doc",level:3}],s={toc:u},d="wrapper";function p(e){let{components:r,...t}=e;return(0,a.kt)(d,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gradle"},"Gradle"),(0,a.kt)("h2",{id:"project"},"Project"),(0,a.kt)("h3",{id:"plugin"},"Plugin"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://imperceptiblethoughts.com/shadow/"},"Shadow"),(0,a.kt)("br",null),"Shadow is a Gradle plugin for combining a project's dependency classes and resources into a single output Jar. The combined Jar is often referred to a fat-jar or uber-jar. Shadow utilizes JarInputStream and JarOutputStream to efficiently process dependent libraries into the output jar without incurring the I/O overhead of expanding the jars to disk.")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("h3",{id:"doc"},"Doc"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.gradle.org/current/userguide/compatibility.html"},"Compatibility Matrix")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.gradle.org/current/userguide/platforms.html"},"Sharing dependency versions between projects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.gradle.org/current/userguide/dependency_resolution.html"},"Understanding dependency resolution"))))}p.isMDXComponent=!0}}]);