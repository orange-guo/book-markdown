"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[7816],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=n,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?r.createElement(h,o(o({ref:t},p),{},{components:a})):r.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},22952:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const i={},o="\u5fae\u670d\u52a1\u89e3\u51b3\u65b9\u6848\u5217\u8868",s={unversionedId:"collection/curated-list-of-technology/microservice-solutions",id:"collection/curated-list-of-technology/microservice-solutions",title:"\u5fae\u670d\u52a1\u89e3\u51b3\u65b9\u6848\u5217\u8868",description:"- consul",source:"@site/docs/collection/curated-list-of-technology/microservice-solutions.md",sourceDirName:"collection/curated-list-of-technology",slug:"/collection/curated-list-of-technology/microservice-solutions",permalink:"/zh-CN/docs/collection/curated-list-of-technology/microservice-solutions",draft:!1,editUrl:"https://github.com/orange-guo/markdowns/tree/master/docs/collection/curated-list-of-technology/microservice-solutions.md",tags:[],version:"current",lastUpdatedBy:"xiangcheng.kuo",lastUpdatedAt:1684149488,formattedLastUpdatedAt:"2023\u5e745\u670815\u65e5",frontMatter:{},sidebar:"collection",previous:{title:"\u8bed\u8a00",permalink:"/zh-CN/docs/collection/curated-list-of-technology/languages"},next:{title:"Others",permalink:"/zh-CN/docs/collection/curated-list-of-technology/others"}},l={},c=[{value:"Monitoring",id:"monitoring",level:2},{value:"Distributed tracing",id:"distributed-tracing",level:2},{value:"RPC",id:"rpc",level:2},{value:"Message Queue",id:"message-queue",level:2},{value:"Stream Processing",id:"stream-processing",level:2},{value:"Orchestration",id:"orchestration",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"\u5fae\u670d\u52a1\u89e3\u51b3\u65b9\u6848\u5217\u8868"},"\u5fae\u670d\u52a1\u89e3\u51b3\u65b9\u6848\u5217\u8868"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.consul.io/"},"consul")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://etcd.io/"},"etcd"),(0,n.kt)("br",null),"A distributed, reliable key-value store for the most critical data of a distributed system")),(0,n.kt)("h2",{id:"monitoring"},"Monitoring"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://prometheus.io/"},"prometheus"),(0,n.kt)("br",null),"Prometheus is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://grafana.com/"},"grafana"),(0,n.kt)("br",null),"Grafana is the open source analytics & monitoring solution for every database")),(0,n.kt)("h2",{id:"distributed-tracing"},"Distributed tracing"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://zipkin.io/"},"zipkin")),(0,n.kt)("br",null),"Zipkin is a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in microservice architectures. Features include both the collection and lookup of this data."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://skywalking.apache.org/"},"skywalking")),(0,n.kt)("br",null),"Apache SkyWalking, an APM(application performance monitor) system, especially designed for microservices, cloud native and container-based (Docker, K8s, Mesos) architectures."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://opentelemetry.io/"},"OpenTelemetry")),(0,n.kt)("br",null),"OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software\u2019s performance and behavior."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://www.jaegertracing.io/"},"jaeger")),(0,n.kt)("br",null),"Jaeger, a CNCF graduated project, is a distributed tracing system released as open source by Uber Technologies. It is used for monitoring and troubleshooting microservices-based distributed systems, including: - Distributed context propagation - Distributed transaction monitoring - Root cause analysis - Service dependency analysis - Performance / latency optimization - OpenTracing compatible data model - Multiple storage backends: Badger, Cassandra, Elasticsearch, Memory.")),(0,n.kt)("h2",{id:"rpc"},"RPC"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://grpc.io/"},"grpc"),(0,n.kt)("br",null),"gRPC is a modern open source high performance RPC framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://thrift.apache.org/"},"thrift"),(0,n.kt)("br",null),"Thrift is a software framework for scalable cross-language services development. It combines a software stack with a code generation engine to build services that work efficiently and seamlessly between C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, JavaScript, Node.js, Smalltalk, OCaml and Delphi and other languages."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://dubbo.apache.org/"},"dubbo"),(0,n.kt)("br",null),"Apache Dubbo\u2122 is a high-performance, java based open source RPC framework.")),(0,n.kt)("h2",{id:"message-queue"},"Message Queue"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.rabbitmq.com/"},"rabbitmq"),(0,n.kt)("br",null),"RabbitMQ is the most widely deployed open source message broker. It is lightweight and easy to deploy on premises and in the cloud. It supports multiple messaging protocols. RabbitMQ can be deployed in distributed and federated configurations to meet high-scale, high-availability requirements."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kafka.apache.org/"},"kafka"),(0,n.kt)("br",null),"Apache Kafka is a distributed streaming platform"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://rocketmq.apache.org/"},"rocketmq"),(0,n.kt)("br",null),"Apache RocketMQ is a distributed messaging and streaming platform with low latency, high performance and reliability, trillion-level capacity and flexible scalability."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pulsar.apache.org/"},"pulsar"),(0,n.kt)("br",null),"Apache Pulsar is a cloud-native, distributed messaging and streaming platform originally created at Yahoo! and now part of the Apache Software Foundation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nats.io/"},"nats"),(0,n.kt)("br",null),"NATS is a simple, secure and high performance open source messaging system for cloud native applications, IoT messaging, and microservices architectures.")),(0,n.kt)("h2",{id:"stream-processing"},"Stream Processing"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://flink.apache.org/"},"flink"),(0,n.kt)("br",null),"Apache Flink is an open source stream processing framework with powerful stream- and batch-processing capabilities."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kafka.apache.org/documentation/streams/"},"kafka-streams"),(0,n.kt)("br",null),"Kafka Streams is a client library for processing and analyzing data stored in Kafka. It builds upon important stream processing concepts such as properly distinguishing between event time and processing time, windowing support, and simple yet efficient management of application state."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pulsar.apache.org/docs/en/functions-overview/"},"pulsar-functions"),(0,n.kt)("br",null),"Apache Pulsar Functions is a lightweight compute framework that allows you to run stateless compute code against your Pulsar data. It is a serverless framework that allows you to write code that runs in response to Pulsar events without having to manage any infrastructure."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://storm.apache.org/"},"storm"),(0,n.kt)("br",null),"Apache Storm is a free and open source distributed realtime computation system. Storm makes it easy to reliably process unbounded streams of data, doing for realtime processing what Hadoop did for batch processing. Storm is simple, can be used with any programming language, and is a lot of fun to use!"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://spark.apache.org/streaming/"},"spark-streaming"),(0,n.kt)("br",null),"Apache Spark Streaming is an extension of the core Spark API that enables scalable, high-throughput, fault-tolerant stream processing of live data streams. Data can be ingested from many sources like Kafka, Flume, Kinesis, or TCP sockets, and can be processed using complex algorithms expressed with high-level functions like map, reduce, join and window. Finally, processed data can be pushed out to filesystems, databases, and live dashboards."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://beam.apache.org/"},"beam"),(0,n.kt)("br",null),"Apache Beam is an open source, unified model and set of language-specific SDKs for defining data processing workflows that may then be executed on top of a set of supported runners, currently including Apache Flink, Apache Spark, and Google Cloud Dataflow."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://samza.apache.org/"},"samza"),(0,n.kt)("br",null),"Apache Samza is a distributed stream processing framework that enables you to build high performance streaming applications. Samza provides a unified data processing model that can be used for real-time and batch processing. Samza applications are portable and can be deployed on any execution environment that supports the Samza API."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://flume.apache.org/"},"flume"),(0,n.kt)("br",null),"Apache Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. It has a simple and flexible architecture based on streaming data flows. It is robust and fault tolerant with tunable reliability mechanisms and many failover and recovery mechanisms. It uses a simple extensible data model that allows for online analytic application.")),(0,n.kt)("h2",{id:"orchestration"},"Orchestration"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://netflix.github.io/conductor/"},"conductor"),(0,n.kt)("br",null),"Conductor is a distributed, scalable, durable, and elastic orchestration engine. It is designed to handle workflows and tasks in a microservices environment. Conductor is a Netflix open source project."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://airflow.apache.org/"},"airflow"),(0,n.kt)("br",null),"Airflow is a platform to programmatically author, schedule and monitor workflows."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://azkaban.github.io/"},"azkaban"),(0,n.kt)("br",null),"Azkaban is a batch workflow job scheduler created at LinkedIn. It is used to schedule Hadoop jobs and other batch jobs. Azkaban is written in Java and uses a MySQL database to store metadata."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cadenceworkflow.io/"},"cadence"),(0,n.kt)("br",null),"Cadence is a distributed, scalable, durable, and highly available orchestration engine to execute asynchronous long-running business logic in a scalable and resilient way. Cadence is a Uber open source project.")))}d.isMDXComponent=!0}}]);