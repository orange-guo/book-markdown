<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Xiangcheng Kuo Blog</title>
        <link>https://www.geek66.cyou/zh-CN/blog</link>
        <description>Xiangcheng Kuo Blog</description>
        <lastBuildDate>Fri, 22 Dec 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <item>
            <title><![CDATA[升级框架后发现Feign调用失败时间格式化问题的排查和解决]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem</guid>
            <pubDate>Fri, 22 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[问题现象]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题现象">问题现象<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E9%97%AE%E9%A2%98%E7%8E%B0%E8%B1%A1" class="hash-link" aria-label="问题现象的直接链接" title="问题现象的直接链接">​</a></h2>
<p>升级内部框架版本后，发现Feign调用失败，报错如下：</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Failed to convert value of type 'java.lang.String' to required type 'java.time.ZonedDateTime'; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nested exception is org.springframework.core.convert.ConversionFailedException: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.ZonedDateTime] for value '2023/12/18 02:57'; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2023/12/18 02:57]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>客户端伪代码如下:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">FeignClient</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@GetMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">List</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">PlatformStandardOrderDto</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> startTime</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> endTime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个问题的现象是Feign调用时参数中的<code>ZonedDatetime</code>类型的时间格式化的结果服务端无法解析</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<blockquote>
<p>框架升级前后内部的时间格式化行为发生了变化导致这个问题的出现.<br>
在早期框架中我们自定义了一个<code>SpringMvcContract</code>.</p>
</blockquote>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token annotation builtin">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation builtin">@Primary</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">fun</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">contract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mapper</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ObjectMapper</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> discoverer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> DefaultParameterNameDiscoverer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">SpringMvcContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">listOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">EntityFiltersMappingParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mapper</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> discoverer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">MatrixVariableParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">RequestHeaderParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">PathVariableParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">RequestPartParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">QueryMapParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><code>SpringMvcContract</code>够帮助我们实现Feign的注解参数的解析(例如<code>@RequestParam</code>, <code>@PathVariable</code>)</p>
</blockquote>
<blockquote>
<p>框架升级前的行为:<br>
由于框架升级前的代码没有为<code>SpringMvcContract</code>配置<code>ConversionService</code>, 所以<code>SpringMvcContract</code>无法处理<code>ZonedDateTime</code>
从而导致触发了Feign的默认行为也就是调用参数的<code>toString</code>方法来将参数转为String, 对于<code>ZonedDateTime</code>类型的参数,
调用<code>toString</code>方法, 生成的字符串格式为<code>iso-8601</code>格式, 例如<code>2023-12-18T02:57:00+08:00[Asia/Shanghai]</code>,
这种格式的字符串服务端是可以解析的</p>
<p>框架升级后的行为:<br>
由于框架内部配置了<code>ConversionService</code>, 所以会调用<code>ConversionService</code>的<code>convert</code>
方法来实现将参数的解析, <code>ConversionService</code>
最终会委托<code>FormattingConversionService</code>将<code>ZonedDateTime</code>类型的参数转为字符串, 这种情况下,
会将时间转为<code>yyyy/MM/dd HH:mm</code>格式的字符串, 所以导致了服务端无法解析.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>为参数增加<code>@DateTimeFormat</code>注解来指定时间格式化的格式, 例如:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">FeignClient</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@GetMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">List</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">PlatformStandardOrderDto</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@DateTimeFormat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iso </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">DateTimeFormat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">ISO</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">DATE_TIME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> startTime</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@DateTimeFormat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iso </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">DateTimeFormat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">ISO</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">DATE_TIME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> endTime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题排查过程">问题排查过程<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E8%BF%87%E7%A8%8B" class="hash-link" aria-label="问题排查过程的直接链接" title="问题排查过程的直接链接">​</a></h2>
<ul>
<li>当FeignClient接口的方法被调用时, 会调用<code>ReflectiveFeign</code>来委托<code>MethodHandler</code>来处理方法调用</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Object</span><span class="token plain"> proxy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Method</span><span class="token plain"> method</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">Throwable</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"equals"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">Object</span><span class="token plain"> otherHandler </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					args</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token class-name">Proxy</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getInvocationHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">otherHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">IllegalArgumentException</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hashCode"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hashCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"toString"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> dispatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其中<code>dispatch</code>是用来保存方法名称和<code>MethodHandler</code>的映射关系的, <code>MethodHandler</code>是用来处理方法调用(
当前的实现中<code>MethodHandler</code>是<code>SynchronousMethodHandler</code>)</p>
<ul>
<li>MethodHandler内部的invoke执行流程如下:</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">Throwable</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> buildTemplateFromArgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">Options</span><span class="token plain"> options </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">Retryer</span><span class="token plain"> retryer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">retryer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">executeAndDecode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">RetryableException</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				retryer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">continueOrPropagate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">RetryableException</span><span class="token plain"> th</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token class-name">Throwable</span><span class="token plain"> cause </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> th</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCause</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">propagationPolicy </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">UNWRAP</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> cause </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> cause</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> th</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logLevel </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token class-name">Logger</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">Level</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">NONE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">logRetry</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">configKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> logLevel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">continue</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码中我们需要关心的是<code>buildTemplateFromArgs.create(argv);</code>这一行,
这一行代码会根据方法的参数来构建<code>RequestTemplate</code>,
<code>RequestTemplate</code>是用来保存请求的信息的, 例如请求的URL, 请求的方法,
请求的参数等等, 只要知道了<code>RequestTemplate</code>中对应参数的构造过程那么我们就可以知道Feign是如何将参数转为请求的参数的了</p>
<ul>
<li><code>buildTemplateFromArgs.create(argv);</code>的具体实现如下:</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> mutable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">template</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	mutable</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">feignTarget</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">urlIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> urlIndex </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">urlIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">checkArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">urlIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"URI parameter %s was null"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> urlIndex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		mutable</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">target</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">valueOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">urlIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> varBuilder </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LinkedHashMap</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Entry</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">Integer</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Collection</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> entry </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">indexToName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">entrySet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Object</span><span class="token plain"> value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Null values are skipped.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">indexToExpander</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">containsKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">expandElements</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">indexToExpander</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				varBuilder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mutable</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> varBuilder</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">queryMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// add query map parameters after initial resolve so that they take</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// precedence over any predefined values</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Object</span><span class="token plain"> value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">queryMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> queryMap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">toQueryMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">addQueryMapQueryParameters</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryMap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> template</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">headerMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token function" style="color:#d73a49">addHeaderMapHeaders</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">headerMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> template</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> template</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码中我们需要关注的是这个语句</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if (value != null) { // Null values are skipped.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if (indexToExpander.containsKey(i)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		value = expandElements(indexToExpander.get(i), value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	for (String name : entry.getValue()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		varBuilder.put(name, value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private Object expandElements(Expander expander, Object value) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if (value instanceof Iterable) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return expandIterable(expander, (Iterable) value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return expander.expand(value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个语句会将参数转为<code>RequestTemplate</code>中的参数, <code>Expander</code>是<code>Feign</code>中的一个接口, 用来将参数转为字符串,
而<code>indexToExpander</code>表达的是参数的索引和<code>Expander</code>的映射关系,
在我们的<code>Case</code>中实际上是没有走到<code>indexToExpander</code>的, 所以最终会直接调用<code>varBuilder.put(name, value);</code>这一行,
这一行会将参数转为<code>RequestTemplate</code>中的参数,
后续需要将参数值转为字符串, 所以还需要了解<code>RequestTemplate</code>中的参数是如何转为字符串的,
所以需要查看<code>RequestTemplate template = resolve(argv, mutable, varBuilder);</code>
这一段调用的resolve方法, 具体实现如下:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">protected RequestTemplate resolve(Object[] argv,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">								  RequestTemplate mutable,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">								  Map&lt;String, Object&gt; variables) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return mutable.resolve(variables);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>接下来需要查看<code>RequestTemplate</code>中的<code>resolve</code>方法的实现, 具体实现如下:</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics operator" style="color:#393A34">?</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">StringBuilder</span><span class="token plain"> uri </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">StringBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* create a new template form this one, but explicitly */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> resolved </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">uriTemplate </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">/* create a new uri template using the default root */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">uriTemplate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">UriTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decodeSlash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">charset</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">String</span><span class="token plain"> expanded </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">uriTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expanded </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expanded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * for simplicity, combine the queries into the uri and use the resulting uri to seed the</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * resolved template.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queries</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 * since we only want to keep resolved query values, reset any queries on the resolved copy</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">queries</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">emptyMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">StringBuilder</span><span class="token plain"> query </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">StringBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Iterator</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">QueryTemplate</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> queryTemplates </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queries</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">iterator</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryTemplates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">QueryTemplate</span><span class="token plain"> queryTemplate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> queryTemplates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">String</span><span class="token plain"> queryExpanded </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> queryTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isNotBlank</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryExpanded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryExpanded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryTemplates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&amp;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">String</span><span class="token plain"> queryString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">queryString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">Matcher</span><span class="token plain"> queryMatcher </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">QUERY_STRING_PATTERN</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">matcher</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uri</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryMatcher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">/* the uri already has a query, so any additional queries should be appended */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&amp;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"?"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* add the uri to result */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">uri</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* headers */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 * same as the query string, we only want to keep resolved values, so clear the header map on</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 * the resolved instance</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">emptyMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">HeaderTemplate</span><span class="token plain"> headerTemplate </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">/* resolve the header */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">String</span><span class="token plain"> header </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> headerTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">/* split off the header values and add it to the resolved template */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token class-name">String</span><span class="token plain"> headerValues </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">indexOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">headerValues</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token comment" style="color:#999988;font-style:italic">/* append the header as a new literal as the value has already been expanded. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">headerTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Literal</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">headerValues</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bodyTemplate </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">body</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bodyTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* mark the new template resolved */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">resolved </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> resolved</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码比较长, 我们需要关注的是这一段:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">	if (!this.queries.isEmpty()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      /*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       * since we only want to keep resolved query values, reset any queries on the resolved copy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      resolved.queries(Collections.emptyMap());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      StringBuilder query = new StringBuilder();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Iterator&lt;QueryTemplate&gt; queryTemplates = this.queries.values().iterator();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      while (queryTemplates.hasNext()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        QueryTemplate queryTemplate = queryTemplates.next();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String queryExpanded = queryTemplate.expand(variables);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (Util.isNotBlank(queryExpanded)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          query.append(queryExpanded);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          if (queryTemplates.hasNext()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            query.append("&amp;");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      String queryString = query.toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if (!queryString.isEmpty()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Matcher queryMatcher = QUERY_STRING_PATTERN.matcher(uri);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (queryMatcher.find()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          /* the uri already has a query, so any additional queries should be appended */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          uri.append("&amp;");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          uri.append("?");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        uri.append(queryString);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最终这个语句<code>String queryExpanded = queryTemplate.expand(variables);</code>会将参数转为字符串, 所以最终我们得到了参数的字符串形式,</p>]]></content:encoded>
            <category>problem-solving</category>
            <category>spring-cloud</category>
            <category>spring-cloud-openfeign</category>
            <category>openfeign</category>
        </item>
        <item>
            <title><![CDATA[升级到spring-boot-3.1.0后native-image启动报错以及问题解决]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions</guid>
            <pubDate>Thu, 01 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[本文主要介绍升级到spring-boot-3.1.0后native-image启动报错以及对应问题的解决方案]]></description>
            <content:encoded><![CDATA[<p>本文主要介绍升级到spring-boot-3.1.0后native-image启动报错以及对应问题的解决方案</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-no-classes-have-been-predefined-during-the-image-build-to-load-from-bytecodes-at-runtime">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-no-classes-have-been-predefined-during-the-image-build-to-load-from-bytecodes-at-runtime" class="hash-link" aria-label="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.的直接链接" title="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.的直接链接">​</a></h2>
<p>日志如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1156) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1305) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1294) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at com.fastonetech.auditing.FastoneAuditingApplicationKt.main(FastoneAuditingApplication.kt:13) ~[fastone-auditing:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at com.fastonetech.auditing.FastoneAuditingApplicationKt.main(FastoneAuditingApplication.kt) ~[fastone-auditing:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: com.oracle.svm.core.jdk.UnsupportedFeatureError: No classes have been predefined during the image build to load from bytecodes at runtime.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.graalvm.nativeimage.builder/com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:89) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.graalvm.nativeimage.builder/com.oracle.svm.core.hub.PredefinedClassesSupport.throwNoBytecodeClasses(PredefinedClassesSupport.java:76) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.graalvm.nativeimage.builder/com.oracle.svm.core.hub.PredefinedClassesSupport.loadClass(PredefinedClassesSupport.java:130) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base@17.0.5/java.lang.ClassLoader.defineClass(ClassLoader.java:294) ~[fastone-auditing:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1383) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher$InvokerCreationAction.run(JavaDispatcher.java:459) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher$InvokerCreationAction.run(JavaDispatcher.java:452) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base@17.0.5/java.security.AccessController.executePrivileged(AccessController.java:168) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base@17.0.5/java.security.AccessController.doPrivileged(AccessController.java:318) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher.doPrivileged(JavaDispatcher.java) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher.&lt;clinit&gt;(JavaDispatcher.java:87) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.&lt;clinit&gt;(TypeDescription.java:8659) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.matcher.ElementMatchers.isFinalizer(ElementMatchers.java:1624) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.&lt;init&gt;(ByteBuddyState.java:296) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState.&lt;clinit&gt;(ByteBuddyState.java:71) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.&lt;init&gt;(BytecodeProviderImpl.java:123) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.&lt;init&gt;(BytecodeProviderImpl.java:115) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.BytecodeProviderInitiator.buildBytecodeProvider(BytecodeProviderInitiator.java:59) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.BytecodeProviderInitiator.buildDefaultBytecodeProvider(BytecodeProviderInitiator.java:46) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.internal.enhance.EnhancingClassTransformerImpl.&lt;init&gt;(EnhancingClassTransformerImpl.java:34) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:113) ~[fastone-auditing:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.&lt;init&gt;(EntityManagerFactoryBuilderImpl.java:340) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.&lt;init&gt;(EntityManagerFactoryBuilderImpl.java:190) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ... 17 common frames omitted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h3>
<p>这个问题是<code>springframework</code>和<code>hibernate</code>之间的集成问题, 需要将<code>springframework</code>升级到<code>6.0.10-SNAPSHOT</code>版本即可解决该问题
详细<code>issue</code>
见<a href="https://github.com/spring-projects/spring-framework/issues/30492" target="_blank" rel="noopener noreferrer">Skip class transformer in PersistenceUnitInfoDescriptor for native images #30492</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>现在在写解决方案的时候, <code>springframework</code>的最新版本是<code>6.0.9</code>, 如果后续<code>6.0.10</code>版本发布, 则可以直接使用<code>6.0.10</code>版本.</p></div></div>
<p>将<code>springframework</code>升级到<code>6.0.10-SNAPSHOT</code>版本, 该版本中修复了<code>hibernate</code>的集成问题.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">implementation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">platform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"org.springframework:spring-framework-bom:6.0.10-SNAPSHOT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-null">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-null" class="hash-link" aria-label="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null的直接链接" title="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null的直接链接">​</a></h2>
<p>日志如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1156) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1305) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1294) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at com.example.Application.main(Application.java:16) ~[springboot3-todo:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: java.lang.ExceptionInInitializerError: null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.logSelectedDialect(DialectFactoryImpl.java:93) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:88) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:224) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.model.relational.Database.&lt;init&gt;(Database.java:45) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:229) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.&lt;init&gt;(InFlightMetadataCollectorImpl.java:197) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:74) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ... 16 common frames omitted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: java.lang.IllegalArgumentException: Invalid logger interface org.hibernate.dialect.DialectLogging (implementation not found in jdk.internal.loader.ClassLoaders$AppClassLoader@3ecf72fd)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.jboss.logging.Logger.doGetMessageLogger(Logger.java:2564) ~[springboot3-todo:3.5.0.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.jboss.logging.Logger.getMessageLogger(Logger.java:2530) ~[springboot3-todo:3.5.0.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.jboss.logging.Logger.getMessageLogger(Logger.java:2516) ~[springboot3-todo:3.5.0.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.dialect.DialectLogging.&lt;clinit&gt;(DialectLogging.java:31) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ... 37 common frames omitted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因-1">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-1" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h3>
<p>这个问题是<code>hibernate</code>中涉及到反射调用的相关的类没有注册到<code>reflect-config.json</code>中导致的.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>现在在写这篇文章的时候,<code>org.graalvm.buildtools.native</code>的插件使用的<code>metadataRepository</code>的版本还是<code>0.3.0</code>.
这个版本中还没有为<code>hibernate</code>相关的类注册到<code>reflect-config.json</code>中, 如果后续<code>0.3.2</code>版本发布了, 那么可以直接使用<code>0.3.2</code>
版本的插件, 不需要再手动添加<code>reflect-config.json</code>文件了.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-1">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-1" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>resources</code>下的<code>META-INF/native-image</code>下的名为<code>reflect-config.json</code>的文件中增加如下内容</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.dialect.DialectLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.boot.jaxb.JaxbLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.engine.jdbc.JdbcLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.sql.results.graph.embeddable.EmbeddableLoadingLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h3>
<ul>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata/pull/286" target="_blank" rel="noopener noreferrer">Fix compatibility with Hibernate 6.2.2</a></li>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata/issues/297" target="_blank" rel="noopener noreferrer">Missing logger reflection entries for Hibernate 6.2</a></li>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata/commit/afb9a1ee44e0a18b9cd31f04e038caea32d308a3" target="_blank" rel="noopener noreferrer">Add missing logger metadata for Hibernate 6.2</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>上面是我目前升级到<code>spring-boot-3.1.0</code>后遇到的问题, 总的来说这些问题都是因为框架内部的一些集成问题导致的.<br>
目前<code>graalvm</code>的<code>native-image</code>插件还不是很完善, 有些问题还需要我们自己去解决, 但是相信随着<code>graalvm</code>的发展, 这些问题都会逐渐解决的.
<code>oracle</code>维护了一个<code>graalvm</code>的<code>reachability-metadata</code>的项目, 用来解决一些框架集成的问题, 我们可以在这个项目中查看到一些框架的集成问题的解决方案.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料-1">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99-1" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata" target="_blank" rel="noopener noreferrer">graalvm-reachability-metadata</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>spring-boot</category>
            <category>spring-framework</category>
            <category>native-image</category>
        </item>
        <item>
            <title><![CDATA[基于hibernate的spring-data-jpa的并发性能优化配置]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios</guid>
            <pubDate>Fri, 26 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[摘要]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="摘要">摘要<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E6%91%98%E8%A6%81" class="hash-link" aria-label="摘要�的直接链接" title="摘要的直接链接">​</a></h2>
<p>默认情况下，<code>spring-data-jpa</code>使用<code>hibernate</code>作为<code>jpa</code>的实现, 当并发量较大时, 由于框架的一些默认配置可能会引发性能瓶颈,
下面将介绍一些常见的配置项来改善并发量较大时的性能问题.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="禁用open-in-view">禁用<code>open-in-view</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E7%A6%81%E7%94%A8open-in-view" class="hash-link" aria-label="禁用open-in-view的直接链接" title="禁用open-in-view的直接链接">​</a></h2>
<p>在<code>spring-boot</code>中默认开启了<code>open-in-view</code>，这个配置项的作用是在整个请求上下文复用同一个<code>EntityManager</code>.<br>
该实现的好处是避免在同一个请求中多次创建一个<code>EntityManager</code>, 从而提高性能.<br>
当系统并发较大时且系统相应较慢, 由于<code>EntityManager</code>会持有数据库链接直到整个请求处理完成, 如果没有特别的需求, 例如:</p>
<ul>
<li>在<code>View</code>层使用Entity对象中<code>cascade</code>为<code>lazy</code>的关联对象</li>
</ul>
<p>可以考虑禁用<code>open-in-view</code>来提高性能</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>application.yml</code>中添加如下配置:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">application.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">open-in-view</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="覆盖hibernateconnectionhandling_mode配置项的默认配置">覆盖<code>hibernate.connection.handling_mode</code>配置项的默认配置<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E8%A6%86%E7%9B%96hibernateconnectionhandling_mode%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9A%84%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="覆盖hibernateconnectionhandling_mode配置项的默认配置的直接链接" title="覆盖hibernateconnectionhandling_mode配置项的默认配置的直接链接">​</a></h2>
<p><code>hibernate.connection.handling_mode</code>用于配置<code>EntityManager</code>中关联的数据库连接(创建及销毁时机)的控制.<br>
默认值创建时机为第一次与数据库交互, 关闭时机为<code>EntitiyManager</code>被关闭, 此举的目的是为了确保数据连接的最大化利用(
因为数据库连接的创建通常比较昂贵).<br>
但是对于带用<code>DataSource</code>的应用来说, 此配置并不会改善性能问题, 因为<code>DataSource</code>存在的意义就是复用数据库连接.<br>
并且由于<code>EntityManager</code>关联的数据库连接只有在关闭时才会被释放, 如果遇到<code>EntityManager</code>
长时间存活时并且此时系统并发较大会导致数据库没有空闲的连接导致后续请求被堵塞甚至获取数据库连接超时.<br></p>
<p>为了解决这个问题, 可以考虑配置<code>hibernate.connection.handling_mode</code>配置项对应的值,
该配置对应的枚举类为<code>PhysicalConnectionHandlingMode</code>, 枚举类中有如下几个值</p>
<p>对于没有使用<code>DataSource</code>的应用来说, 可以考虑以下几个值, 这几个值都是为了确保数据库连接的最大化利用, 因为创建数据库连接比较昂贵.</p>
<ul>
<li>IMMEDIATE_ACQUISITION_AND_HOLD
<br>表示连接会在<code>EntityManager</code>创建时获取, 关闭时释放.
<br>该配置的目的是为了能够在整个请求上下文中复用同一个数据库连接, 因为创建数据库连接比较昂贵.
但是对于带用<code>DataSource</code>的应用来说, 此配置并不会改善性能问题, 因为<code>DataSource</code>存在的意义就是复用数据库连接.</li>
<li>DELAYED_ACQUISITION_AND_HOLD<br>
<br>表示连接会<code>EntityManager</code>和数据库产生交互时获取, 关闭时释放. 这是默认的配置.
<br>此配置和上面的配置除了获取连接的时机不同外, 其他都相同.</li>
</ul>
<p>对于使用<code>DataSource</code>的应用来说, 可以积极地释放数据库链接来提高系统吞吐率, 因为<code>DataSource</code>已经帮我们做了数据库连接的复用,</p>
<ul>
<li>DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT
<br>如果需要执行多个独立的语句，那么可以选择此配置</li>
<li>DELAYED_ACQUISITION_AND_RELEASE_BEFORE_TRANSACTION_COMPLETION
<br>如果应用程序需要执行多个事务，并且不在乎事务的一致性，那么可以选择此配置.<br>
<br>这个配置一个潜在的问题是由于事务提交前会释放数据库连接, 如果后续事务提交时需要获取数据库连接时出现了问题会导致事务提交失败,
从而导致数据库中的事务一直处于开启状态</li>
<li>DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION
<br>如果需要处理事务, 并且为了保证事务的一致性, 那么可以选择此配置</li>
</ul>
<p>一般来说, 如果应用程序需要处理事务, 并且为了保证事务的一致性,
那么可以选择<code>DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION</code>配置.
如果应用不在乎事务的一致性, 那么可以选择<code>DELAYED_ACQUISITION_AND_RELEASE_BEFORE_TRANSACTION_COMPLETION</code>配置,
由于此配置会在事务提交前释放数据库连接,有可能会导致后续事务提交时获取数据库连接失败, 从而导致事务提交失败,
从而导致数据库中的事务一直处于开启状态, 所以此配置需要谨慎使用.
如果应用不需要处理事务, 那么可以选择<code>DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT</code>配置.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-1">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-1" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>application.yml</code>中添加如下配置:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">application.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">properties</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">hibernate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">connection</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">handling_mode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> your_handling_mode</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="open-in-view">Open In View<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#open-in-view" class="hash-link" aria-label="Open In View的直接链接" title="Open In View的直接链接">​</a></h3>
<ul>
<li><a href="https://www.baeldung.com/spring-open-session-in-view" target="_blank" rel="noopener noreferrer">A Guide to Spring’s Open Session in View</a></li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html" target="_blank" rel="noopener noreferrer">OpenEntityManagerInViewInterceptor</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="connection-control">Connection Control<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#connection-control" class="hash-link" aria-label="Connection Control的直接链接" title="Connection Control的直接链接">​</a></h3>
<ul>
<li><a href="https://vladmihalcea.com/hibernate-aggressive-connection-release/" target="_blank" rel="noopener noreferrer">How does aggressive connection release work in Hibernate</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html#database-connection-handling" target="_blank" rel="noopener noreferrer">Connection handling</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.html" target="_blank" rel="noopener noreferrer">PhysicalConnectionHandlingMode</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/cfg/AvailableSettings.html" target="_blank" rel="noopener noreferrer">AvailableSettings</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="additional-high-performance-optimizations">Additional High-Performance Optimizations<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#additional-high-performance-optimizations" class="hash-link" aria-label="Additional High-Performance Optimizations的直接链接" title="Additional High-Performance Optimizations的直接链接">​</a></h3>
<ul>
<li><a href="https://vladmihalcea.com/tutorials/hibernate/" target="_blank" rel="noopener noreferrer">High-Performance Hibernate Tutorial</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html#best-practices" target="_blank" rel="noopener noreferrer">Performance Tuning and Best Practices</a></li>
</ul>]]></content:encoded>
            <category>spring-boot</category>
            <category>spring-data-jpa</category>
            <category>hibernate</category>
            <category>performance</category>
        </item>
        <item>
            <title><![CDATA[解决无法输入中文字符到vscode]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/15/solve-unable-to-input-chinese-character-into-vscode</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/15/solve-unable-to-input-chinese-character-into-vscode</guid>
            <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[当通过snap安装vscode后，无法输入中文字符，解决方案是在官网下载deb包安装，这样就可以输入中文字符了.]]></description>
            <content:encoded><![CDATA[<p>当通过<code>snap</code>安装<code>vscode</code>后，无法输入中文字符，解决方案是在<a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">官网</a>下载<code>deb</code>包安装，这样就可以输入中文字符了.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/solve-unable-to-input-chinese-character-into-vscode#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/microsoft/vscode/issues/96041" target="_blank" rel="noopener noreferrer">unable to input chinese character</a></li>
</ul>]]></content:encoded>
            <category>vscode</category>
            <category>snap</category>
            <category>deb</category>
        </item>
        <item>
            <title><![CDATA[通过关闭OpenEntityManagerInViewInterceptor确保当下游服务响应缓慢时不会导致数据库连接被占用完]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview</guid>
            <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[OpenEntityManagerInViewInterceptor是spring中的一个拦截器，它的作用是在整个请求上下文复用同一个EntityManager]]></description>
            <content:encoded><![CDATA[<p><code>OpenEntityManagerInViewInterceptor</code>是<code>spring</code>中的一个拦截器，它的作用是在整个请求上下文复用同一个<code>EntityManager</code>
，从而避免在一个请求中多次创建一个<code>EntityManager</code>, 从而提高性能.<br>
但是如果在一个请求的处理代码中请求了下游服务，而下游服务响应缓慢，那么在下游服务响应之前，<code>EntityManager</code>
会一直被占用，直到整个请求处理完成，这样会导致当服务并发请求量较大时，数据库连接被占用完.<br>
为了避免这种情况，可以通过关闭<code>OpenEntityManagerInViewInterceptor</code>来确保当下游服务响应缓慢时不会导致数据库连接被占用完.
下面将介绍如何关闭<code>OpenEntityManagerInViewInterceptor</code>.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>在<code>spring-boot</code>中，可以通过配置<code>spring.jpa.open-in-view</code>为<code>false</code>来关闭<code>OpenEntityManagerInViewInterceptor</code>，示例如下</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">application.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">open-in-view</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<ul>
<li>
<p><code>org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor</code>在请求开始时会创建一个<code>EntityManager</code>
并调用<code>org.springframework.transaction.support.TransactionSynchronizationManager.bindResource</code>
方法来绑定<code>EntityManager</code>到当前线程</p>
</li>
<li>
<p>后续框架内部的调用例如<code>Repository.findAll()</code>的大致调用链路如下</p>
<ul>
<li>Repository.findAll()</li>
<li>org.springframework.orm.jpa.SharedEntityManagerCreator.SharedEntityManagerInvocationHandler.invoke</li>
<li>org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetTransactionalEntityManager</li>
<li>org.springframework.transaction.support.TransactionSynchronizationManager.getResource
<br>因为在请求开始时已经将<code>EntityManager</code>绑定到当前线程，所以这里会获取到之前创建的<code>EntityManager</code></li>
</ul>
</li>
<li>
<p>后续执行<code>query</code>时会从<code>DataSource</code>中获取一个数据库连接，然后执行查询，查询完成后，数据库连接不会立即关闭，
而是在<code>EntityManager</code>被关闭时关闭，而<code>EntityManager</code>会在<code>OpenEntityManagerInViewInterceptor</code>被关闭时关闭.</p>
</li>
</ul>
<p>综上所述，当<code>OpenEntityManagerInViewInterceptor</code>被关闭时，<code>EntityManager</code>会被关闭，而<code>EntityManager</code>
被关闭时其对应的数据库连接也会被关闭.<br>
<code>EntityManager</code>被创建出来时不会立即创建数据库连接，而是在执行<code>sql</code>时才会创建数据库连接.<br>
如果整个请求链路非常耗时，那么在整个请求链路中，<code>EntityManager</code>对应的数据库连接都会被占用，直到整个请求链路执行完成.<br>
如果同时有多个请求正在执行, 那么会导致数据库连接被占用完. 从而导致后续请求无法获取数据库连接.<br>
为了避免这种情况，可以通过关闭<code>OpenEntityManagerInViewInterceptor</code>来确保当下游服务响应缓慢时不会导致数据库连接被占用完.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://stackoverflow.com/questions/71140137/when-does-jpa-return-connection-to-db-pool" target="_blank" rel="noopener noreferrer">When does JPA return connection to db pool</a></li>
<li><a href="https://www.baeldung.com/spring-open-session-in-view" target="_blank" rel="noopener noreferrer">A Guide to Spring’s Open Session in View</a></li>
</ul>]]></content:encoded>
            <category>spring-boot</category>
            <category>spring-data-jpa</category>
        </item>
        <item>
            <title><![CDATA[通过创建rsa格式的私钥以及服务端启用rsa认证解决jsch连接ssh失败的问题]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server</guid>
            <pubDate>Fri, 05 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[服务建立ssh连接失败, 问题定位为jsch不支持openssh格式的私钥.]]></description>
            <content:encoded><![CDATA[<p>服务建立<code>ssh</code>连接失败, 问题定位为<code>jsch</code>不支持<code>openssh</code>格式的私钥.<br>
在<code>OpenSSH 7.8</code>及之后的版本, <code>ssh-keygen</code>命令默认生成的私钥格式为<code>openssh</code>.<br>
该格式的头部为<code>-----BEGIN OPENSSH PRIVATE KEY-----</code>.<br></p>
<p>在将私钥转换为<code>rsa</code>格式后, 发现服务端还需要启用<code>rsa</code>认证, 在启用<code>rsa</code>认证后问题解决.<br></p>
<p>下面将详细介绍如何生成<code>rsa</code>格式的私钥以及服务端启用<code>rsa</code>认证.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="生成rsa格式的私钥">生成rsa格式的私钥<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server#%E7%94%9F%E6%88%90rsa%E6%A0%BC%E5%BC%8F%E7%9A%84%E7%A7%81%E9%92%A5" class="hash-link" aria-label="生成rsa格式的私钥的直接链接" title="生成rsa格式的私钥的直接链接">​</a></h2>
<p>服务建立<code>ssh</code>链接失败, 日志如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: com.jcraft.jsch.JSchException: invalid privatekey: [B@e4487af</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.KeyPair.load(KeyPair.java:664)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.KeyPair.load(KeyPair.java:561)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:40)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.JSch.addIdentity(JSch.java:407)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.JSch.addIdentity(JSch.java:367)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在查阅了相关问题后, 发现<code>jsch</code>不支持<code>openssh</code>格式的私钥, 需要将私钥转换为<code>rsa</code>格式.<br></p>
<p>通过以下命令生成<code>rsa</code>格式的私钥</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh-keygen -t rsa -b 4096 -m PEM</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>后续会提示输入私钥的文件名, 以及私钥的密码, 一般直接回车即可.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="服务端启用rsa认证">服务端启用rsa认证<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%90%AF%E7%94%A8rsa%E8%AE%A4%E8%AF%81" class="hash-link" aria-label="服务端启用rsa认证的直接链接" title="服务端启用rsa认证的直接链接">​</a></h2>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p><code>OpenSSH 8.8</code>及之后的版本默认禁用rsa认证, 需要手动启用, 可以通过<code>ssh -V</code>查看<code>sshd</code>版本</p></div></div>
<p>在生成了<code>rsa</code>格式的私钥后, 通过<code>ssh</code>连接服务端, 发现连接失败, 查看<code>sshd</code>日志发现如下错误</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">journalctl -t sshd -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该命令输出如下内容</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">May 05 18:05:00 orange sshd[289365]: userauth_pubkey: signature algorithm ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">May 05 18:05:00 orange sshd[289365]: error: Received disconnect from 127.0.0.1 port 55904:3: com.jcraft.jsch.JSchException: Auth fail [preauth]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">May 05 18:05:00 orange sshd[289365]: Disconnected from authenticating user fastone 127.0.0.1 port 55904 [preauth]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述日志中的<code>signature algorithm ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]</code>说明<code>sshd</code>不支持<code>ssh-rsa</code>算法.<br></p>
<p>为了解决这个问题, 我们需要编辑<code>/etc/ssh/sshd_config</code>并增加以下内容</p>
<div class="language-properties codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/etc/ssh/sshd_config</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-properties codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PubkeyAcceptedAlgorithms +ssh-rsa</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>编辑完成后重启<code>sshd</code>服务</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart sshd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch" target="_blank" rel="noopener noreferrer">"Invalid privatekey" when using JSch</a></li>
<li><a href="https://www.matez.de/index.php/2020/10/16/support-for-openssh-default-key-format-in-jsch-fork/#:~:text=If%20you%20are%20a%20user,them%20to%20old%20pem%20format.&amp;text=Please%20upgrade%20to%20version%200.1,and%20give%20it%20a%20try." target="_blank" rel="noopener noreferrer">support for openssh default key format in jsch fork</a></li>
<li><a href="https://unix.stackexchange.com/questions/721606/ssh-server-gives-userauth-pubkey-key-type-ssh-rsa-not-in-pubkeyacceptedalgorit" target="_blank" rel="noopener noreferrer">SSH server gives "userauth_pubkey: key type ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]" when connecting with Putty</a></li>
<li><a href="https://github.com/mwiede/jsch" target="_blank" rel="noopener noreferrer">第三方基于jsch fork出来的库</a></li>
<li><a href="https://stackoverflow.com/questions/54994641/openssh-private-key-to-rsa-private-key" target="_blank" rel="noopener noreferrer">Openssh Private Key to RSA Private Key</a></li>
<li><a href="https://wiki.archlinux.org/title/SSH_keys" target="_blank" rel="noopener noreferrer">SSH keys</a></li>
</ul>]]></content:encoded>
            <category>jsch</category>
            <category>openssh</category>
            <category>sshd</category>
            <category>ssh-keygen</category>
            <category>rsa</category>
        </item>
        <item>
            <title><![CDATA[使用kind创建一个k8s集群]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster</guid>
            <pubDate>Sun, 23 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[kind是一个用于创建k8s集群的工具, 它使用docker容器作为节点, 可以快速创建一个k8s集群,]]></description>
            <content:encoded><![CDATA[<p>kind是一个用于创建<code>k8s</code>集群的工具, 它使用<code>docker</code>容器作为节点, 可以快速创建一个<code>k8s</code>集群,
用于测试或者开发.<br>
官方提供了相应的文档<a href="https://kind.sigs.k8s.io/docs/user/ingress/" target="_blank" rel="noopener noreferrer">Ingress</a>, 在使用该文档的时候出现了一些问题.<br>
本文基于官方文档并作出了一定的修改介绍如何使用<code>kind</code>创建一个<code>k8s</code>集群, 并在集群中部署<code>kong-ingress</code>.最后部署一个测试应用并通过<code>kong-ingress</code>访问该应用.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装kind">安装kind<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%AE%89%E8%A3%85kind" class="hash-link" aria-label="安装kind的直接链接" title="安装kind的直接链接">​</a></h2>
<p>执行以下命令安装<code>kind</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">go install sigs.k8s.io/kind@v0.18.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建一个k8s集群">创建一个k8s集群<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAk8s%E9%9B%86%E7%BE%A4" class="hash-link" aria-label="创建一个k8s集群的直接链接" title="创建一个k8s集群的直接链接">​</a></h2>
<p>执行以下命令创建一个<code>k8s</code>集群, 集群中包含一个<code>master</code>节和一个<code>worker</code>节点.<br>
同时将<code>master</code>节点的<code>80&amp;443</code>端口映射到宿主机的<code>80&amp;443</code>端口, 用于后续将<code>ingress</code>映射到宿主机的<code>80&amp;443</code>端口.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF | kind create cluster --config=-</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Cluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: kind.x-k8s.io/v1alpha4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nodes:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - role: control-plane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubeadmConfigPatches:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        kind: InitConfiguration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nodeRegistration:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          kubeletExtraArgs:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            node-labels: "ingress-ready=true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    extraPortMappings:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - containerPort: 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hostPort: 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        protocol: TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - containerPort: 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hostPort: 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        protocol: TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - role: worker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>执行<code>docker ps</code>命令查看<code>kind</code>创建的<code>docker</code>容器</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER ID   IMAGE                               COMMAND                  CREATED       STATUS       PORTS                                                                 NAMES</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b4368e7fbfb1   kindest/node:v1.26.3                "/usr/local/bin/entr…"   2 hours ago   Up 2 hours   0.0.0.0:80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, 127.0.0.1:45145-&gt;6443/tcp   kind-control-plane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c0638805438a   kindest/node:v1.26.3                "/usr/local/bin/entr…"   2 hours ago   Up 2 hours                                                                         kind-worker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装kong">安装<code>kong</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%AE%89%E8%A3%85kong" class="hash-link" aria-label="安装kong的直接链接" title="安装kong的直接链接">​</a></h2>
<p>执行以下命令安装<code>kong-ingress</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/Kong/kubernetes-ingress-controller/main/deploy/single/all-in-one-dbless.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置kong">配置<code>kong</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E9%85%8D%E7%BD%AEkong" class="hash-link" aria-label="配置kong的直接链接" title="配置kong的直接链接">​</a></h2>
<p>执行以下命令配置<code>kong</code>.<br>
第一个命令用于将<code>deployment</code>为<code>proxy-kong</code>下面的<code>pod</code>的<code>replicas</code>设置为<code>1</code>同时将端口映射到<code>host</code>上(
这里的host就是<code>docker</code>容器的<code>host</code>, 同时docker容器对应的<code>port</code>又映射到了本地的端口).<br></p>
<p>第二个命令用于将<code>kong-proxy</code>的<code>service</code>的类型设置为<code>NodePort</code>, 这样就可以通过<code>host</code>的<code>port</code>访问<code>kong</code>了.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch deployment -n kong proxy-kong -p '{"spec":{"replicas":1, "template":{"spec":{"containers":[{"name":"proxy", "ports":[{"containerPort":8000,"hostPort":80,"name":"proxy","protocol":"TCP"},{"containerPort":8443,"hostPort":443,"name":"proxy-ssl","protocol":"TCP"}]}],"nodeSelector":{"ingress-ready":"true"},"tolerations":[{"key":"node-role.kubernetes.io/control-plane","operator":"Equal","effect":"NoSchedule"},{"key":"node-role.kubernetes.io/master","operator":"Equal","effect":"NoSchedule"}]}}}}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch service -n kong kong-proxy -p '{"spec":{"type":"NodePort"}}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动测试应用">启动测试应用<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95%E5%BA%94%E7%94%A8" class="hash-link" aria-label="启动测试应用的直接链接" title="启动测试应用的直接链接">​</a></h2>
<p>创建如下文件用于后续执行<code>kubectl apply</code>命令</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">usage.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> /agnhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> netexec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8080"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> opsdockerimage/e2e</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">test</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">images</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">agnhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">2.26</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Default port used by the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> /agnhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> netexec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8080"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> opsdockerimage/e2e</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">test</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">images</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">agnhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">2.26</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Default port used by the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> example</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /$2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">rules</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">paths</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pathType</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Prefix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /foo(/</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">$)(.</span><span class="token important">*)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">backend</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token key atrule" style="color:#00a4db">number</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pathType</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Prefix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /bar(/</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">$)(.</span><span class="token important">*)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">backend</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token key atrule" style="color:#00a4db">number</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker puull kind load docker-image opsdockerimage/e2e-test-images-agnhost:2.26s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind load docker-image opsdockerimage/e2e-test-images-agnhost:2.26</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f usage.yml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="测试">测试<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="测试的直接链接" title="测试的直接链接">​</a></h2>
<p>执行以下命令测试</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl localhost/foo/hostname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">curl localhost/bar/hostname</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="遇到的问题">遇到的问题<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98" class="hash-link" aria-label="遇到的问题的直接链接" title="遇到的问题的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nginx和contour等ingress安装失败"><code>nginx</code>和<code>contour</code>等<code>ingress</code>安装失败<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#nginx%E5%92%8Ccontour%E7%AD%89ingress%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5" class="hash-link" aria-label="nginx和contour等ingress安装失败的直接链接" title="nginx和contour等ingress安装失败的直接链接">​</a></h3>
<p>这个问题的原因是因为国内无法下载对应的镜像导致无法安装成功.<br>
解决方案是采用<code>kong</code>作为<code>ingress</code>.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="官方文档中的关于kong的ingress的配置无法生效">官方文档中的关于<code>kong</code>的<code>ingress</code>的配置无法生效<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9A%84%E5%85%B3%E4%BA%8Ekong%E7%9A%84ingress%E7%9A%84%E9%85%8D%E7%BD%AE%E6%97%A0%E6%B3%95%E7%94%9F%E6%95%88" class="hash-link" aria-label="官方文档中的关于kong的ingress的配置无法生效的直接链接" title="官方文档中的关于kong的ingress的配置无法生效的直接链接">​</a></h3>
<p>执行官方文档中的如下命令失败</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch deployment -n kong ingress-kong -p '{"spec":{"template":{"spec":{"containers":[{"name":"proxy","ports":[{"containerPort":8000,"hostPort":80,"name":"proxy","protocol":"TCP"},{"containerPort":8443,"hostPort":443,"name":"proxy-ssl","protocol":"TCP"}]}],"nodeSelector":{"ingress-ready":"true"},"tolerations":[{"key":"node-role.kubernetes.io/control-plane","operator":"Equal","effect":"NoSchedule"},{"key":"node-role.kubernetes.io/master","operator":"Equal","effect":"NoSchedule"}]}}}}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>报错如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">The Deployment "ingress-kong" is invalid: spec.template.spec.containers[0].image: Required value</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个问题的原因是因为<code>deployment</code>给错了, 正确的<code>deployment</code>应该是<code>proxy-kong</code>.<br></p>
<p>将命令中的<code>ingress-kong</code>替换为<code>proxy-kong</code>后, 执行成功.<br></p>
<p>对于这个问题, 我已经提交了pr, 但是还没有被合并, 可以参考<br>
<a href="https://github.com/kubernetes-sigs/kind/pull/3183" target="_blank" rel="noopener noreferrer">doc: fix wrong implementation of creation of kong-ingress #3183</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://kind.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">kind</a></li>
</ul>]]></content:encoded>
            <category>kind</category>
            <category>k8s</category>
            <category>docker</category>
            <category>github-pr</category>
        </item>
        <item>
            <title><![CDATA[使用S3托管静态网站]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3</guid>
            <pubDate>Sun, 16 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[静态网站是指不需要后端服务的网站, 比如个人博客, 个人简历, 个人作品集等.]]></description>
            <content:encoded><![CDATA[<p>静态网站是指不需要后端服务的网站, 比如个人博客, 个人简历, 个人作品集等. <br>
这些网站的内容都是静态的, 不需要后端服务, 只需要将静态文件托管到一个服务器上即可.<br>
本文将介绍如何使用AWS S3托管静态网站.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建s3桶">创建s3桶<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3#%E5%88%9B%E5%BB%BAs3%E6%A1%B6" class="hash-link" aria-label="创建s3桶的直接链接" title="创建s3桶的直接链接">​</a></h2>
<p>首先, 我们需要创建一个s3桶, 用于存放静态文件.</p>
<p>打开AWS控制台, 选择S3服务, 点击创建桶.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启用s3静态网站托管">启用s3静态网站托管<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3#%E5%90%AF%E7%94%A8s3%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E6%89%98%E7%AE%A1" class="hash-link" aria-label="启用s3静态网站托管的直接链接" title="启用s3静态网站托管的直接链接">​</a></h2>
<p>进入s3桶, 点击<code>Properties</code>这个<code>Tab</code>, 在<code>Static website hosting</code>这个<code>Section</code>中点击<code>Edit</code>按钮.
界面如下:
<img loading="lazy" alt="2023-04-20 14-43-25.png" src="https://www.geek66.cyou/zh-CN/assets/images/2023-04-20-14-43-25-b19076b9cc6fb8b10abf06c9a2882029.png" width="800" height="923" class="img_ev3q">
填写必要的信息, 点击保存.</p>
<p>保存完成之后再次进入<code>Properties</code>这个<code>Tab</code>中, 在<code>Static website hosting</code>这个<code>Section</code>中可以看到<code>Bucket website endpoint</code>
已经显示出来了, 这个就是我们的静态网站地址.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="公开桶">公开桶<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3#%E5%85%AC%E5%BC%80%E6%A1%B6" class="hash-link" aria-label="公开桶的直接链接" title="公开桶的直接链接">​</a></h2>
<p>默认情况下, s3是私有的, 无法通过公网访问. 我们需要将桶设置为公开, 以便通过公网访问.</p>
<p>进入s3桶, 点击<code>Permissions</code>这个<code>Tab</code>, 在<code>Block public access (bucket settings)</code>这个<code>Section</code>中点击<code>Edit</code>按钮, 界面如下:
<img loading="lazy" alt="2023-04-20 14-49-00.png" src="https://www.geek66.cyou/zh-CN/assets/images/2023-04-20-14-50-45-f7c7722e8a05006617f0f75d3272effe.png" width="972" height="871" class="img_ev3q">
取消<code>Block all public access</code>的勾选, 点击保存.</p>
<p>另外还需要设置<code>Bucket policy</code>, 在<code>Bucket policy</code>这个<code>Section</code>中点击<code>Edit</code>按钮, 输入如下配置后保存.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>将<code>Bucket-Name</code>替换为自己的桶名称</p></div></div>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"Version": "2012-10-17",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"Statement": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"Sid": "PublicReadGetObject",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"Effect": "Allow",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"Principal": "*",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"Action": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"s3:GetObject"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"Resource": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"arn:aws:s3:::Bucket-Name/*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="上传静态文�件">上传静态文件<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3#%E4%B8%8A%E4%BC%A0%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6" class="hash-link" aria-label="上传静态文件的直接链接" title="上传静态文件的直接链接">​</a></h2>
<p>通过<code>aws-cli</code>或者<code>web-console</code>上传静态文件到s3桶中.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/16/hosting-a-static-website-using-s3#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://docs.amazonaws.cn/en_us/AmazonS3/latest/userguide/WebsiteHosting.html" target="_blank" rel="noopener noreferrer">Hosting a static website using Amazon S3</a></li>
<li><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteAccessPermissionsReqd.html" target="_blank" rel="noopener noreferrer">Setting permissions for website access</a></li>
</ul>]]></content:encoded>
            <category>aws</category>
            <category>s3</category>
        </item>
        <item>
            <title><![CDATA[使用Gradle的JavaPackager插件将Java应用打包成二进制文件]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app</guid>
            <pubDate>Sat, 15 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[在之前的文章中, 我介绍过如何通过graalvm将java应用打包成二进制文件, 但是这种方式需要在graalvm中安装native-image]]></description>
            <content:encoded><![CDATA[<p>在之前的文章中, 我介绍过如何通过<code>graalvm</code>将<code>java</code>应用打包成二进制文件, 但是这种方式需要在<code>graalvm</code>中安装<code>native-image</code>
工具, 并且需要在<code>graalvm</code>中编译<code>java</code>应用, 这样的方式对于<code>java</code>应用的开发者来说, 有一定的门槛, 而且也不够灵活.
并且构建过程中由于代码没有满足<code>graalvm</code>的要求, 例如使用了<code>java</code>的反射机制, 会导致构建失败(
graalvm需要在编译时就知道这些信息来生成)
下面将介绍另一种方式, 通过<code>gradle</code>的<code>JavaPackager</code>插件来构建二进制文件.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="添加插件">添加插件<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6" class="hash-link" aria-label="添加插件的直接链接" title="添加插件的直接链接">​</a></h2>
<p>要启用此插件, 需要在<code>build.gradle.kts</code>中添加如下配置:</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>由于该插件没有发布到<code>gradle</code>的插件仓库中, 所以需要在<code>buildscript</code>中添加对应的依赖并通过<code>apply</code>来启用该插件</p></div></div>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">build.gradle.kts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">buildscript </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	repositories </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		maven </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setUrl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"https://mirrors.huaweicloud.com/repository/maven/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		maven </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setUrl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"https://mirrors.tencent.com/nexus/repository/maven-public/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		maven </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setUrl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"https://maven.aliyun.com/nexus/content/groups/public/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		maven </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setUrl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"https://oss.sonatype.org/content/repositories/snapshots"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	dependencies </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">classpath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"io.github.fvarrui:javapackager:1.7.0"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plugin </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:#e3116c">"io.github.fvarrui.javapackager.plugin"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="插件配置">插件配置<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="插件配置的直接链接" title="插件配置的直接链接">​</a></h2>
<p>以<code>linux</code>为例, 介绍如何配置<code>JavaPackager</code>插:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">build.gradle.kts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">configure</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">PackagePluginExtension</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">mainClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"&lt;MAIN-CLASS&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">platform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Platform</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">linux</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">packagingJdk</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">file</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"java.home"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// arch(Arch.x64) not work</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// arch is not configured in DefaultPackageTask(导致自定义arch失效)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// packagingJdk没有设置默认值(导致jink定位到了/bin目录下而不是用户的jdk的home目录下的bin目录)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>将上面的的模板替换为自己的<code>mainClass</code>即可, 其他的配置可以根据需要进行修改.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="构建">构建<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E6%9E%84%E5%BB%BA" class="hash-link" aria-label="构建的直接链接" title="构建的直接链接">​</a></h2>
<p>执行如下命令即可构建:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./gradlew package -x test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="已知问题">已知问题<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E5%B7%B2%E7%9F%A5%E9%97%AE%E9%A2%98" class="hash-link" aria-label="已知问题的直接链接" title="已知问题的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="packagingjdk不会自动推断导致打包失败"><code>packagingJdk</code>不会自动推断导致打包失败<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#packagingjdk%E4%B8%8D%E4%BC%9A%E8%87%AA%E5%8A%A8%E6%8E%A8%E6%96%AD%E5%AF%BC%E8%87%B4%EF%BF%BD%E6%89%93%E5%8C%85%E5%A4%B1%E8%B4%A5" class="hash-link" aria-label="packagingjdk不会自动推断导致打包失败的直接链接" title="packagingjdk不会自动推断导致打包失败的直接链接">​</a></h3>
<p>执行过程中出现如下错误</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> /bin/sh: 1: /bin/jdeps: not found</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h4>
<p>该问题的原因是<code>JavaPackager</code>插件在执行<code>jdeps</code>命令时会根据<code>packagingJdk</code>配置的值拼接<code>/bin/jdeps</code>来执行,
但是由于没有配置<code>packagingJdk</code>的值, 所以默认使用了<code>/bin/jdeps</code>来执行, 但是<code>/bin/jdeps</code>并不存在, 所以导致了上面的错误.</p>
<p>相关代码在<code>io.github.fvarrui.javapackager.packagers.BundleJre</code>类的<code>doApply</code>方法中, 这个方法中会调用<code>jdeps</code>命令来获取依赖信息.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h4>
<p>解决方案就是在上面的配置中添加<code>packagingJdk</code>的配置<code>packagingJdk(file(System.getProperty("java.home")))</code>.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>2023-05-23<br>
相关pr已提交, 链接如下<br>
<a href="https://github.com/fvarrui/JavaPackager/pull/332" target="_blank" rel="noopener noreferrer">fix(gradle-default-package-task): Set default packagingJdk for bundle-jre #332</a>.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="jdeps命令执行失败报错module-xxx-not-found-required-by-xxx"><code>jdeps</code>命令执行失败报错<code>Module xxx not found, required by xxx</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#jdeps%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%E6%8A%A5%E9%94%99module-xxx-not-found-required-by-xxx" class="hash-link" aria-label="jdeps命令执行失败报错module-xxx-not-found-required-by-xxx的直接链接" title="jdeps命令执行失败报错module-xxx-not-found-required-by-xxx的直接链接">​</a></h3>
<p>在我的<code>case</code>中报错为:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Module org.yaml.snakeyaml not found, required by com.fasterxml.jackson.dataformat.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因-1">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-1" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h4>
<p>这个问题的原因通常是因为被依赖的模块版本需要升级到支持<code>java9</code>模块化之后的版本</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-1">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-1" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h4>
<p>在我的<code>case</code>中是<code>org.yaml.snakeyaml</code>需要升级, 在<code>build.gradle.kts</code>中添加如下配置后问题解决:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">build.gradle.kts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">implementation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"org.yaml:snakeyaml:2.0"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="jdeps命令执行失败报错javautilconcurrentexecutionexception-comsuntoolsjdepsmultireleaseexception"><code>jdeps</code>命令执行失败报错<code>java.util.concurrent.ExecutionException: com.sun.tools.jdeps.MultiReleaseException</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#jdeps%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%E6%8A%A5%E9%94%99javautilconcurrentexecutionexception-comsuntoolsjdepsmultireleaseexception" class="hash-link" aria-label="jdeps命令执行失败报错javautilconcurrentexecutionexception-comsuntoolsjdepsmultireleaseexception的直接链接" title="jdeps命令执行失败报错javautilconcurrentexecutionexception-comsuntoolsjdepsmultireleaseexception的直接链接">​</a></h3>
<p>这个问题的原因是因为jdk17中的<code>jdeps</code>命令存在<code>bug</code>(无法处理不同jar中具有相同名称的类)导致的, 在jdk18中已经修复了这个问题.</p>
<p>关于这个问题的更多信息可以参考</p>
<ul>
<li><a href="https://stackoverflow.com/questions/69943899/jdeps-cant-print-module-deps-due-to-a-multireleaseexception" target="_blank" rel="noopener noreferrer">jdeps can't print-module-deps due to a MultiReleaseException</a></li>
<li><a href="https://bugs.openjdk.org/browse/JDK-8277165" target="_blank" rel="noopener noreferrer">JDK-8277165</a></li>
<li><a href="https://bugs.openjdk.org/browse/JDK-8277166" target="_blank" rel="noopener noreferrer">JDK-8277166</a></li>
<li><a href="https://bugs.openjdk.org/browse/JDK-8277123" target="_blank" rel="noopener noreferrer">JDK-8277123</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="构建过程中出现javalangexception-httpsgithubcomappimageappimagekitreleasesdownload13appimagetool-x86_64appimagenot-found--unsupported-os-architecture-x86_64">构建过程中出现<code>java.lang.Exception: https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImagenot found! ... Unsupported OS architecture x86_64?</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E6%9E%84%E5%BB%BA%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%87%BA%E7%8E%B0javalangexception-httpsgithubcomappimageappimagekitreleasesdownload13appimagetool-x86_64appimagenot-found--unsupported-os-architecture-x86_64" class="hash-link" aria-label="构建过程中出现javalangexception-httpsgithubcomappimageappimagekitreleasesdownload13appimagetool-x86_64appimagenot-found--unsupported-os-architecture-x86_64的直接链接" title="构建过程中出现javalangexception-httpsgithubcomappimageappimagekitreleasesdownload13appimagetool-x86_64appimagenot-found--unsupported-os-architecture-x86_64的直接链接">​</a></h3>
<p>这个问题的原因是在打包<code>linux</code>的<code>AppImage</code>时, 会去下载<code>appimagetool</code>来进行打包, 下载过程中可能会出现网络问题导致下载失败,
从而导致打包失败.
但是作者捕获相关异常后没有将原始信息打印出来, 导致我们无法知道具体的错误信息, 从而导致了上面的错误.
(这个异常信息是伪信息)</p>
<p>相关代码在<code>io.github.fvarrui.javapackager.packagers.GenerateAppImage</code>中的<code>getAppImageTool</code>方法中.<br></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-2">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-2" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h4>
<p>重试后问题解决.对于这个问题后续计划提PR给作者.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>2023-06-10<br>
相关pr已提交, 链接如下<br>
<a href="https://github.com/fvarrui/JavaPackager/pull/337" target="_blank" rel="noopener noreferrer">improvement: Improve the error message when downloading the AppImageTool fails #337</a></p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="arch配置不生效导致生成出的deb文件无法安装"><code>arch</code>配置不生效导致生成出的deb文件无法安装<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#arch%E9%85%8D%E7%BD%AE%E4%B8%8D%E7%94%9F%E6%95%88%E5%AF%BC%E8%87%B4%E7%94%9F%E6%88%90%E5%87%BA%E7%9A%84deb%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85" class="hash-link" aria-label="arch配置不生效导致生成出的deb文件无法安装的直接链接" title="arch配置不生效导致生成出的deb文件无法安装的直接链接">​</a></h3>
<p>执行完<code>package</code>任务后, 会在<code>build</code>目录下生成相应的<code>deb</code>文件名称为<code>xxx.deb</code>.
对此文件执行<code>sudo dpkg -i xxx.deb</code>命令会出现如下错误:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dpkg: warning: parsing file '/var/lib/dpkg/tmp.ci/control' near line 5 package 'upshift:${info.arch.deb}':</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> '${info.arch.deb}' is not a valid architecture name in 'Architecture' field: must start with an alphanumeric</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dpkg: error processing archive upshift_1.0-SNAPSHOT.deb (--install):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> package architecture (${info.arch.deb}) does not match system (amd64)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Errors were encountered while processing:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> upshift_1.0-SNAPSHOT.deb</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>后续在<code>gradle</code>中的task配置<code>arch(Arch.x64)</code>依然不生效.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因-2">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-2" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h4>
<p>这个问题的原因是<code>JavaPackager</code>插件对应的gradle中的实现类是<code>io.github.fvarrui.javapackager.gradle.DefaultPackageTask</code>,
此插件并没有获取我们配置的<code>PackagePluginExtension</code>中的值.
后续<code>io.github.fvarrui.javapackager.packagers.GenerateDeb</code>会调用<code>velocity</code>来渲染<code>control.vtl</code>.
由于<code>arch</code>为空, 所以导致<code>${info.arch.deb}</code>没有被渲染, 模板内容如下</p>
<div class="language-title=&quot;control.vtl&quot; codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-title=&quot;control.vtl&quot; codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Package: ${info.name}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Version: ${info.version}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Section: misc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Priority: optional</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Architecture: ${info.arch.deb}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Maintainer: ${info.organizationName} &lt;$!{info.organizationEmail}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Description: ${info.description}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Distribution: development</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#if(${info.url})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Homepage: ${info.url}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-3">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-3" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h4>
<p>目前没有一个好的办法解决此问题, 后续准备在<code>JavaPackager</code>插件中提一个<code>PR</code>来解决此问题.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>2023-05-22<br>
相关pr已提交, 链接如下<br>
<a href="https://github.com/fvarrui/JavaPackager/pull/331" target="_blank" rel="noopener noreferrer">fix(gradle-default-package-task): Set arch field for deb control file rendering #331</a></p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解压appimage">解压AppImage<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E8%A7%A3%E5%8E%8Bappimage" class="hash-link" aria-label="解压AppImage的直接链接" title="解压AppImage的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./xxx.AppImage --appimage-extract</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/15/use-gradle-plugin-java-packager-to-build-binary-java-app#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/fvarrui/JavaPackager/blob/master/src/main/java/io/github/fvarrui/javapackager/packagers/BundleJre.java" target="_blank" rel="noopener noreferrer">BundleJre.java</a></li>
<li><a href="https://github.com/fvarrui/JavaPackager/blob/master/src/main/java/io/github/fvarrui/javapackager/gradle/DefaultPackageTask.java" target="_blank" rel="noopener noreferrer">DefaultPackageTask.java</a></li>
<li><a href="https://github.com/fvarrui/JavaPackager/blob/master/src/main/java/io/github/fvarrui/javapackager/packagers/LinuxPackager.java" target="_blank" rel="noopener noreferrer">LinuxPackager.java</a></li>
<li><a href="https://github.com/fvarrui/JavaPackager/blob/master/src/main/java/io/github/fvarrui/javapackager/packagers/GenerateDeb.java" target="_blank" rel="noopener noreferrer">GenerateDeb.java</a></li>
<li><a href="https://github.com/fvarrui/JavaPackager/blob/master/src/main/resources/linux/control.vtl" target="_blank" rel="noopener noreferrer">control.vtl</a></li>
<li><a href="https://github.com/fvarrui/JavaPackager/blob/master/src/main/java/io/github/fvarrui/javapackager/packagers/GenerateAppImage.java" target="_blank" rel="noopener noreferrer">GenerateAppImage.java</a></li>
</ul>]]></content:encoded>
            <category>native-image</category>
            <category>java-packager</category>
            <category>gradle-plugin</category>
            <category>github-pr</category>
        </item>
        <item>
            <title><![CDATA[解决在Kotlin Coroutines中的命令行调用中出现Stream Closed异常]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine</guid>
            <pubDate>Wed, 05 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[之前有一个服务内部需要调用外部程序(rclone), 于是我写了一个类来封装命令行调用, 该类主要是基于kotlinx.coroutines]]></description>
            <content:encoded><![CDATA[<p>之前有一个服务内部需要调用外部程序(<code>rclone</code>), 于是我写了一个类来封装命令行调用, 该类主要是基于<code>kotlinx.coroutines</code>
来实现的.<br>
代码如下:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">CommandExecutorImpl.kt</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">io</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IOException</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> java</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">io</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InputStream</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> CommandExecutorImpl </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> CommandExecutor</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LogCapability </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">override</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">suspend</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fun</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">execute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> CommandExecutionOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		coroutineScope </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> command</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> String </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">command</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">joinToString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">separator </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"$ {}"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> command</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> process</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Process </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createProcess</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> asyncReadStdOut </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">asyncRead</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">inputStream</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> consume </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">onNewStdoutRead</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> asyncReadStderr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">asyncRead</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">errorStream</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> consume </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">onNewStderrRead</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isAlive</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token function" style="color:#d73a49">delay</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exitValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">IllegalStateException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"Process exited with non-zero exit code"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">finally</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">// https://kotlinlang.org/docs/cancellation-and-timeouts.html#run-non-cancellable-block</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token function" style="color:#d73a49">withContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">NonCancellable</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">destroy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					asyncReadStdOut</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">cancelAndJoin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					asyncReadStderr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">cancelAndJoin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">suspend</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fun</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createProcess</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> CommandExecutionOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Process </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">withContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Dispatchers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IO</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getRuntime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">command</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toTypedArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fun</span><span class="token plain"> CoroutineScope</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">asyncRead</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> InputStream</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> consume</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">suspend</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">String</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> Unit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Job </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		launch </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bufferedReader</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">lineSequence</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">asFlow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">collect</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> line </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">						</span><span class="token function" style="color:#d73a49">consume</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">line</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ex</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> IOException</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">warn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"Error while reading from process"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> ex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">companion</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">object</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> LogCapability</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最近我发现在使用该类时, 有时会抛出<code>java.io.IOException: Stream closed</code>异常<br>
异常栈如下:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">14:10:38.016 [DefaultDispatcher-worker-117] WARN com.fastonetech.billing.sync.infra.command.CommandExecutorImpl - Error while reading from process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">java.io.IOException: Stream closed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:168)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:334)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:270)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:313)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/sun.nio.cs.StreamDecoder.read(StreamDecoder.java:188)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.io.InputStreamReader.read(InputStreamReader.java:177)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.io.BufferedReader.fill(BufferedReader.java:162)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.io.BufferedReader.readLine(BufferedReader.java:329)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.io.BufferedReader.readLine(BufferedReader.java:396)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlin.io.LinesSequence$iterator$1.hasNext(ReadWrite.kt:79)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5.collect(SafeCollector.common.kt:114)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at com.fastonetech.billing.sync.infra.command.CommandExecutorImpl$asyncRead$1.invokeSuspend(CommandExecutorImpl.kt:58)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.internal.LimitedDispatcher.run(LimitedDispatcher.kt:42)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:95)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:570)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:677)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:664)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面将解决该问题的原因和解决方案.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<blockquote>
<p>根本原因是<code>Process</code>对象被销毁后, 仍然在读取<code>Process</code>的<code>InputStream</code>和<code>ErrorStream</code>.<br>
有的时候命令执行会比较快这个时候<code>InputStream</code>和<code>ErrorStream</code>还没读完.</p>
</blockquote>
<p>我们调用<code>process.destroy()</code>前只判断了<code>process.exitValue()</code>是否为<code>0</code>, 没有判断<code>InputStream</code>和<code>ErrorStream</code>是否读完.<br>
这会导致销毁<code>Process</code>对象并导致<code>InputStream</code>和<code>ErrorStream</code>被关闭从而抛出<code>Stream Closed</code>异常.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<blockquote>
<p>在<code>finally</code>块中等待<code>InputStream</code>和<code>ErrorStream</code>的读取操作完成后再销毁<code>Process</code>对象.</p>
</blockquote>
<p>修改后的代码如下:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">asyncReadStdOut</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isActive </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> asyncReadStderr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isActive </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isAlive</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">delay</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="stream-closed异常测试">Stream Closed异常测试<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine#stream-closed%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="Stream Closed异常测试的直接链接" title="Stream Closed异常测试的直接链接">​</a></h3>
<p>下面的代码是用来复现<code>Stream Closed</code>异常的测试代码:</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">runBlocking </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> executor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CommandExecutorImpl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token operator" style="color:#393A34">..</span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">CoroutineScope</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Dispatchers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IO</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			executor</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">execute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				options </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CommandExecutionOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					command </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">listOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"echo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:#e3116c">"1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">awaitAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="为什么不使用processwaitfor方法替代delay500方法">为什么不使用<code>Process.waitFor()</code>方法替代<code>delay(500)</code>方法<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E4%BD%BF%E7%94%A8processwaitfor%E6%96%B9%E6%B3%95%E6%9B%BF%E4%BB%A3delay500%E6%96%B9%E6%B3%95" class="hash-link" aria-label="为什么不使用processwaitfor方法替代delay500方法的直接链接" title="为什么不使用processwaitfor方法替代delay500方法的直接链接">​</a></h3>
<p>因为<code>waitFor</code>方法比较重量级会阻塞当前线程, 而我们的解决方案是协程目的是为了不阻塞当前线程, 所以才会采用<code>delay</code>方法.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/05/fix-stream-closed-exception-in-command-line-invocation-in-kotlin-coroutine#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://kotlinlang.org/docs/coroutines-guide.html" target="_blank" rel="noopener noreferrer">Coroutines guide</a></li>
<li><a href="https://kotlinlang.org/docs/cancellation-and-timeouts.html#run-non-cancellable-block" target="_blank" rel="noopener noreferrer">Run non-cancellable block</a></li>
</ul>]]></content:encoded>
            <category>kotlin</category>
            <category>coroutines</category>
            <category>command-line</category>
        </item>
        <item>
            <title><![CDATA[为Docusaurus中的Blog启用评论功能]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus</guid>
            <pubDate>Tue, 04 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[最近想在Docusaurus中启用评论功能, 但是官方并没有提供这个功能, 所以只能自己动手了.]]></description>
            <content:encoded><![CDATA[<p>最近想在<code>Docusaurus</code>中启用评论功能, 但是官方并没有提供这个功能, 所以只能自己动手了.<br></p>
<p>目前的解决方案是通过<code>Giscus</code>来实现, 它是一个基于<code>Github</code>的<code>Discussions</code>的评论系统实现的.<br>
<code>Discussions</code>需要依赖<code>Github</code>账号来进行评论, 所以后续需要一个公共的仓库来存放评论数据.<br>
如果你的博客是私有项目, 可以考虑创建一个新的公共的仓库用于存放评论数据, 这样可以确保原来的项目还可以为私有的.<br></p>
<p>以下内容会假设你拥有<code>Github</code>相关知识<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置giscus">配置<code>Giscus</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E9%85%8D%E7%BD%AEgiscus" class="hash-link" aria-label="配置giscus的直接链接" title="配置giscus的直接链接">​</a></h2>
<p>进入<a href="https://giscus.app/" target="_blank" rel="noopener noreferrer">Giscus</a>官网浏览文档, 然后根据文档中的要求进行配置.<br>
主要有以下几个步骤:</p>
<ul>
<li>准备一个公共的仓库
<br>该仓库主要用于存放评论数据, 如果你的博客是私有项目可以考虑创建一个公共的仓库用于存放评论数据</li>
<li>为公共的仓库启用<code>Github Discussions</code>,
参考<a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/enabling-or-disabling-github-discussions-for-a-repository" target="_blank" rel="noopener noreferrer">Enabling or disabling GitHub Discussions for a repository</a></li>
<li>安装<a href="https://github.com/apps/giscus" target="_blank" rel="noopener noreferrer">giscus-github-app</a>并配置可以访问哪些仓库,
安装页面完成后可以在应用页面中可以找到<code>Configure</code>按钮, 点击该按钮进入配置页面</li>
</ul>
<p>以上是大致的配置步骤, 还有一些细节可以在刚才的官网页面中查看具体的配置说明. 例如:<br></p>
<ul>
<li><code>Docusaurus</code>博客的评论到<code>Discussion</code>中的映射关系</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="验证配置">验证配置<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E9%AA%8C%E8%AF%81%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="验证配置的直接链接" title="验证配置的直接链接">​</a></h2>
<p>这些配置做好之后, 你需要对你的配置进行验证, 以确保你的配置是正确的.<br></p>
<p><a href="https://giscus.app/" target="_blank" rel="noopener noreferrer">giscus</a>页面下的<code>Repository</code>提供了一个可以验证你的<code>repo</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="获取参数">获取参数<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0" class="hash-link" aria-label="获取参数的直接链接" title="获取参数的直接链接">​</a></h2>
<p>为了后续在<code>Docusaurus</code>中启用评论功能, 还需要获取一些参数, 这些参数后续会在<code>Docusaurus</code>中使用.<br></p>
<p><a href="https://giscus.app/" target="_blank" rel="noopener noreferrer">giscus</a>页面下的<code>Enable giscus</code>会根据你的配置生成一段代码, 该代码包含了你需要的参数.<br>
它看起来像这样:</p>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://giscus.app/client.js</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-repo</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">[ENTER REPO HERE]</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-repo-id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">[ENTER REPO ID HERE]</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-category</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">[ENTER CATEGORY NAME HERE]</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-category-id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">[ENTER CATEGORY ID HERE]</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-mapping</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">pathname</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-strict</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-reactions-enabled</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-emit-metadata</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-input-position</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">bottom</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-theme</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">preferred_color_scheme</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">data-lang</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">en</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">crossorigin</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">anonymous</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">		</span><span class="token tag attr-name" style="color:#00a4db">async</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装giscus">安装<code>Giscus</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E5%AE%89%E8%A3%85giscus" class="hash-link" aria-label="安装giscus的直接链接" title="安装giscus的直接链接">​</a></h2>
<p><code>Giscus</code>组件是一个<code>React</code>组件, 用于在<code>Docusaurus</code>中启用评论功能.<br>
我们需要在项目中安装<code>Giscus</code>组件</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install --save @giscus/react</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="组件扩展">组件扩展<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E7%BB%84%E4%BB%B6%E6%89%A9%E5%B1%95" class="hash-link" aria-label="组件扩展的直接链接" title="组件扩展的直接链接">​</a></h2>
<p><code>Docusaurus</code>中提供了<a href="https://docusaurus.io/docs/swizzling" target="_blank" rel="noopener noreferrer">Swizzling</a>功能, 可以对<code>Docusaurus</code>
中的组件进行扩展并增加新的功能.<br>
<code>BlogPostItem</code>是<code>Docusaurus</code>中用于展示博客文章的组件, 该组件位于<code>@theme-original/BlogPostItem</code>中.<br>
为了给在<code>Docusaurus</code>中启用评论功能, 需要对<code>BlogPostItem</code>进行扩展.<br></p>
<p>执行<code>swizzle</code>命令创建<code>BlogPostItem</code>组件</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm run swizzle @docusaurus/theme-classic BlogPostItem -- --wrap</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该命令执行完成后<code>src/theme/BlogPostItem/index.js</code>文件会被创建<br></p>
<p>接下来对该文件进行编辑<br></p>
<blockquote>
<p>注意: 该文件中的<code>Giscus</code>组件的xxx参数需要根据你的配置进行修改, 配置的参数在上一节中已经介绍过了</p>
</blockquote>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">src/theme/BlogPostItem/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostItem</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@theme-original/BlogPostItem'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Giscus</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@giscus/react"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports">useBlogPost</span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@docusaurus/theme-common/internal'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports">useColorMode</span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@docusaurus/theme-common'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">useDocusaurusContext</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@docusaurus/useDocusaurusContext'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">BlogPostItemWrapper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">i18n</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">defaultLocale</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> localeConfigs</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useDocusaurusContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">colorMode</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useColorMode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> isBlogPostPage</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useBlogPost</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">BlogPostItem</span><span class="token tag" style="color:#00009f"> </span><span class="token tag spread punctuation" style="color:#393A34">{</span><span class="token tag spread operator" style="color:#393A34">...</span><span class="token tag spread" style="color:#00009f">props</span><span class="token tag spread punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">isBlogPostPage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Giscus</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">repo</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">repoId</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">category</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">categoryId</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">mapping</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">strict</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">reactionsEnabled</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">emitMetadata</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">inputPosition</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">theme</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">colorMode</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">lang</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">defaultLocale</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">crossorigin</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">anonymous</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">term</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Welcome to @giscus/react component!</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">loading</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">lazy</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">                </span><span class="token tag attr-name" style="color:#00a4db">async</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">            </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="最终效果">最终效果<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C" class="hash-link" aria-label="最终效果的直接链接" title="最终效果的直接链接">​</a></h2>
<p>最终效果如下图所示:</p>
<p><img loading="lazy" alt="enable-comment-in-docusaurus.png" src="https://www.geek66.cyou/zh-CN/assets/images/enable-comment-in-docusaurus-8038867947841e387691a062cc401be6.png" width="2559" height="1371" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/04/enable-comment-in-docusaurus#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://giscus.app/" target="_blank" rel="noopener noreferrer">Giscus官网</a></li>
<li><a href="https://github.com/apps/giscus" target="_blank" rel="noopener noreferrer">Giscus的github-app</a></li>
<li><a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/enabling-or-disabling-github-discussions-for-a-repository" target="_blank" rel="noopener noreferrer">启用Github中的Discussions</a></li>
<li><a href="https://github.com/facebook/docusaurus/issues/7759" target="_blank" rel="noopener noreferrer">关于useBlogPost函数的github-issue</a></li>
<li><a href="https://docusaurus.io/docs/swizzling" target="_blank" rel="noopener noreferrer">Swizzling的相关介绍</a></li>
<li><a href="https://www.wjwei.blog/docs/Potpourri/giscus-docusaurus" target="_blank" rel="noopener noreferrer">在Docusaurus上配置Giscus评论系统</a></li>
<li><a href="https://m19v.github.io/blog/how-to-add-giscus-to-docusaurus" target="_blank" rel="noopener noreferrer">How to add Giscus comments to Docusaurus</a></li>
</ul>]]></content:encoded>
            <category>docusaurus</category>
            <category>giscus</category>
            <category>github</category>
        </item>
        <item>
            <title><![CDATA[Gitlab中常见的标签]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/31/common-tags-in-gitlab</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/31/common-tags-in-gitlab</guid>
            <pubDate>Fri, 31 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Gitlab中的标签是一个非常有用的功能, 该功能可以帮助我们更好的管理ISSUE.]]></description>
            <content:encoded><![CDATA[<p><code>Gitlab</code>中的标签是一个非常有用的功能, 该功能可以帮助我们更好的管理<code>ISSUE</code>.<br>
下面介绍一下<code>Gitlab</code>中常见的标签的定义和其使用希望能够对你有所帮助.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="标签的定义">标签的定义<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/31/common-tags-in-gitlab#%E6%A0%87%E7%AD%BE%E7%9A%84%E5%AE%9A%E4%B9%89" class="hash-link" aria-label="标签的定义的直接链接" title="标签的定义的直接链接">​</a></h2>
<p>下面介绍常见的一些标签的定义, 以便我们更好的使用.</p>
<!-- -->
<table><thead><tr><th align="center">名称</th><th align="center">颜色</th><th align="center">16进制代码</th><th align="center">描述</th><th align="center">使用时机</th></tr></thead><tbody><tr><td align="center"><span style="font-size:1rem;color:white;background:#FF0000;border-radius:22px;padding:4px 12px">Bug</span></td><td align="center" style="white-space:nowrap">红</td><td align="center"><strong>#FF0000</strong></td><td align="center">错误或需修复</td><td align="center">发现/报告 一个问题</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#808080;border-radius:22px;padding:4px 12px">Duplicate</span></td><td align="center" style="white-space:nowrap">灰</td><td align="center"><strong>#808080</strong></td><td align="center">重复的issue</td><td align="center">发现/报告 一个已经存在的问题</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#0000FF;border-radius:22px;padding:4px 12px">Feature</span></td><td align="center" style="white-space:nowrap">蓝</td><td align="center"><strong>#0000FF</strong></td><td align="center">新功能或需求</td><td align="center">提出/实现 一个新的功能或需求</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#00FF00;border-radius:22px;padding:4px 12px">Fixed</span></td><td align="center" style="white-space:nowrap">绿</td><td align="center"><strong>#00FF00</strong></td><td align="center">已修复或完成</td><td align="center">解决/完成 一个问题或任务</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#000000;border-radius:22px;padding:4px 12px">Invalid</span></td><td align="center" style="white-space:nowrap">黑</td><td align="center"><strong>#000000</strong></td><td align="center">无效或不合理</td><td align="center">发现/报告 一个不符合 规范/逻辑 的问题</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#800080;border-radius:22px;padding:4px 12px">Proposal</span></td><td align="center" style="white-space:nowrap">紫</td><td align="center"><strong>#800080</strong></td><td align="center">建议或想法</td><td align="center">提出/讨论 一个建议或想法</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#FFA500;border-radius:22px;padding:4px 12px">Task</span></td><td align="center" style="white-space:nowrap">橙</td><td align="center"><strong>#FFA500</strong></td><td align="center">任务或工作</td><td align="center">分配/执行 一个任务或工作</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#A52A2A;border-radius:22px;padding:4px 12px">Wontfix</span></td><td align="center" style="white-space:nowrap">棕</td><td align="center"><strong>#A52A2A</strong></td><td align="center">不会或不需修复</td><td align="center">决定不处理/忽略 一个问题</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#FFC0CB;border-radius:22px;padding:4px 12px">Improvement</span></td><td align="center" style="white-space:nowrap">粉</td><td align="center"><strong>#FFC0CB</strong></td><td align="center">改进或优化</td><td align="center">对一个功能或需求进行 改进/优化</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#ADD8E6;border-radius:22px;padding:4px 12px">Enhancement</span></td><td align="center" style="white-space:nowrap">淡蓝</td><td align="center"><strong>#ADD8E6</strong></td><td align="center">增强或扩展</td><td align="center">对一个功能或需求进行 增强/扩展</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#FFFF00;border-radius:22px;padding:4px 12px">Question</span></td><td align="center" style="white-space:nowrap">黄</td><td align="center"><strong>#FFFF00</strong></td><td align="center">疑问或询问</td><td align="center">对一个问题或任务有 疑问/询问</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#FF00FF;border-radius:22px;padding:4px 12px">Help wanted</span></td><td align="center" style="white-space:nowrap">紫红</td><td align="center"><strong>#FF00FF</strong></td><td align="center">需要帮助或协作</td><td align="center">需要其他人的 帮助/协作</td></tr><tr><td align="center"><span style="font-size:1rem;color:white;background:#90EE90;border-radius:22px;padding:4px 12px">Documentation</span></td><td align="center" style="white-space:nowrap">浅绿</td><td align="center"><strong>#90EE90</strong></td><td align="center">需要或涉及文档</td><td align="center">涉及文档的 编写/更新</td></tr></tbody></table>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>Improvement和Enhancement之间的区别<br></p><p>Improvement: <br>
表示对一个不太好的事物进行改善或提高, 使其达到更好的水平或状态.<br>
We need to improve our product quality to meet the customer’s needs.(我们需要改善我们的产品质量, 以满足客户的需求.)<br></p><p>Enhancement: <br>
表示对一个已经很好的事物进行增强或扩展, 使其更加优秀或有吸引力.<br>
The new feature of this phone enhanced its competitiveness.(这款手机的新功能增强了它的竞争力.)<br></p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/31/common-tags-in-gitlab#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://about.gitlab.com/handbook/marketing/project-management-guidelines/labels/" target="_blank" rel="noopener noreferrer">Labels project management guidelines | GitLab</a>
<br>这是Gitlab关于标签项目管理指南的页面, 包含了一些创建和使用标签的规范和建议.</li>
<li><a href="https://about.gitlab.com/handbook/support/support-ops/training/gitlab-labeling.html" target="_blank" rel="noopener noreferrer">GitLab Labeling Training | GitLab</a>
<br>这是Gitlab关于标签培训的页面, 包含了一些标签的最佳实践和示例.</li>
</ul>]]></content:encoded>
            <category>gitlab</category>
        </item>
        <item>
            <title><![CDATA[解决elm依赖下载失败的问题]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed</guid>
            <pubDate>Thu, 30 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[最近在本地构建open-radiant项目.]]></description>
            <content:encoded><![CDATA[<p>最近在本地构建<a href="https://github.com/JetBrains/open-radiant" target="_blank" rel="noopener noreferrer">open-radiant</a>项目.<br>
该项目是<code>JetBrains</code>开源的一个项目, 用于生成AI艺术图片, 在线演示地址为: <a href="https://code2art.jetbrains.com/" target="_blank" rel="noopener noreferrer">code2art</a><br>
在构建的过程中遇到了一些问题.<br>
其中的一个问题是当执行<code>elm make</code>时依赖下载失败, 日志如下:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Starting downloads...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/json 1.1.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm-community/list-extra 8.2.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/random 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/file 1.0.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/virtual-dom 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/parser 1.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● rtfeldman/elm-iso8601-date-strings 1.1.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/url 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm-community/random-extra 3.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm-explorations/webgl 1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ● elm/core 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm/http 2.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ owanturist/elm-union-find 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm/bytes 1.0.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm/svg 1.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ avh4/elm-color 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm/time 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm-community/json-extra 4.2.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ fredcy/elm-parseint 2.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ noahzgordon/elm-color-extra 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm/html 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm/browser 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ newlandsvalley/elm-binary-base64 1.0.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ✗ elm-community/easing-functions 2.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dependency problem!           </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- PROBLEM DOWNLOADING PACKAGE -------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I was trying to download the source code for avh4/elm-color 1.0.0, so I tried to</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fetch:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    https://github.com/avh4/elm-color/zipball/1.0.0/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">But my HTTP library is giving me the following error message:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ConnectionTimeout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Are you somewhere with a slow internet connection? Or no internet? Does the link</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I am trying to fetch work in your browser? Maybe the site is down? Does your</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">internet connection have a firewall that blocks certain domains? It is usually</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">something like that!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<p>这个问题的原因是<code>elm</code>的依赖在国内访问会比较慢, 甚至会出现下载失败的情况.<br>
为了解决这个问题, 我们可以手动下载依赖包, 然后放到<code>elm</code>的依赖目录下, 以后再执行<code>elm make</code>时就不会再去下载依赖了.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>案例:</p>
<ul>
<li>项目依赖<code>avh4/elm-color 1.0.0</code></li>
<li>elm版本为<code>0.19.0</code></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确定依赖的目录">确定依赖的目录<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed#%E7%A1%AE%E5%AE%9A%E4%BE%9D%E8%B5%96%E7%9A%84%E7%9B%AE%E5%BD%95" class="hash-link" aria-label="确定依赖的目录的直接链接" title="确定依赖的目录的直接链接">​</a></h3>
<p><code>elm</code>的依赖目录在<code>~/.elm</code>下, 依赖包的目录结构可以通过<code>tree</code>命令查看:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tree ~/.elm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── 0.19.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    └── packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── avh4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── elm-color</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── browser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Browser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Debugger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── core</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Platform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── File</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── http</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 2.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.1.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── random</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── regex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── svg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Svg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── virtual-dom</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;             └── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;                 └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── elm-community</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── easing-functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 2.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── json-extra</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 4.2.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             ├── Decode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;             └── Encode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── list-extra</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 8.2.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── List</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── random-extra</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 3.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;             └── Random</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── elm-explorations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; ├── linear-algebra</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp; └── 1.0.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;     └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; │&nbsp;&nbsp;         └── Math</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── webgl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;             ├── Elm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;             │&nbsp;&nbsp; └── Kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;             └── WebGL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;                 └── Settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── fredcy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── elm-parseint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 2.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── newlandsvalley</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── elm-binary-base64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 1.0.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── noahzgordon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── elm-color-extra</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 1.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;             └── Color</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ├── owanturist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp; └── elm-union-find</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;     └── 1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        │&nbsp;&nbsp;         └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        └── rtfeldman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            └── elm-iso8601-date-strings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                └── 1.1.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">135 directories</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过命令执行结果可以看到其目录结构大致如下</p>
<ul>
<li>第一级目录为<code>packages</code></li>
<li>第二级目录为<code>group</code>(以<code>avh4/elm-color 1.0.0</code>为例, <code>group</code>为<code>avh4</code>)</li>
<li>第三级目录为<code>artifact</code>(以<code>avh4/elm-color 1.0.0</code>为例, <code>artifact</code>为<code>elm-color</code>)</li>
<li>第四级目录为<code>version</code>(以<code>avh4/elm-color 1.0.0</code>为例, <code>version</code>为<code>1.0.0</code>)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="下载依赖">下载依赖<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed#%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96" class="hash-link" aria-label="下载依赖的直接链接" title="下载依赖的直接链接">​</a></h3>
<p>以<code>avh4/elm-color 1.0.0</code>为例, 我们通过<code>https://github.com/avh4/elm-color/zipball/1.0.0/</code> 链接下载对应的安装包</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h3>
<p>将该安装包里的文件解压到<code>~/.elm/0.19.0/package/avh4/elm-color/1.0.0</code>目录下</p>
<blockquote>
<p>注意:
安装包打开会有一个单独的目录, 这个目录里面的文件是我们需要解压的文件</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-elm-package-download-failed#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/JetBrains/open-radiant" target="_blank" rel="noopener noreferrer">open-radiant</a></li>
<li><a href="https://code2art.jetbrains.com/" target="_blank" rel="noopener noreferrer">code2art</a></li>
<li><a href="https://elm-lang.org/" target="_blank" rel="noopener noreferrer">elm</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>elm</category>
            <category>jetbrains</category>
            <category>code2art</category>
            <category>open-radiant</category>
        </item>
        <item>
            <title><![CDATA[node.js v17及以上版本使用openssl v3.0引发的哈希算法错误及其解决方法]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-node-v17-upwards-openssl-hash-error</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-node-v17-upwards-openssl-hash-error</guid>
            <pubDate>Thu, 30 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[最近在本地构建open-radiant项目.]]></description>
            <content:encoded><![CDATA[<p>最近在本地构建<a href="https://github.com/JetBrains/open-radiant" target="_blank" rel="noopener noreferrer">open-radiant</a>项目.<br>
该项目是<code>JetBrains</code>开源的一个项目, 用于生成AI艺术图片, 在线演示地址为: <a href="https://code2art.jetbrains.com/" target="_blank" rel="noopener noreferrer">code2art</a><br>
在构建的过程中遇到了一些问题.<br></p>
<p>其中的一个问题是当执行<code>npm start</code>时报错, 相关错误信息如下:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; jb-animation-generator@1.0.0 start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; ./node_modules/.bin/webpack-dev-server --mode=development</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ℹ ｢wds｣: Project is running at http://localhost:8080/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ℹ ｢wds｣: webpack output is served from /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ℹ ｢wds｣: Content not from webpack is served from /home/orange/Documents/Project/Github/open-radiant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node:internal/crypto/hash:71</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  this[kHandle] = new _Hash(algorithm, xofLen);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  ^</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: error:0308010C:digital envelope routines::unsupported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at new Hash (node:internal/crypto/hash:71:19)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at Object.createHash (node:crypto:133:10)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at module.exports (/home/orange/Documents/Project/Github/open-radiant/node_modules/webpack/lib/util/createHash.js:135:53)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at NormalModule._initBuildHash (/home/orange/Documents/Project/Github/open-radiant/node_modules/webpack/lib/NormalModule.js:417:16)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at handleParseError (/home/orange/Documents/Project/Github/open-radiant/node_modules/webpack/lib/NormalModule.js:471:10)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at /home/orange/Documents/Project/Github/open-radiant/node_modules/webpack/lib/NormalModule.js:503:5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at /home/orange/Documents/Project/Github/open-radiant/node_modules/webpack/lib/NormalModule.js:358:12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at /home/orange/Documents/Project/Github/open-radiant/node_modules/loader-runner/lib/LoaderRunner.js:373:3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at iterateNormalLoaders (/home/orange/Documents/Project/Github/open-radiant/node_modules/loader-runner/lib/LoaderRunner.js:214:10)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at Array.&lt;anonymous&gt; (/home/orange/Documents/Project/Github/open-radiant/node_modules/loader-runner/lib/LoaderRunner.js:205:4) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  library: 'digital envelope routines',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  reason: 'unsupported',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  code: 'ERR_OSSL_EVP_UNSUPPORTED'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Node.js v18.12.1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-node-v17-upwards-openssl-hash-error#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<p>经过网上的一番搜索, 发现这个问题是由于<code>node.js</code>的版本升级到<code>v17</code>及以上版本, 而<code>openssl</code>的版本升级到<code>v3.0</code>引起的.<br></p>
<p><code>openssl</code>是一个开源的安全套接字层密码库, 用于提供加密和认证服务.<br>
<code>node.js</code>在<code>v17</code>及以上版本中使用了<code>openssl</code>的<code>v3.0</code>版本, 该版本中移除了一些哈希算法, 导致在使用这些算法时报错.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-node-v17-upwards-openssl-hash-error#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>这个问题的解决解决方案有以下几种:</p>
<ul>
<li>降低<code>node.js</code>的版本到v16及以下版本</li>
<li><code>npm start</code>之前先执行<code>export NODE_OPTIONS=--openssl-legacy-provider</code>
<br>通过该环境变量可以启用<code>openssl</code>的<code>legacy provider</code>，支持一些旧的哈希算法.<br></li>
<li>升级相关依赖包到最新版本，可能会修复这个问题.<br></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/30/fix-node-v17-upwards-openssl-hash-error#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported" target="_blank" rel="noopener noreferrer">Stack Overflow上关于这个问题的讨论</a></li>
<li><a href="https://nodejs.org/api/crypto.html#crypto_openssl_3_0" target="_blank" rel="noopener noreferrer">Node.js官方文档中关于OpenSSL 3.0的说明</a></li>
<li><a href="https://github.com/nodejs/help/issues/4021" target="_blank" rel="noopener noreferrer">GitHub上关于这个问题的报告</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>nodejs</category>
            <category>openssl</category>
            <category>compatibility</category>
            <category>jetbrains</category>
            <category>code2art</category>
            <category>open-radiant</category>
        </item>
        <item>
            <title><![CDATA[通过延长olcIdleTimeout以减少nslcd中的Can't contact LDAP server日志报错]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout</guid>
            <pubDate>Tue, 28 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[客户用例执行失败, 其猜测可能是nslcd服务中的Can't contact LDAP server相关报错导致其生产用例执行失败.]]></description>
            <content:encoded><![CDATA[<p>客户用例执行失败, 其猜测可能是<code>nslcd</code>服务中的<code>Can't contact LDAP server</code>相关报错导致其生产用例执行失败.<br></p>
<p><code>nslcd</code>日志如下:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[fastone@layout01 ~]$ sudo journalctl -t nslcd| tail --line 20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 11:58:24 layout01 nslcd[25607]: [debc9e] &lt;group="fsadmin"&gt; connected to LDAP server ldap://172.20.3.126:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 11:59:17 layout01 nslcd[25607]: [fe8aa7] &lt;passwd=2032&gt; ldap_search_ext() failed: Can't contact LDAP server: Broken pipe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 11:59:17 layout01 nslcd[25607]: [fe8aa7] &lt;passwd=2032&gt; no available LDAP server found, sleeping 1 seconds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 11:59:18 layout01 nslcd[25607]: [fe8aa7] &lt;passwd=2032&gt; connected to LDAP server ldap://172.20.3.126:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:01 layout01 nslcd[25607]: [272b88] &lt;group/member="root"&gt; ldap_result() failed: Can't contact LDAP server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:36 layout01 nslcd[25607]: [66b17f] &lt;group=2001&gt; ldap_search_ext() failed: Can't contact LDAP server: Broken pipe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:36 layout01 nslcd[25607]: [66b17f] &lt;group=2001&gt; no available LDAP server found, sleeping 1 seconds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:37 layout01 nslcd[25607]: [66b17f] &lt;group=2001&gt; connected to LDAP server ldap://172.20.3.126:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:38 layout01 nslcd[25607]: [a15030] &lt;passwd=2004&gt; ldap_search_ext() failed: Can't contact LDAP server: Broken pipe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:38 layout01 nslcd[25607]: [a15030] &lt;passwd=2004&gt; no available LDAP server found, sleeping 1 seconds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:39 layout01 nslcd[25607]: [a15030] &lt;passwd=2004&gt; connected to LDAP server ldap://172.20.3.126:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:39 layout01 nslcd[25607]: [9b7b93] &lt;passwd=2001&gt; ldap_result() failed: Can't contact LDAP server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:00:54 layout01 nslcd[25607]: [97bb68] &lt;passwd=2011&gt; ldap_result() failed: Can't contact LDAP server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:01:36 layout01 nslcd[25607]: [005d16] &lt;group=2011&gt; ldap_result() failed: Can't contact LDAP server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:03:39 layout01 nslcd[25607]: [b9081a] &lt;group="fsadmin"&gt; ldap_search_ext() failed: Can't contact LDAP server: Broken pipe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:03:39 layout01 nslcd[25607]: [b9081a] &lt;group="fsadmin"&gt; no available LDAP server found, sleeping 1 seconds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:03:40 layout01 nslcd[25607]: [b9081a] &lt;group="fsadmin"&gt; connected to LDAP server ldap://172.20.3.126:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:03:47 layout01 nslcd[25607]: [0f614b] &lt;group/member="root"&gt; ldap_search_ext() failed: Can't contact LDAP server: Broken pipe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:03:47 layout01 nslcd[25607]: [0f614b] &lt;group/member="root"&gt; no available LDAP server found, sleeping 1 seconds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mar 28 12:03:48 layout01 nslcd[25607]: [0f614b] &lt;group/member="root"&gt; connected to LDAP server ldap://172.20.3.126:389</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>从日志中可以发现<code>nslcd</code>服务经常出现<code>Can't contact LDAP server</code>.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="触发了ldap-server的连接超时">触发了<code>ldap-server</code>的连接超时<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E8%A7%A6%E5%8F%91%E4%BA%86ldap-server%E7%9A%84%E8%BF%9E%E6%8E%A5%E8%B6%85%E6%97%B6" class="hash-link" aria-label="触发了ldap-server的连接超时的直接链接" title="触发了ldap-server的连接超时的直接链接">​</a></h3>
<p>这个问题的原因是因为触发了<code>ldap-server</code>的超时时间, 从而导致<code>nslcd</code>服务中的<code>Can't contact LDAP server</code>相关报错.<br>
<code>ldap-server</code>的连接超时时间我们设置的默认为<code>30s</code>为了确保连接不会被一直占用从而导致服务端负载过高.<br>
但是频繁出现这个错误会让客户认为是我们的<code>ldap-server</code>出现问题导致其用例失败, 我们需要延长超时时间来避免客户的误解.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>为了解决这个问题, 我们需要修改<code>ldap-server</code>的超时时间.<br>
<code>ldap-server</code>中的超时时间是通过<code>olcIdleTimeout</code>来设置的.<br>
通过修改此值可以延长<code>ldap-server</code>的连接超时时间.<br>
需要注意的是, <code>olcIdleTimeout</code>的单位是秒.<br>
另外的一个注意事项是修改此值需要通过<code>ldap</code>中的<code>config</code>数据库的<code>admin</code>用户来修改.<br>
修改完成之后, 我们需要重启<code>ldap-server</code>服务.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="创建change-timeoutldif文件">创建<code>change-timeout.ldif</code>文件<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E5%88%9B%E5%BB%BAchange-timeoutldif%E6%96%87%E4%BB%B6" class="hash-link" aria-label="创建change-timeoutldif文件的直接链接" title="创建change-timeoutldif文件的直接链接">​</a></h3>
<p>先创建如下文件, 为了方便, 我们将超时时间设置为<code>12h</code>.</p>
<div class="language-ldif codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">change-timeout.ldif</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ldif codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dn: cn=config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changetype: modify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">replace: olcIdleTimeout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">olcIdleTimeout: 43200</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="通过ldapmodify命令修改超时时间">通过<code>ldapmodify</code>命令修改超时时间<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E9%80%9A%E8%BF%87ldapmodify%E5%91%BD%E4%BB%A4%E4%BF%AE%E6%94%B9%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4" class="hash-link" aria-label="通过ldapmodify命令修改超时时间的直接链接" title="通过ldapmodify命令修改超时时间的直接链接">​</a></h3>
<p>我们需要连接<code>ldap-server</code>并执行<code>ldapmodify</code>命令来修改<code>ldap</code>连接超时时间.<br>
然后执行如下命令</p>
<p>需要注意的是, 执行<code>ldapmodify</code>命令<code>bind</code>的用户为<code>cn=admin,cn=config</code>用户, 该用户是<code>config</code>数据库的<code>admin</code>用户.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ldapmodify -x -D cn=admin,cn=config -w &lt;password-of-config-admin&gt; -f change-timeout.ldif</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该命令将会输出如下内容</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">modifying entry "cn=config"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当看到上面的输出时, 说明超时时间已经修改成功.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确认超时时间是否修改成功">确认超时时间是否修改成功<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E7%A1%AE%E8%AE%A4%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%E6%98%AF%E5%90%A6%E4%BF%AE%E6%94%B9%E6%88%90%E5%8A%9F" class="hash-link" aria-label="确认超时时间是否修改成功的直接链接" title="确认超时时间是否修改成功的直接链接">​</a></h3>
<p>执行如下命令</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ldapsearch -x -D cn=admin,cn=config -w &lt;password-of-config-admin&gt; -b cn=config|grep olcIdleTimeout</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该命令将会输出如下内容</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">olcIdleTimeout: 43200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">olcAttributeTypes: ( OLcfgGlAt:18 NAME 'olcIdleTimeout' SYNTAX OMsInteger SING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> PendingAuth $ olcDisallows $ olcGentleHUP $ olcIdleTimeout $ olcIndexSubstrIf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过输出的内容可以看到<code>olcIdleTimeout</code>的值已经被修改为<code>43200</code>.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="重启ldap-server">重启<code>ldap-server</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E9%87%8D%E5%90%AFldap-server" class="hash-link" aria-label="重启ldap-server的直接链接" title="重启ldap-server的直接链接">​</a></h3>
<p>为了确保配置生效, 我们需要重启<code>ldap</code>服务.<br>
不同的<code>ldap</code>服务的重启方式不同, 这里以<code>ldap</code>容器为例.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker restart &lt;ldap-container&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="验证配置是否生效">验证配置是否生效<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E9%AA%8C%E8%AF%81%E9%85%8D%E7%BD%AE%E6%98%AF%E5%90%A6%E7%94%9F%E6%95%88" class="hash-link" aria-label="验证配置是否生效的直接链接" title="验证配置是否生效的直接链接">​</a></h3>
<p>在安装有<code>nslcd</code>服务的机器上执行如下命令.<br>
两个命令中间间隔<code>35s</code>. 如果配置没生效那么30s后会再次出现<code>Can't contact LDAP server</code>的报错.<br>
因为我们一开始默认的超时时间是<code>30s</code>, 所以我们需要间隔<code>35s</code>来验证配置是否生效.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">getent passwd -s ldap &amp;&amp; sleep 35s &amp;&amp; getent passwd -s ldap</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>执行期间我们需要观察<code>nslcd</code>服务的日志.<br>
最好开两个终端, 一个执行命令, 一个查看日志. 这样可以更加直观的看到日志.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">journalctl -u nslcd -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果配置生效那么我们将不会看到<code>Can't contact LDAP server</code>的报错.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="默认超时时间的配置文件">默认超时时间的配置文件<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E9%BB%98%E8%AE%A4%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="hash-link" aria-label="默认超时时间的配置文件的直接链接" title="默认超时时间的配置文件的直接链接">​</a></h3>
<div class="language-ldif codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">change-timeout.ldif</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ldif codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dn: cn=config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changetype: modify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">replace: olcIdleTimeout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">olcIdleTimeout: 30</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="查看系统中的nslcd服务的配置文件">查看系统中的<code>nslcd</code>服务的配置文件<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84nslcd%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="hash-link" aria-label="查看系统中的nslcd服务的配置文件的直接链接" title="查看系统中的nslcd服务的配置文件的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat /etc/nslcd.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="查看ldap-server的olcroot用户的信息">查看<code>ldap-server</code>的<code>olcRoot</code>用户的信息<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E6%9F%A5%E7%9C%8Bldap-server%E7%9A%84olcroot%E7%94%A8%E6%88%B7%E7%9A%84%E4%BF%A1%E6%81%AF" class="hash-link" aria-label="查看ldap-server的olcroot用户的信息的直接链接" title="查看ldap-server的olcroot用户的信息的直接链接">​</a></h3>
<p><code>olcRoot</code>是<code>ldap-server</code>的超级管理员, 通过该用户可以对<code>ldap-server</code>进行管理.<br></p>
<p>执行如下命令查看<code>ldap-server</code>的<code>olcRoot</code>用户的信息.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /etc/ldap/slapd.d/cn=config &amp;&amp; grep -r 'olcRoot' *</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该命令将会输出如下参考内容</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">olcDatabase={0}config.ldif:olcRootDN: cn=admin,cn=config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">olcDatabase={0}config.ldif:olcRootPW:: xxxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">olcDatabase={1}mdb.ldif:olcRootDN: cn=admin,dc=demo,dc=com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">olcDatabase={1}mdb.ldif:olcRootPW:: xxxx</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过上述输出可以看到有两个<code>olcRoot</code>用户, 一个是<code>cn=admin,cn=config</code>, 另一个是<code>cn=admin,dc=demo,dc=com</code>.<br>
有这两个用户的原因是因为其是不同<code>olcDatabase</code>的<code>olcRoot</code>用户.<br>
<code>olcDatabase={0}config.ldif</code>是<code>ldap-server</code>的配置数据库. 其主要存放了<code>ldap-server</code>的配置信息.<br>
<code>olcDatabase={1}mdb.ldif</code>是<code>ldap-server</code>的数据数据库. 其主要存放了<code>ldap-server</code>的数据信息, 该数据是给我们使用的.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确保fd数量可用">确保<code>fd</code>数量可用<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E7%A1%AE%E4%BF%9Dfd%E6%95%B0%E9%87%8F%E5%8F%AF%E7%94%A8" class="hash-link" aria-label="确保fd数量可用的直接链接" title="确保fd数量可用的直接链接">​</a></h3>
<p>因为上面修改了<code>ldap-server</code>的超时时间, 所以我们需要确保<code>ldap-server</code>的<code>fd</code>数量足够.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/28/ldap-idle-timeout#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://www.openldap.org/devel/admin/slapdconf2.html" target="_blank" rel="noopener noreferrer">Configuring slapd</a></li>
<li><a href="https://linux.die.net/man/1/ldapmodify" target="_blank" rel="noopener noreferrer">ldapmodify(1) - Linux man page</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>ldap</category>
            <category>nslcd</category>
        </item>
        <item>
            <title><![CDATA[grpc服务tls连接握手失败问题排查]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/27/grpc-tls-handshake-failed</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/27/grpc-tls-handshake-failed</guid>
            <pubDate>Mon, 27 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[近期在访问通过公网暴露的grpc服务时连接时报错, 异常信息如下]]></description>
            <content:encoded><![CDATA[<p>近期在访问通过公网暴露的<code>grpc</code>服务时连接时报错, 异常信息如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Exception in thread "main" io.grpc.StatusException: UNAVAILABLE: io exception</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Channel Pipeline: [SslHandler#0, ProtocolNegotiators$ClientTlsHandler#0, WriteBufferingAndExceptionHandler#0, DefaultChannelPipeline$TailContext#0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.Status.asException(Status.java:554)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.kotlin.ClientCalls$rpcImpl$1$1$1.onClose(ClientCalls.kt:296)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:576)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:70)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInternal(ClientCallImpl.java:757)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:736)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:133)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at java.base/java.lang.Thread.run(Thread.java:833)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: io.netty.handler.ssl.NotSslRecordException: not an SSL/TLS record: 485454502f312e312034303320466f7262696464656e0a436f6e74656e742d547970653a20746578742f68746d6c3b20636861727365743d7574662d380a5365727665723a2041444d2f322e312e310a436f6e6e656374696f6e3a20636c6f73650a436f6e74656e742d4c656e6774683a203531320a0a3c68746d6c3e0a3c686561643e0a3c6d65746120687474702d65717569763d22436f6e74656e742d547970652220636f6e74656e743d22746578746d6c3b636861727365743d5554462d3822202f3e0a2020203c7374796c653e626f64797b6261636b67726f756e642d636f6c6f723a234646464646467d3c2f7374796c653e200a3c7469746c653e7a687935342d48473130302d32e99d9ee6b395e998bbe696ad3c2f7469746c653e0a20203c736372697074206c616e67756167653d226a6176617363726970742220747970653d22746578742f6a617661736372697074223e0a20202020202020202077696e646f772e6f6e6c6f6164203d2066756e6374696f6e202829207b200a2020202020202020202020646f63756d656e742e676574456c656d656e744279496428226d61696e4672616d6522292e7372633d2022687474703a2f2f3230332e39332e3137302e3231393a393038302f6572726f722e68746d6c223b200a2020202020202020202020207d0a3c2f7363726970743e2020200a3c2f686561643e0a20203c626f64793e0a2020202020203c696672616d652069643d226d61696e4672616d6522207372633d2222206672616d65626f726465723d2230222077696474683d223130302522206865696768743d2231303025223e3c2f696672616d653e0a20203c2f626f64793e0a3c2f68746d6c3e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1215)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	... 1 more</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="原因">原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/27/grpc-tls-handshake-failed#%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="原因的直接链接" title="原因的直接链接">​</a></h2>
<p>该服务是通过<code>aws</code>的<code>nlb</code>来实现公网访问的, 由于<code>aws</code>近期的安全限制导致<code>tls</code>的连接无法建立需要进行备案, 该问题是近期发生的,
之前是可以正常访问的.<br></p>
<p>根据异常信息可以看出, 服务端返回的是非ssl的响应导致客户端抛出<code>NotSslRecordException</code><br>
服务端返回的内容为16进制的如下内容</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">485454502f312e312034303320466f7262696464656e0a436f6e74656e742d547970653a20746578742f68746d6c3b20636861727365743d7574662d380a5365727665723a2041444d2f322e312e310a436f6e6e656374696f6e3a20636c6f73650a436f6e74656e742d4c656e6774683a203531320a0a3c68746d6c3e0a3c686561643e0a3c6d65746120687474702d65717569763d22436f6e74656e742d547970652220636f6e74656e743d22746578746d6c3b636861727365743d5554462d3822202f3e0a2020203c7374796c653e626f64797b6261636b67726f756e642d636f6c6f723a234646464646467d3c2f7374796c653e200a3c7469746c653e7a687935342d48473130302d32e99d9ee6b395e998bbe696ad3c2f7469746c653e0a20203c736372697074206c616e67756167653d226a6176617363726970742220747970653d22746578742f6a617661736372697074223e0a20202020202020202077696e646f772e6f6e6c6f6164203d2066756e6374696f6e202829207b200a2020202020202020202020646f63756d656e742e676574456c656d656e744279496428226d61696e4672616d6522292e7372633d2022687474703a2f2f3230332e39332e3137302e3231393a393038302f6572726f722e68746d6c223b200a2020202020202020202020207d0a3c2f7363726970743e2020200a3c2f686561643e0a20203c626f64793e0a2020202020203c696672616d652069643d226d61696e4672616d6522207372633d2222206672616d65626f726465723d2230222077696474683d223130302522206865696768743d2231303025223e3c2f696672616d653e0a20203c2f626f64793e0a3c2f68746d6c3e</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使用16进制转换工具转换为文本内容如下</p>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">HTTP/1.1 403 Forbidden</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Content-Type: text/html; charset=utf-8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server: ADM/2.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Connection: close</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Content-Length: 512</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">html</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">http-equiv</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Content-Type</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">content</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">textml;charset=UTF-8</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">style</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token style language-css selector" style="color:#00009f">body</span><span class="token style language-css"> </span><span class="token style language-css punctuation" style="color:#393A34">{</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">		</span><span class="token style language-css property" style="color:#36acaa">background-color</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css hexcode color">#FFFFFF</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">	</span><span class="token style language-css punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">style</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">zhy54-HG100-2非法阻断</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">language</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">javascript</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">text/javascript</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">		</span><span class="token script language-javascript dom variable" style="color:#36acaa">window</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method-variable function-variable method function property-access" style="color:#d73a49">onload</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword" style="color:#00009f">function</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">			</span><span class="token script language-javascript dom variable" style="color:#36acaa">document</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">getElementById</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"mainFrame"</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">src</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">"http://203.93.170.219:9080/error.html"</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">		</span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">	</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">body</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">iframe</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">mainFrame</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">frameborder</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">width</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">100%</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">height</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">100%</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">iframe</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">body</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">html</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到服务端返回的是一个<code>403</code>的<code>html</code>页面, 该页面是由<code>aws</code>的<code>nlb</code>返回的, 该页面嵌套了一个<code>iframe</code>标签,
里面的目标是<code>http://203.93.170.219:9080/error.html</code> <br></p>
<p>访问该页面可以看到如下内容</p>
<p><img loading="lazy" alt="页面截图" src="https://www.geek66.cyou/zh-CN/assets/images/screenshot-8c7af8d8611ffc4b87da535729eef1dd.jpeg" width="2558" height="1239" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/27/grpc-tls-handshake-failed#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>根据目前的信息来看, 该问题是由于<code>aws</code>的安全限制导致的, <code>nlb</code>暴露的服务需要进行备案.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/27/grpc-tls-handshake-failed#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://s3.cn-north-1.amazonaws.com.cn/sinnetcloud/%E5%85%AC%E5%AE%89%E5%A4%87%E6%A1%88/%E8%8E%B7%E5%8F%96ELB%E7%9A%84IP/AWS+ICP%E5%A4%87%E6%A1%88%E4%BD%BF%E7%94%A8ELB%E9%A2%84%E7%95%99IP%E6%8C%87%E5%8D%97_V2.1(%E6%96%B0%E7%89%88).pdf" target="_blank" rel="noopener noreferrer">AWS+ICP备案使用ELB预留IP指南_V2.1(新版).pdf</a></li>
<li><a href="http://s3.cn-northwest-1.amazonaws.com.cn/www.nwcdcloud.cn/icp.pdf" target="_blank" rel="noopener noreferrer">关于 ICP 备案/公安备案/ICP 证书申请流程的指导</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>grpc</category>
            <category>tls</category>
            <category>aws</category>
            <category>network-loadbalancer</category>
        </item>
        <item>
            <title><![CDATA[通过使用evans来更加便捷地调试grpc服务]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans</guid>
            <pubDate>Sat, 25 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[有的时候需要调试grpc服务, 但是通过代码来进行调试比较麻烦, 因为需要编写相关代码, 这个时候需要一个工具来帮助我们进行调试,]]></description>
            <content:encoded><![CDATA[<p>有的时候需要调试<code>grpc</code>服务, 但是通过代码来进行调试比较麻烦, 因为需要编写相关代码, 这个时候需要一个工具来帮助我们进行调试,
这里介绍一个工具<code>evans</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2>
<p>进入<a href="https://github.com/ktr0731/evans/releases" target="_blank" rel="noopener noreferrer">Releases</a>页面下载对应的版本, 然后进行解压. <br>
解压后的文件夹中有一个<code>evans</code>的可执行文件, 如果想在任意位置都通过<code>evans</code>来调用, 那么需要做以下操作列表中的任意一种</p>
<ul>
<li>放到<code>/usr/local/bin</code>目录下.</li>
<li>将<code>/path/to/evans</code>添加到<code>PATH</code>环境变量中.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动">启动<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E5%90%AF%E5%8A%A8" class="hash-link" aria-label="启动的直接链接" title="启动的直接链接">​</a></h2>
<p>通过<code>evans</code>命令启动, 由于服务调用需要知道契约, 所以需要指定契约文件, 有两种方式</p>
<ul>
<li>给定protobuf文件</li>
</ul>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">evans --host &lt;HOST&gt; --port &lt;PORT&gt; --path &lt;PROTOBUF_ROOT&gt; --proto &lt;PROTOBUF_FILE&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其中:<br>
<code>&lt;PROTOBUF_ROOT&gt;</code>是protobuf文件的根目录<br>
<code>&lt;PROTOBUF_FILE&gt;</code>是protobuf文件相对于<code>&lt;PROTOBUF_ROOT&gt;</code>的路径<br></p>
<p>例如以下给定参数:<br>
<code>--path /Users/kuoxiangcheng/protobuf --proto test/test.proto</code><br>
在这个例子中<code>test/test.proto</code>是处于<code>/Users/kuoxiangcheng/protobuf</code>目录下的文件.<br>
当多个<code>protobuf</code>之间存在依赖关系时, 配置<code>--path</code>是一个很好的方式, 因为可以通过<code>--path</code>来指定protobuf文件的根目录</p>
<ul>
<li>通过reflection方式运行</li>
</ul>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">evans --host &lt;HOST&gt; --port &lt;PORT&gt; -r</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当执行上面的命令后, 会进入evans的交互式界面, 内容如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ______</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> |  ____|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> | |__    __   __   __ _   _ __    ___</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> |  __|   \ \ / /  / _. | | '_ \  / __|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> | |____   \ V /  | (_| | | | | | \__ \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> |______|   \_/    \__,_| |_| |_| |___/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> more expressive universal gRPC client</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.16.243:27778&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="服务调用">服务调用<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8" class="hash-link" aria-label="服务调用的直接链接" title="服务调用的直接链接">​</a></h2>
<p>当进入evans的交互式界面后, 后续连接特定的服务, 调用特定的方法, 以及传递参数都是通过交互式界面来完成的.<br>
接下来需要几个步骤来完成服务的调用</p>
<ul>
<li>设置<code>package</code></li>
<li>设置<code>service</code></li>
<li>调用<code>rpc</code></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="列出package">列出<code>package</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E5%88%97%E5%87%BApackage" class="hash-link" aria-label="列出package的直接链接" title="列出package的直接链接">​</a></h3>
<p>通过<code>show package</code>命令来查看当前连接的服务中的<code>package</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">show package</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当执行上述命令后, 会列出当前连接的服务中的所有<code>package</code>, 参考输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">+---------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|    PACKAGE    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| nott.v1.nottd |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| nott.v1.nottm |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="设置package">设置<code>package</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E8%AE%BE%E7%BD%AEpackage" class="hash-link" aria-label="设置package的直接链接" title="设置package的直接链接">​</a></h3>
<p>根据命令执行的结果选择一个特定的<code>package</code>进行设置.<br>
例如: 设置<code>package</code>为<code>nott.v1.nottm</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">service nott.v1.nottm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="列出service">列出<code>service</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E5%88%97%E5%87%BAservice" class="hash-link" aria-label="列出service的直接链接" title="列出service的直接链接">​</a></h3>
<p>当设置完<code>package</code>后, 还需要设置<code>service</code>, 通过<code>show service</code>命令来查看当前<code>package</code>下的所有<code>service</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">show service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当执行上述命令后, 会列出当前连接的服务中的所有<code>service</code>, 参考输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">+---------+---------------------+-----------------------+------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| SERVICE |         RPC         |     REQUEST TYPE      |     RESPONSE TYPE      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------+---------------------+-----------------------+------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | Register            | RegisterRequest       | RegisterResponse       |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | ListRegisters       | ListRegistersRequest  | ListRegistersResponse  |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | UpdateRegister      | UpdateRegisterRequest | UpdateRegisterResponse |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | RevokeRegister      | RevokeRegisterRequest | RevokeRegisterResponse |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | Push                | PushRequest           | PushResponse           |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | Poll                | PollRequest           | PollResponse           |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | RetrieveSentMessage | PollRequest           | PollResponse           |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | QueryMessages       | QueryMessagesRequest  | QueryMessagesResponse  |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | CheckState          | CheckStateRequest     | CheckStateResponse     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | QueueStatus         | QueueStatusRequest    | QueueStatusResponse    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | InspectNottd        | InspectNottdRequest   | InspectNottdResponse   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | InspectNottm        | InspectNottmRequest   | InspectNottmResponse   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| Nottm   | RestartNottd        | RestartNottdRequest   | RestartNottdResponse   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+---------+---------------------+-----------------------+------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="设置service">设置<code>service</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E8%AE%BE%E7%BD%AEservice" class="hash-link" aria-label="设置service的直接链接" title="设置service的直接链接">​</a></h3>
<p>根据命令执行的结果选择一个特定的<code>service</code>进行设置.<br>
例如: 设置<code>service</code>为<code>Nottm</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">service Nottm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="调用rpc">调用<code>rpc</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E8%B0%83%E7%94%A8rpc" class="hash-link" aria-label="调用rpc的直接链接" title="调用rpc的直接链接">​</a></h3>
<p>当设置完<code>service</code>后, 可以通过<code>call &lt;RPC&gt;</code>命令来调用<code>rpc</code>方法.<br></p>
<p>例如: 调用<code>Register</code>方法</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">call Register</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后根据提示输入参数, 当输入完毕后, 会返回调用结果.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/25/evans#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/ktr0731/evans" target="_blank" rel="noopener noreferrer">evans</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1892716" target="_blank" rel="noopener noreferrer">超实用的 gRPC 客户端调试工具</a></li>
</ul>]]></content:encoded>
            <category>evans</category>
            <category>grpc</category>
        </item>
        <item>
            <title><![CDATA[transport endpoint is not connected问题解决]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/23/transport-endpoint-is-not-connected</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/23/transport-endpoint-is-not-connected</guid>
            <pubDate>Thu, 23 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[在升级执行过程中遇到问题, 升级执行过程会down老的环境并setup新的环境]]></description>
            <content:encoded><![CDATA[<p>在升级执行过程中遇到问题, 升级执行过程会<code>down</code>老的环境并<code>setup</code>新的环境<br>
在<code>ymir setup</code>过程中出现<code>transport endpoint is not connected</code>, 该问题导致升级失败<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="原因">原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/23/transport-endpoint-is-not-connected#%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="原因的直接链接" title="原因的直接链接">​</a></h2>
<p>旧环境执行<code>ymir down</code>的时候没有成功<code>detach</code>掉相关挂载<br></p>
<p>目前<code>detach</code>挂载的行为是在<code>fastone-rclone</code>容器中负责的, 其执行原理是当进程收到<code>sigkill</code>信号(该信号由<code>ymir down</code>触发)
时进行调用<code>fusermount -u /fastone-mnt</code>命令来进行<code>detach</code>, 此detach行为没执行成功目前推测有以下几种可能</p>
<ul>
<li>超出了<code>ymir down</code>最大容忍时间(<code>ymir down</code>底层调用<code>docker-compose</code>来停止服务默认超时时间是10s)</li>
<li>在<code>fastone-rclone</code>容器收到<code>sigkill</code>信号并执行<code>detach</code>时由于该<code>devide</code>下的<code>fd</code>被相关进程占用导致无法<code>detach</code>
<br>(如果在卸载设备或文件系统时, 仍然有进程使用相关文件句柄, 那么卸载操作通常会失败. 这是因为<code>linux</code>内核会检测到有进程仍然在使用文件句柄, 因此无法卸载设备或文件系统.)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/23/transport-endpoint-is-not-connected#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<ul>
<li><code>ymir down</code>的超时时间可配置确保服务能够都正常清理并成功退出</li>
<li><code>fastone-rclone</code>服务<code>detach</code>挂载时需要强制<code>detach</code>, 考虑采用<code>umount -l</code>来实现该功能</li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>umount</category>
            <category>fuse</category>
        </item>
        <item>
            <title><![CDATA[TestContainers固定容器端口]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/16/testcontainers-fixed-port</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/16/testcontainers-fixed-port</guid>
            <pubDate>Thu, 16 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[这篇文章的内容发生的背景和测试java的ldap的failover有关.]]></description>
            <content:encoded><![CDATA[<p>这篇文章的内容发生的背景和测试<code>java</code>的<code>ldap</code>的<code>failover</code>有关.<br>
测试<code>failover</code>需要启动两个<code>ldap</code>的容器并<code>stop</code>其中一个. <br>
但是<code>stop</code>完之后遇到了一个问题当下次启动后分配的端口会变化(这是由于<code>docker</code>的内部机制导致的).<br>
接下来将会介绍如何解决这个问题.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/16/testcontainers-fixed-port#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="启动容器时增加fixedexposedport">启动容器时增加<code>fixedExposedPort</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/03/16/testcontainers-fixed-port#%E5%90%AF%E5%8A%A8%E5%AE%B9%E5%99%A8%E6%97%B6%E5%A2%9E%E5%8A%A0fixedexposedport" class="hash-link" aria-label="启动容器时增加fixedexposedport的直接链接" title="启动容器时增加fixedexposedport的直接链接">​</a></h3>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> container </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> FixedHostPortGenericContainer</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"&lt;your-docker-image&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">container</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">withExposedPorts</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">389</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">container</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">withFixedExposedPort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	TestSocketUtils</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findAvailableTcpPort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token number" style="color:#36acaa">389</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// we need to fix the port to make sure the port is the same when the container is restarted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="注意事项">注意事项<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/16/testcontainers-fixed-port#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" class="hash-link" aria-label="注意事项的直接链接" title="注意事项的直接链接">​</a></h3>
<p>需要注意以下几点:</p>
<ul>
<li>创建FixedHostPortGenericContainer的实例来固定端口
<br><code>FixedHostPortGenericContainer</code>是<code>TestContainers</code>提供的一个<code>GenericContainer</code>的子类, 用来固定容器的端口</li>
<li>使用<code>TestSocketUtils.findAvailableTcpPort()</code>获取一个可用的端口
<br>使用<code>TestSocketUtils.findAvailableTcpPort()</code>获取一个可用的端口确保<code>host</code>上的端口没有被占用</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/16/testcontainers-fixed-port#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/util/TestSocketUtils.html" target="_blank" rel="noopener noreferrer">Class TestSocketUtils</a></li>
<li><a href="https://javadoc.io/static/org.testcontainers/testcontainers/1.15.1/org/testcontainers/containers/FixedHostPortGenericContainer.html" target="_blank" rel="noopener noreferrer">Class FixedHostPortGenericContainer&lt;SELF extends FixedHostPortGenericContainer&lt;SELF&gt;&gt;</a></li>
<li><a href="https://www.tabnine.com/code/java/classes/org.testcontainers.containers.FixedHostPortGenericContainer" target="_blank" rel="noopener noreferrer">How to useFixedHostPortGenericContainerinorg.testcontainers.containers</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>testcontainers</category>
            <category>docker</category>
            <category>ldap-failover</category>
        </item>
        <item>
            <title><![CDATA[通过增加timeout-control以解决当tcp连接一直处于SYN_SENT状态导致java中的ldap-client的failover不工作的问题]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover</guid>
            <pubDate>Wed, 15 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[今天遇到一个问题是当测试模拟ldap的服务端主节点挂掉的时候并在页面点击登录, 后端一直未作出响应.]]></description>
            <content:encoded><![CDATA[<p>今天遇到一个问题是当测试模拟<code>ldap</code>的服务端主节点挂掉的时候并在页面点击登录, 后端一直未作出响应.<br>
这个问题的原因是因为代码中的<code>ldap-client</code>的<code>failover</code>未生效, 通过排查发现<code>ldap-client</code>一直在连接<code>ldap</code>的主节点,
并且<code>tcp</code>连接一直处于<code>SYN_SENT</code>状态.<br>
由于<code>ldap-client</code>没有默认情况下没有控制超时, 导致代码一直堵塞, 从而导致<code>failover</code>不工作.<br>
下面将开始介绍具体细节以及解决方案.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="排查过程">排查过程<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E6%8E%92%E6%9F%A5%E8%BF%87%E7%A8%8B" class="hash-link" aria-label="排查过程的直接链接" title="排查过程的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确认服务配置的ldap地址有那些">确认服务配置的<code>ldap</code>地址有那些<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E7%A1%AE%E8%AE%A4%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E7%9A%84ldap%E5%9C%B0%E5%9D%80%E6%9C%89%E9%82%A3%E4%BA%9B" class="hash-link" aria-label="确认服务配置的ldap地址有那些的直接链接" title="确认服务配置的ldap地址有那些的直接链接">​</a></h3>
<p>执行<code>docker inspect</code>命令, 确认服务配置的<code>ldap</code>地址</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo docker inspect fastone-api |grep 'spring.ldap.urls'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">                "spring.ldap.urls=ldap://10.0.3.16:389,ldap://10.0.3.3:389",</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到配置了两个<code>ldap</code>地址分别为</p>
<ul>
<li>ldap://10.0.3.16:389</li>
<li>ldap://10.0.3.3:389</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确认服务的进程id">确认服务的进程ID<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E7%A1%AE%E8%AE%A4%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%BF%9B%E7%A8%8Bid" class="hash-link" aria-label="确认服务的进程ID的直接链接" title="确认服务的进程ID的直接链接">​</a></h3>
<p>执行<code>ps</code>命令, 确认服务的进程ID</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ps -ef |grep FastoneApplication</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>命令输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ubuntu   22663 14459  0 16:52 pts/5    00:00:00 grep --color=auto FastoneApplication</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root     31320 31246  1 14:23 ?        00:02:39 java -cp @/app/jib-classpath-file com.fastonetech.fastone.FastoneApplication</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到进程ID为<code>31320</code>, 接下来通过<code>lsof</code>命令查看<code>31320</code>进程的<code>tcp</code>连接状态<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="确认服务进程的tcp连接状态">确认服务进程的<code>tcp</code>连接状态<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E7%A1%AE%E8%AE%A4%E6%9C%8D%E5%8A%A1%E8%BF%9B%E7%A8%8B%E7%9A%84tcp%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81" class="hash-link" aria-label="确认服务进程的tcp连接状态的直接链接" title="确认服务进程的tcp连接状态的直接链接">​</a></h3>
<p>通过<code>lsof</code>查看<code>tcp</code>连接状态</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo lsof -p 31320 |grep '10.0.3.16'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>命令输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">java    31320 root  506u     IPv6            5728853       0t0     TCP fastone:37408-&gt;10.0.3.16:ldap (SYN_SENT)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到服务进程的<code>tcp</code>连接状态一直处于<code>SYN_SENT</code>状态.<br></p>
<blockquote>
<p><code>SYN_SENT</code>状态的连接, 说明客户端已经发送了<code>SYN</code>包, 但是没有收到<code>SYN/ACK</code>包, 此时会处于<code>SYN_SENT</code>状态<br></p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="workaround">Workaround<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#workaround" class="hash-link" aria-label="Workaround的直接链接" title="Workaround的直接链接">​</a></h2>
<p>由于这个问题会<code>blocking</code>测试进度所以需要先给出一个<code>workaround</code>来解决这个问题.<br>
目前的解决方案是通过<code>iptables</code>限制<code>tcp</code>连接, 使其直接<code>Connection refused</code>. 这样可以确保测试能够继续进行<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="通过iptables新增output规则使tcp连接直接失败">通过<code>iptables</code>新增<code>OUTPUT</code>规则使<code>tcp</code>连接直接失败<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E9%80%9A%E8%BF%87iptables%E6%96%B0%E5%A2%9Eoutput%E8%A7%84%E5%88%99%E4%BD%BFtcp%E8%BF%9E%E6%8E%A5%E7%9B%B4%E6%8E%A5%E5%A4%B1%E8%B4%A5" class="hash-link" aria-label="通过iptables新增output规则使tcp连接直接失败的直接链接" title="通过iptables新增output规则使tcp连接直接失败的直接链接">​</a></h3>
<ul>
<li>新增OUTPUT规则</li>
</ul>
<blockquote>
<p>注意<code>target</code>应该为<code>REJECT</code>而不是<code>DROP</code>.<br>
这是因为<code>DROP</code>对于<code>tcp</code>连接来说, 会直接丢弃数据包.<br>
所以需要使用<code>REJECT</code>来拒绝连接, 并且需要指定<code>--reject-with tcp-reset</code>来拒绝连接.<br>
这样客户端会知道连接被拒绝了而不是一直处于<code>SYN_SENT</code>状态.<br></p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -A OUTPUT -p tcp -d 10.0.3.16 --dport 389 -j REJECT --reject-with tcp-reset</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>查看规则列表</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -L OUTPUT -v -n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Chain OUTPUT (policy ACCEPT 301 packets, 95101 bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pkts bytes target     prot opt in     out     source               destination         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0     0 REJECT     tcp  --  *      *       0.0.0.0/0            10.0.3.16            tcp dpt:389 reject-with tcp-reset</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到, 新增了一条<code>REJECT</code>规则<br></p>
<ul>
<li>测试规则是否生效</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">telnet 10.0.3.16 389</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Trying 10.0.3.16...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">telnet: Unable to connect to remote host: Connection refused</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到连接被拒绝了, 说明规则生效了<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="删除规则">删除规则<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%88%A0%E9%99%A4%E8%A7%84%E5%88%99" class="hash-link" aria-label="删除规则的直接链接" title="删除规则的直接链接">​</a></h3>
<p>当修复代码后, 需要删除规则, 以便测试继续进行<br></p>
<ul>
<li>删除规则</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -D OUTPUT -p tcp -d 10.0.3.16 --dport 389 -j REJECT --reject-with tcp-reset</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>查看规则列表</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -L OUTPUT -v -n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Chain OUTPUT (policy ACCEPT 1922 packets, 947K bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pkts bytes target     prot opt in     out     source               destination    </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>确认连接状态恢复如初</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">telnet 10.0.3.16 389</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Trying 10.0.3.16...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">^C</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到连接状态恢复如初, 客户端一直处于<code>SYN_SENT</code>状态<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<p>根据上面的分析, 问题的原因<code>TCP</code>连接状态一直处于<code>SYN_SENT</code>状态导致<code>ldap</code>的<code>failover</code>未生效<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="偏离设计预期">偏离设计预期<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%81%8F%E7%A6%BB%E8%AE%BE%E8%AE%A1%E9%A2%84%E6%9C%9F" class="hash-link" aria-label="偏离设计预期的直接链接" title="偏离设计预期的直接链接">​</a></h3>
<p>这里跟我一开始设计有偏差, 因为我一开始的设想的预期应该是直接<code>Connection refused</code>, 类似如下行为</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="非堵塞">非堵塞<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E9%9D%9E%E5%A0%B5%E5%A1%9E" class="hash-link" aria-label="非堵塞的直接链接" title="非堵塞的直接链接">​</a></h4>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">telnet localhost 389</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当执行上述命令时, 会直接报错</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Trying 127.0.0.1...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">telnet: Unable to connect to remote host: Connection refused</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>服务端会直接拒绝连接, 但是实际上并没有这样的行为, 服务端一直处于<code>SYN_SENT</code>状态, 也就是说服务端一直在尝试连接<br></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="堵塞">堵塞<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%A0%B5%E5%A1%9E" class="hash-link" aria-label="堵塞的直接链接" title="堵塞的直接链接">​</a></h4>
<p>类似如下行为</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">telnet 10.0.3.16 389</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Trying 10.0.3.16...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">^C</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到一直在尝试连接, 但是并没有超时, 也就是说一直在尝试连接<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ldap-client的timeout-control未生效"><code>ldap-client</code>的<code>timeout-control</code>未生效<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#ldap-client%E7%9A%84timeout-control%E6%9C%AA%E7%94%9F%E6%95%88" class="hash-link" aria-label="ldap-client的timeout-control未生效的直接链接" title="ldap-client的timeout-control未生效的直接链接">​</a></h3>
<p>另外一个问题是<code>tpc</code>一直处于<code>SYN_SENT</code>状态理论来说应该触发<code>timeout-control</code>, 但是实际上并没有触发<br></p>
<p>接下来我们需要看一下<code>java-ldap</code>中是如何实现<code>timeout-control</code>的<br></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="默认超时时间">默认超时时间<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E9%BB%98%E8%AE%A4%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4" class="hash-link" aria-label="默认超时时间的直接链接" title="默认超时时间的直接链接">​</a></h4>
<p>在<code>java</code>中<code>ldap</code>的连接是由<code>com.sun.jndi.ldap.LdapCtx.connectTimeout</code>控制的.<br>
参考代码如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">final</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">LdapCtx</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">ComponentDirContext</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">EventDirContext</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">LdapContext</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> connectTimeout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">// no timeout value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以看到<code>connectTimeout</code>默认值为<code>-1</code>, 也就是说默认情况下是没有超时的. 这其实不合理, 因为网络连接是有超时的,
否则会导致代码一直堵塞<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="继承ldapcontextsource并增加timeout-control配置">继承<code>LdapContextSource</code>并增加<code>timeout-control</code>配置<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E7%BB%A7%E6%89%BFldapcontextsource%E5%B9%B6%E5%A2%9E%E5%8A%A0timeout-control%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="继承ldapcontextsource并增加timeout-control配置的直接链接" title="继承ldapcontextsource并增加timeout-control配置的直接链接">​</a></h3>
<p>默认情况下<code>ldap</code>是没有<code>timeout-control</code>的, 不过其提供了配置<code>connectTimeout</code>的方法, 是通过<code>environment</code>来配置的.<br>
对于上层应用来说我们用的是通过<code>spring</code>封装过的<code>ldap</code>, 所以我们需要对于<code>spring</code>进行扩展,
主要是通过继承<code>LdapContextSource</code>来实现<br></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">WithMoreEnvironmentContextSource.java</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * The extension of {@link LdapContextSource} to support more environment.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * Sometimes we need to set more environment to environment.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * For example, we need to set the connectTimeout to avoid thread blocking and makesure the failover works.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * For more details about the connectTimeout, see {@link com.sun.jndi.ldap.LdapCtx.connectTimeout}</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * For more details about the readTimeout, see {@link com.sun.jndi.ldap.LdapCtx.readTimeout}</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * For more details about the ldap failover, see {@link com.sun.jndi.ldap.LdapCtxFactory#getUsingURLs}</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @author Xiangcheng.Kuo</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">WithMoreEnvironmentContextSource</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">LdapContextSource</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token class-name">Integer</span><span class="token plain"> connectTimeout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token class-name">Integer</span><span class="token plain"> readTimeout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setConnectTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Integer</span><span class="token plain"> connectTimeout</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">connectTimeout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> connectTimeout</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setReadTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Integer</span><span class="token plain"> readTimeout</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">readTimeout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> readTimeout</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> </span><span class="token class-name">DirContext</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getDirContextInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Hashtable</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">NamingException</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// The module named "com.sun.jndi.ldap.LdapCtx" is not exported.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// So we can't use the following code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// LdapCtx.CONNECT_TIMEOUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// For more information about CONNECT_TIMEOUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// see 1. LdapCtx.initEnv 2. Connection.createSocket</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		environment</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"com.sun.jndi.ldap.connect.timeout"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> connectTimeout</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		environment</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"com.sun.jndi.ldap.read.timeout"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> readTimeout</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getDirContextInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="将withmoreenvironmentcontextsource添加到容器中">将<code>WithMoreEnvironmentContextSource</code>添加到容器中<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%B0%86withmoreenvironmentcontextsource%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%AE%B9%E5%99%A8%E4%B8%AD" class="hash-link" aria-label="将withmoreenvironmentcontextsource添加到容器中的直接链接" title="将withmoreenvironmentcontextsource添加到容器中的直接链接">​</a></h3>
<p>接下来需要将<code>WithMoreEnvironmentContextSource</code>添加到容器中, 确保上层的依赖如<code>LdapTemplate</code>以及自定义的<code>Reposity</code>
使用到我们扩展的<code>LdapContextSource</code><br></p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">LdapConfiguration.java</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">LdapConfiguration</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">LdapContextSource</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ldapContextSource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">LdapProperties</span><span class="token plain"> properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Environment</span><span class="token plain"> environment</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">ObjectProvider</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">DirContextAuthenticationStrategy</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> dirContextAuthenticationStrategy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// copy from org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration#ldapContextSource</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">WithMoreEnvironmentContextSource</span><span class="token plain"> source </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">WithMoreEnvironmentContextSource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		dirContextAuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ifUnique</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">setAuthenticationStrategy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">PropertyMapper</span><span class="token plain"> propertyMapper </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">PropertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">alwaysApplyingWhenNonNull</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		propertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getUsername</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">setUserDn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		propertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getPassword</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">setPassword</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		propertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getAnonymousReadOnly</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">setAnonymousReadOnly</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		propertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getBase</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">setBase</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		propertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">determineUrls</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token operator" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">setUrls</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		propertyMapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getBaseEnvironment</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">to</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">baseEnvironment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> source</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setBaseEnvironmentProperties</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">unmodifiableMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">baseEnvironment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// We need to make sure the failover works fast when using multiple ldap backend</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getUrls</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			source</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setConnectTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			source</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setReadTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> source</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>主要代码复制自<code>org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration#ldapContextSource</code>,
具体细节可以参考其源码<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="当iptables规则较多自定义的受影响-如下所示">当<code>iptables</code>规则较多自定义的受影响, 如下所示<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%BD%93iptables%E8%A7%84%E5%88%99%E8%BE%83%E5%A4%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E5%8F%97%E5%BD%B1%E5%93%8D-%EF%BF%BD%E5%A6%82%E4%B8%8B%E6%89%80%E7%A4%BA" class="hash-link" aria-label="当iptables规则较多自定义的受影响-如下所示的直接链接" title="当iptables规则较多自定义的受影响-如下所示的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -L OUTPUT -v -n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Chain OUTPUT (policy ACCEPT 186K packets, 95M bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pkts bytes target     prot opt in     out     source               destination         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    0     0 DROP       tcp  --  *      *       10.0.3.16            0.0.0.0/0            tcp dpt:3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    0     0 DROP       tcp  --  *      *       10.0.3.16            0.0.0.0/0            tcp dpt:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    0     0 DROP       tcp  --  *      *       10.0.3.16            0.0.0.0/0            tcp spt:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    0     0 DROP       tcp  --  *      *       10.0.3.16            0.0.0.0/0            tcp spt:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   63  3276 DROP       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            state NEW tcp dpt:389</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    0     0 REJECT     tcp  --  *      *       0.0.0.0/0            10.0.3.16            tcp dpt:389 reject-with tcp-reset</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>需要清空所有OUTPUT规则</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -F OUTPUT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>重新查看OUTPUT规则</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iptables -L OUTPUT -v -n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Chain OUTPUT (policy ACCEPT 1883 packets, 1126K bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pkts bytes target     prot opt in     out     source               destination      </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2023/03/15/ldap-client-failover#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://medium.com/devsys/what-means-syn-sent-status-in-a-socket-5ea03eaf6ca9" target="_blank" rel="noopener noreferrer">What means SYN_SENT status in a socket?</a></li>
<li><a href="https://www.cisco.com/assets/sol/sb/CVR100W_GUI_EN/help/EN_help/status13.html" target="_blank" rel="noopener noreferrer">Viewing NETSTAT Information</a></li>
<li><a href="http://karunsubramanian.com/network/what-is-syn_sent-socket-status/" target="_blank" rel="noopener noreferrer">What is SYN_SENT socket status?</a></li>
<li><a href="https://www.baeldung.com/linux/iptables-reject-vs-drop" target="_blank" rel="noopener noreferrer">REJECT vs. DROP When Using iptables</a></li>
<li><a href="https://serverfault.com/questions/157375/reject-vs-drop-when-using-iptables" target="_blank" rel="noopener noreferrer">REJECT vs DROP when using iptables</a></li>
<li><a href="https://stackoverflow.com/questions/40218516/a-way-to-define-implement-failover-ldap-servers-in-java-code" target="_blank" rel="noopener noreferrer">A way to define / implement failover ldap servers in java code</a></li>
<li><a href="https://docs.oracle.com/javase/tutorial/jndi/newstuff/readtimeout.html" target="_blank" rel="noopener noreferrer">Setting Timeout for Ldap Operations</a></li>
</ul>]]></content:encoded>
            <category>problem-solving</category>
            <category>java</category>
            <category>ldap</category>
            <category>failover</category>
            <category>spring</category>
        </item>
    </channel>
</rss>