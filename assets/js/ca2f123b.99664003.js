"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[6931],{35478:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=n(85893),o=n(11151);const r={},i="Filesystem",a={id:"development/infra/filesystem",title:"Filesystem",description:"- rclone",source:"@site/docs/development/infra/filesystem.md",sourceDirName:"development/infra",slug:"/development/infra/filesystem",permalink:"/docs/development/infra/filesystem",draft:!1,unlisted:!1,editUrl:"https://github.com/orange-guo/markdowns/tree/master/docs/development/infra/filesystem.md",tags:[],version:"current",lastUpdatedBy:"Xiangcheng Kuo",lastUpdatedAt:1711952862,formattedLastUpdatedAt:"Apr 1, 2024",frontMatter:{},sidebar:"development",previous:{title:"Images",permalink:"/docs/development/infra/docker/images"},next:{title:"Projects",permalink:"/docs/development/infra/hpc/projects"}},c={},l=[];function d(e){const t={a:"a",h1:"h1",li:"li",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"filesystem",children:"Filesystem"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/rclone/rclone",children:"rclone"}),(0,s.jsx)("br",{}),'\n"rsync for cloud storage"-Google Drive, S3, Dropbox, Backblaze B2, One Drive, Swift, Hubic, Wasabi, Google Cloud\nStorage, Yandex Files']}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/juicedata/juicefs",children:"juicefs"}),(0,s.jsx)("br",{}),"\nJuiceFS is a distributed POSIX file system built on top of Redis and S3."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://min.io/",children:"minio"}),"\n",(0,s.jsx)("br",{}),"MinIO offers high-performance, S3 compatible object storage. Native to\nKubernetes, MinIO is the only object storage suite available on every public\ncloud, every Kubernetes distribution, the private cloud and the edge. MinIO\nis software-defined and is 100% open source under GNU AGPL v3."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/cognusion/fuse-copyfs",children:"fuse-copyfs"}),"\n",(0,s.jsx)("br",{}),"CopyFS is the copy-on-write (COW) versioned filesystem for FUSE. Years ago I added features to CopyFS 1.0, then\n1.0.1 came out and I never bothered to forward-port my changes. Now I have. Master is 1.3.1M, which is CopyFS 1.0.1 +\n1.3M"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/apache/incubator-opendal",children:"incubator-opendal"}),"\n",(0,s.jsx)("br",{}),"Apache OpenDAL: access data freely."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var s=n(67294);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);