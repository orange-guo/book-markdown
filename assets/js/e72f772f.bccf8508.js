"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[4037],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>d});var l=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,l,a=function(t,e){if(null==t)return{};var n,l,a={},r=Object.keys(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=l.createContext({}),c=function(t){var e=l.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=c(t.components);return l.createElement(u.Provider,{value:e},t.children)},p="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},k=l.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,u=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),p=c(n),k=a,d=p["".concat(u,".").concat(k)]||p[k]||m[k]||r;return n?l.createElement(d,i(i({ref:e},s),{},{components:n})):l.createElement(d,i({ref:e},s))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,i=new Array(r);i[0]=k;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o[p]="string"==typeof t?t:a,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},88255:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var l=n(83117),a=(n(67294),n(3905));const r={},i="Kotlin",o={unversionedId:"collection/curated-list/language/kotlin",id:"collection/curated-list/language/kotlin",title:"Kotlin",description:"- kotlin.link",source:"@site/docs/collection/curated-list/language/kotlin.md",sourceDirName:"collection/curated-list/language",slug:"/collection/curated-list/language/kotlin",permalink:"/docs/collection/curated-list/language/kotlin",draft:!1,editUrl:"https://github.com/orange-guo/markdowns/tree/master/docs/collection/curated-list/language/kotlin.md",tags:[],version:"current",lastUpdatedBy:"Xiangcheng Kuo",lastUpdatedAt:1705573219,formattedLastUpdatedAt:"Jan 18, 2024",frontMatter:{},sidebar:"collection",previous:{title:"Java",permalink:"/docs/collection/curated-list/language/java"},next:{title:"Python",permalink:"/docs/collection/curated-list/language/python"}},u={},c=[{value:"Samples",id:"samples",level:2},{value:"Web",id:"web",level:2},{value:"Dependency Injection",id:"dependency-injection",level:2},{value:"Utility",id:"utility",level:2},{value:"Test",id:"test",level:2},{value:"Logging",id:"logging",level:2},{value:"Database",id:"database",level:2},{value:"Command line",id:"command-line",level:2},{value:"Articles",id:"articles",level:2}],s={toc:c},p="wrapper";function m(t){let{components:e,...n}=t;return(0,a.kt)(p,(0,l.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kotlin"},"Kotlin"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kotlin.link/"},"kotlin.link")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/KotlinBy/awesome-kotlin"},"awesome-kotlin"),(0,a.kt)("br",null),"A curated list of awesome Kotlin related stuff Inspired by awesome-java."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/arrow-kt/arrow"},"arrow"),(0,a.kt)("br",null),"\u039brrow - Functional companion to Kotlin's Standard Library"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Kotlin/kotlinx.coroutines"},"kotlinx.coroutines"),(0,a.kt)("br",null),"Library support for Kotlin coroutines")),(0,a.kt)("h2",{id:"samples"},"Samples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/nomisRev/ktor-arrow-example"},"ktor-arrow-example"),(0,a.kt)("br",null),'Real World implementation - "The mother of all demo apps". Written in Kotlin, with Ktor, Arrow, SqlDelight, KotlinX Serialization, etc.')),(0,a.kt)("h2",{id:"web"},"Web"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ktor.io/"},"ktor"),(0,a.kt)("br",null),"Create asynchronous client and server applications. Anything from microservices to multiplatform HTTP client apps in a simple way. Open Source, free, and fun!")),(0,a.kt)("h2",{id:"dependency-injection"},"Dependency Injection"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/InsertKoinIO/koin"},"koin"),(0,a.kt)("br",null),"Koin - a pragmatic lightweight dependency injection framework for Kotlin & Kotlin Multiplatform"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kosi-libs.org/"},"Kodein"),(0,a.kt)("br",null),"Painless Kotlin Dependency Injection")),(0,a.kt)("h2",{id:"utility"},"Utility"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/renatoathaydes/kunion"},"kunion"),(0,a.kt)("br",null),"Union types for Kotlin")),(0,a.kt)("h2",{id:"test"},"Test"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kotest.io/"},"kotest"),(0,a.kt)("br",null),"Kotest is a flexible and elegant multi-platform test framework for Kotlin with extensive assertions and integrated property testing"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://mockk.io/"},"mockk"),(0,a.kt)("br",null),"mocking library for Kotlin"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mockito/mockito-kotlin"},"mockito-kotlin"),(0,a.kt)("br",null),"sing Mockito with Kotlin")),(0,a.kt)("h2",{id:"logging"},"Logging"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/oshai/kotlin-logging"},"kotlin-logging"),(0,a.kt)("br",null),"Lightweight Multiplatform logging framework for Kotlin. A convenient and performant logging facade.")),(0,a.kt)("h2",{id:"database"},"Database"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/ctripcorp/SQLlin"},"SQLlin"),(0,a.kt)("br",null),"A DSL SQLite library for Kotlin Multiplatform."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.ktorm.org/"},"ktorm"),(0,a.kt)("br",null),"Ktorm is a lightweight and efficient ORM Framework for Kotlin directly based on pure JDBC. It provides strong-typed and flexible SQL DSL and convenient sequence APIs to reduce our duplicated effort on database operations. All the SQL statements, of course, are generated automatically."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/Exposed"},"exposed"),(0,a.kt)("br",null),"Kotlin SQL Framework"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://cashapp.github.io/sqldelightSQLDelight"},"sqldelight"),(0,a.kt)("br",null),"SQLDelight generates typesafe kotlin APIs from your SQL statements. It verifies your schema, statements, and migrations at compile-time and provides IDE features like autocomplete and refactoring which make writing and maintaining SQL simple")),(0,a.kt)("h2",{id:"command-line"},"Command line"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/ajalt/clikt"},"clikt"),(0,a.kt)("br",null),"Multiplatform command line interface parsing for Kotlin"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Kotlin/kotlinx-cli"},"kotlinx-cli"),(0,a.kt)("br",null),"Pure Kotlin implementation of a generic CLI parser."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/xenomachina/kotlin-argparser"},"kotlin-argparser"),(0,a.kt)("br",null),"Easy to use and concise yet powerful and robust command line argument parsing for Kotlin")),(0,a.kt)("h2",{id:"articles"},"Articles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kt.academy/article/dispatcher-loom"},"Running Kotlin coroutines on Project Loom's virtual threads"))))}m.isMDXComponent=!0}}]);