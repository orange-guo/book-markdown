"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[1189],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,k=c["".concat(u,".").concat(d)]||c[d]||m[d]||l;return t?a.createElement(k,o(o({ref:n},s),{},{components:t})):a.createElement(k,o({ref:n},s))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6802:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const l={authors:["xiangcheng.kuo"],tags:["clojure","kotlin","java","spring"]},o="\u57fa\u4e8eclojure\u8868\u8fbe\u5f0f\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u7684\u6570\u636e\u9a8c\u8bc1",i={permalink:"/markdowns/blog/2023/03/02/",source:"@site/blog/2023-03-02.md",title:"\u57fa\u4e8eclojure\u8868\u8fbe\u5f0f\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u7684\u6570\u636e\u9a8c\u8bc1",description:"\u6570\u636e\u9a8c\u8bc1\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u9700\u6c42, \u5bf9\u4e8ejava\u9879\u76ee\u6765\u8bf4, \u76ee\u524djakarta\u7684bean validation\u5df2\u7ecf\u6210\u4e3a\u4e86java\u4e2d\u7684\u6807\u51c6.",date:"2023-03-02T00:00:00.000Z",formattedDate:"March 2, 2023",tags:[{label:"clojure",permalink:"/markdowns/blog/tags/clojure"},{label:"kotlin",permalink:"/markdowns/blog/tags/kotlin"},{label:"java",permalink:"/markdowns/blog/tags/java"},{label:"spring",permalink:"/markdowns/blog/tags/spring"}],readingTime:15.07,hasTruncateMarker:!0,authors:[{name:"Xiangcheng Kuo",title:"programmer on jvm platform",url:"https://github.com/orange-guo",imageURL:"https://github.com/orange-guo.png",key:"xiangcheng.kuo"}],frontMatter:{authors:["xiangcheng.kuo"],tags:["clojure","kotlin","java","spring"]},prevItem:{title:"\u811a\u672c\u4e2d\u5b9e\u73b0\u4fee\u6539\u7528\u6237\u5bc6\u7801",permalink:"/markdowns/blog/2023/03/03/"},nextItem:{title:"ubuntu\u4e2d\u5e38\u7528\u7684apt\u6e90",permalink:"/markdowns/blog/2023/02/26/"}},u={authorsImageUrls:[void 0]},p=[{value:"Why clojure",id:"why-clojure",level:2},{value:"\u57fa\u4e8e\u8868\u8fbe\u5f0f",id:"\u57fa\u4e8e\u8868\u8fbe\u5f0f",level:3},{value:"\u6570\u636e\u5904\u7406",id:"\u6570\u636e\u5904\u7406",level:3},{value:"\u57fa\u4e8e<code>jvm</code>",id:"\u57fa\u4e8ejvm",level:3},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:2},{value:"<code>jakarta</code>\u6269\u5c55\u5b9e\u73b0",id:"jakarta\u6269\u5c55\u5b9e\u73b0",level:3},{value:"\u65b0\u589e\u81ea\u5b9a\u4e49\u6ce8\u89e3<code>@ClojureExpressionConstraint</code>",id:"\u65b0\u589e\u81ea\u5b9a\u4e49\u6ce8\u89e3clojureexpressionconstraint",level:4},{value:"\u65b0\u589e<code>ClojureExpressionConstraintValidator</code>\u4ee5\u5b9e\u73b0\u6ce8\u89e3\u7684\u9a8c\u8bc1",id:"\u65b0\u589eclojureexpressionconstraintvalidator\u4ee5\u5b9e\u73b0\u6ce8\u89e3\u7684\u9a8c\u8bc1",level:4},{value:"<code>clojure</code>\u8868\u8fbe\u5f0f\u5904\u7406",id:"clojure\u8868\u8fbe\u5f0f\u5904\u7406",level:3},{value:"\u65b0\u589e<code>ClojureExpressionEvaluator</code>\u4ee5\u5b9e\u73b0<code>clojure</code>\u8868\u8fbe\u5f0f\u7684\u5904\u7406",id:"\u65b0\u589eclojureexpressionevaluator\u4ee5\u5b9e\u73b0clojure\u8868\u8fbe\u5f0f\u7684\u5904\u7406",level:4},{value:"\u65b0\u589eevaluation.clj\u6765\u5b9e\u73b0\u6700\u7ec8\u7684<code>clojure</code>\u8868\u8fbe\u5f0f\u7684\u89e3\u6790\u5904\u7406",id:"\u65b0\u589eevaluationclj\u6765\u5b9e\u73b0\u6700\u7ec8\u7684clojure\u8868\u8fbe\u5f0f\u7684\u89e3\u6790\u5904\u7406",level:4},{value:"<code>springboot</code>\u96c6\u6210",id:"springboot\u96c6\u6210",level:3},{value:"ClojureExpressionValidationAutoConfiguration",id:"clojureexpressionvalidationautoconfiguration",level:4},{value:"\u914d\u7f6e<code>META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>",id:"\u914d\u7f6emeta-infspringorgspringframeworkbootautoconfigureautoconfigurationimports",level:4},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"\u9047\u5230\u7684\u95ee\u9898",id:"\u9047\u5230\u7684\u95ee\u9898",level:2},{value:"\u81ea\u5b9a\u4e49\u6ce8\u89e3\u6ca1\u6709\u88ab\u8bc6\u522b",id:"\u81ea\u5b9a\u4e49\u6ce8\u89e3\u6ca1\u6709\u88ab\u8bc6\u522b",level:3},{value:"\u539f\u56e0",id:"\u539f\u56e0",level:4},{value:"\u89e3\u51b3\u65b9\u6848",id:"\u89e3\u51b3\u65b9\u6848",level:4},{value:"<code>clojure</code>\u4e2d\u7684<code>eval</code>\u51fd\u6570\u6240\u9700\u7684<code>form</code>\u4e2d\u4e0d\u80fd\u4f9d\u8d56\u5916\u90e8\u7684\u53d8\u91cf",id:"clojure\u4e2d\u7684eval\u51fd\u6570\u6240\u9700\u7684form\u4e2d\u4e0d\u80fd\u4f9d\u8d56\u5916\u90e8\u7684\u53d8\u91cf",level:3},{value:"\u539f\u56e0",id:"\u539f\u56e0-1",level:4},{value:"\u89e3\u51b3\u65b9\u6848",id:"\u89e3\u51b3\u65b9\u6848-1",level:4},{value:"<code>clojure</code>\u4e2d\u7684<code>eval</code>\u51fd\u6570\u6240\u9700\u7684<code>form</code>\u4e2d<code>binding</code>\u4e86\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5f53\u6267\u884c\u65f6\u4f1a\u62a5\u9519",id:"clojure\u4e2d\u7684eval\u51fd\u6570\u6240\u9700\u7684form\u4e2dbinding\u4e86\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5f53\u6267\u884c\u65f6\u4f1a\u62a5\u9519",level:3},{value:"\u539f\u56e0",id:"\u539f\u56e0-2",level:4},{value:"\u89e3\u51b3\u65b9\u6848",id:"\u89e3\u51b3\u65b9\u6848-2",level:4},{value:"\u5907\u6ce8",id:"\u5907\u6ce8",level:2},{value:"<code>clojure</code>\u4e2d\u7684<code>eval</code>\u51fd\u6570",id:"clojure\u4e2d\u7684eval\u51fd\u6570",level:3},{value:"<code>clojure</code>\u4e2d\u7684<code>form</code>",id:"clojure\u4e2d\u7684form",level:3},{value:"<code>clojure</code>\u4e2d\u7684<code>binding</code>",id:"clojure\u4e2d\u7684binding",level:3},{value:"<code>clojure</code>\u4e2d\u7684\u5168\u5c40\u53d8\u91cf",id:"clojure\u4e2d\u7684\u5168\u5c40\u53d8\u91cf",level:3},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}],s={toc:p};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u6570\u636e\u9a8c\u8bc1\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u9700\u6c42, \u5bf9\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"java"),"\u9879\u76ee\u6765\u8bf4, \u76ee\u524d",(0,r.kt)("inlineCode",{parentName:"p"},"jakarta"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"bean validation"),"\u5df2\u7ecf\u6210\u4e3a\u4e86java\u4e2d\u7684\u6807\u51c6. ",(0,r.kt)("br",null),"\n\u5176\u81ea\u5e26\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u6570\u636e\u9a8c\u8bc1\u6ce8\u89e3, \u4f8b\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"@NotNull"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@NotEmpty"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@Size"),"\u7b49.",(0,r.kt)("br",null),"\n\u8fd9\u4e9b\u6ce8\u89e3\u5982\u679c\u9047\u5230\u590d\u6742\u7684\u6570\u636e\u9a8c\u8bc1\u9700\u6c42\u65f6, \u5c31\u4f1a\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3. \u6240\u4ee5\u9700\u8981\u4e00\u79cd\u66f4\u52a0\u7075\u6d3b\u7684\u6570\u636e\u9a8c\u8bc1\u65b9\u5f0f.",(0,r.kt)("br",null),"\n\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u79cd\u9700\u6c42, \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u6570\u636e\u9a8c\u8bc1.",(0,r.kt)("br",null),"\n\u540c\u65f6\u6211\u4eec\u9700\u8981\u548c\u73b0\u6709\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"bean validation"),"\u4e00\u8d77\u4f7f\u7528, \u4ee5\u4fbf\u4e8e\u6ee1\u8db3\u73b0\u6709\u7684\u4e1a\u52a1\u9700\u6c42.",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"why-clojure"},"Why clojure"),(0,r.kt)("h3",{id:"\u57fa\u4e8e\u8868\u8fbe\u5f0f"},"\u57fa\u4e8e\u8868\u8fbe\u5f0f"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u662f\u4e00\u4e2a\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00, \u6240\u4ee5\u5b83\u7684\u6570\u636e\u9a8c\u8bc1\u529f\u80fd\u4e5f\u662f\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684.",(0,r.kt)("br",null),"\n\u8868\u8fbe\u5f0f\u7684\u597d\u5904\u662f, \u5b83\u7684\u8868\u8fbe\u80fd\u529b\u975e\u5e38\u5f3a\u5927, \u901a\u8fc7\u8868\u8fbe\u5f0f, \u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u9a8c\u8bc1.",(0,r.kt)("br",null),"\n\u540c\u65f6\u8868\u8fbe\u5f0f\u7684\u53ef\u8bfb\u6027\u4e5f\u975e\u5e38\u5f3a, \u901a\u8fc7\u8868\u8fbe\u5f0f, \u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u7406\u89e3\u6570\u636e\u9a8c\u8bc1\u7684\u903b\u8f91.",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"\u6570\u636e\u5904\u7406"},"\u6570\u636e\u5904\u7406"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u8bed\u8a00(",(0,r.kt)("inlineCode",{parentName:"p"},"functional programming"),").",(0,r.kt)("br",null),"\n\u51fd\u6570\u5f0f\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\u6570\u636e\u5904\u7406\u80fd\u529b\u975e\u5e38\u5f3a\u5927.",(0,r.kt)("br",null),"\n\u5b83\u62bd\u8c61\u4e86\u6570\u636e\u7684\u64cd\u4f5c, \u901a\u8fc7\u51fd\u6570\u5f0f\u7684\u65b9\u5f0f\u6765\u5904\u7406\u6570\u636e.",(0,r.kt)("br",null),"\n\u5bf9\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u6765\u8bf4, \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u975e\u5e38\u65b9\u4fbf\u7684\u6570\u636e\u64cd\u4f5c\u51fd\u6570, \u4f8b\u5982"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"map")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"filter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"reduce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"zipmap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"group-by")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"partition")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sort-by")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sort-with")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"take")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"take-while")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"drop")),(0,r.kt)("li",{parentName:"ul"},"...")),(0,r.kt)("h3",{id:"\u57fa\u4e8ejvm"},"\u57fa\u4e8e",(0,r.kt)("inlineCode",{parentName:"h3"},"jvm")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u662f\u57fa\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"jvm"),"\u7684, \u6240\u4ee5\u5b83\u53ef\u4ee5\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"java"),"\u65e0\u7f1d\u96c6\u6210.",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"\u5b9e\u73b0"},"\u5b9e\u73b0"),(0,r.kt)("p",null,"\u5b9e\u73b0\u4e3b\u8981\u5206\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"jakarta"),"\u6269\u5c55\u5b9e\u73b0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"clojure"),"\u8868\u8fbe\u5f0f\u5904\u7406"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"springboot"),"\u96c6\u6210")),(0,r.kt)("h3",{id:"jakarta\u6269\u5c55\u5b9e\u73b0"},(0,r.kt)("inlineCode",{parentName:"h3"},"jakarta"),"\u6269\u5c55\u5b9e\u73b0"),(0,r.kt)("h4",{id:"\u65b0\u589e\u81ea\u5b9a\u4e49\u6ce8\u89e3clojureexpressionconstraint"},"\u65b0\u589e\u81ea\u5b9a\u4e49\u6ce8\u89e3",(0,r.kt)("inlineCode",{parentName:"h4"},"@ClojureExpressionConstraint")),(0,r.kt)("p",null,"\u56e0\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"jakarta"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"bean validation"),"\u662f\u57fa\u4e8e\u6ce8\u89e3\u7684, \u6700\u7ec8\u7528\u6237\u5728\u4f7f\u7528\u65f6, \u9700\u8981\u901a\u8fc7\u6ce8\u89e3\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u8be5\u529f\u80fd.",(0,r.kt)("br",null),"\n\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u6ce8\u89e3, \u901a\u8fc7\u8be5\u6ce8\u89e3\u6765\u4f7f\u7528\u6211\u4eec\u7684\u6570\u636e\u9a8c\u8bc1\u529f\u80fd.",(0,r.kt)("br",null)),(0,r.kt)("p",null,"\u4ee3\u7801\u5982\u4e0b:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'/**\n * This is a validation annotation based on clojure expression to validate your data.\n *\n * Note:\n * 1. The expression only has one parameter, which is the value that will be validated.\n * The parameter is bound to the symbol "it". You can use "it" to refer to the value.\n * 2. The expression must return a boolean value.\n * Example:\n * Right expression: (> (count it) 5)\n * Bad expression: (count it)\n * 3. The size of the outer form must be 1.\n * If you want to use multiple expressions, you can use "and" or "or" to combine them.\n * Example:\n * The expression "(and (> (count it) 5) (= it (clojure.string/lower-case it)))" is right.\n * The expression "(> (count it) 5) (= it (clojure.string/lower-case it))" is wrong.\n *\n * Examples:\n * 1. The type of value is string. We validate the length of the string must be greater than 5.\n * (> (count it) 5)\n * 2. The type of value is collection. We validate the size of the collection must be greater than 5.\n * (> (count it) 5)\n * 3. The type of value is string. We validate the string must be a lower case string.\n * (= it (clojure.string/lower-case it))\n * 4. The type is javaBean, and it has a property named age. We validate the age must be greater than 0 and less than 100.\n * (let [age (:age it)] (and (> age 0) (< age 100)))\n *\n * @author Xiangcheng.Kuo\n * @see ClojureExpressionConstraintValidator\n */\n@Repeatable\n@Target(AnnotationTarget.PROPERTY, AnnotationTarget.FIELD)\n@Retention(AnnotationRetention.RUNTIME)\n@Constraint(validatedBy = [ClojureExpressionConstraintValidator::class])\nannotation class ClojureExpressionConstraint(\n    val message: String,\n    val groups: Array<KClass<*>> = [],\n    val payload: Array<KClass<out Payload>> = [],\n    val value: String,\n)\n')),(0,r.kt)("h4",{id:"\u65b0\u589eclojureexpressionconstraintvalidator\u4ee5\u5b9e\u73b0\u6ce8\u89e3\u7684\u9a8c\u8bc1"},"\u65b0\u589e",(0,r.kt)("inlineCode",{parentName:"h4"},"ClojureExpressionConstraintValidator"),"\u4ee5\u5b9e\u73b0\u6ce8\u89e3\u7684\u9a8c\u8bc1"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u6ce8\u89e3\u7684\u5904\u7406, \u6211\u4eec\u9700\u8981\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"ConstraintValidator"),"\u6765\u8fdb\u884c\u9a8c\u8bc1.",(0,r.kt)("br",null)),(0,r.kt)("p",null,"\u4ee3\u7801\u5982\u4e0b:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"/**\n * This is a validator for [ClojureExpressionConstraint] annotation.\n * It will evaluate the expression with the given value and return the boolean result as the validation result.\n *\n * @author Xiangcheng.Kuo\n * @see ClojureExpressionConstraint\n */\nclass ClojureExpressionConstraintValidator(\n    private val evaluator: ClojureExpressionEvaluator\n) : ConstraintValidator<ClojureExpressionConstraint, Any> {\n\n    private lateinit var annotation: ClojureExpressionConstraint\n\n    override fun initialize(constraintAnnotation: ClojureExpressionConstraint) {\n        this.annotation = constraintAnnotation\n    }\n\n    override fun isValid(value: Any?, context: ConstraintValidatorContext): Boolean {\n        return evaluator.evaluate(annotation.value, value) as Boolean\n    }\n\n}\n")),(0,r.kt)("h3",{id:"clojure\u8868\u8fbe\u5f0f\u5904\u7406"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u8868\u8fbe\u5f0f\u5904\u7406"),(0,r.kt)("h4",{id:"\u65b0\u589eclojureexpressionevaluator\u4ee5\u5b9e\u73b0clojure\u8868\u8fbe\u5f0f\u7684\u5904\u7406"},"\u65b0\u589e",(0,r.kt)("inlineCode",{parentName:"h4"},"ClojureExpressionEvaluator"),"\u4ee5\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"h4"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u5904\u7406"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ClojureExpressionEvaluator"),"\u62bd\u8c61\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u5904\u7406. \u5bf9\u4e8e\u4e0a\u5c42\u8c03\u7528\u65b9\u6765\u8bf4\u4e0d\u9700\u8981\u5173\u5fc3",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u5904\u7406\u7ec6\u8282,\n\u53ea\u9700\u8981\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"evaluate"),"\u65b9\u6cd5\u5373\u53ef.",(0,r.kt)("br",null),"\n\u5b83\u7684\u4e3b\u8981\u529f\u80fd\u662f\u6839\u636e\u7ed9\u5b9a\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u53ca\u8f93\u5165\u8fdb\u884c\u5904\u7406\u5e76\u5f97\u51fa\u8fd4\u56de\u7ed3\u679c.",(0,r.kt)("br",null),"\n\u901a\u8fc7\u4e0e",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u7684\u4e92\u64cd\u4f5c, \u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u89e3\u6790.",(0,r.kt)("br",null),"\n\u4ee5\u4e0b\u662f\u76f8\u5173\u4ee3\u7801:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'/**\n * An interface used to evaluate the clojure expression with the given param and return the result.\n *\n * @author Xiangcheng.Kuo\n */\ninterface ClojureExpressionEvaluator {\n\n    fun evaluate(expression: String, param: Any?): Any?\n\n}\n\n/**\n * The default implementation of [ClojureExpressionEvaluator].\n *\n * @author Xiangcheng.Kuo\n * @see Class to refer to\n */\nobject DefaultClojureExpressionEvaluator : ClojureExpressionEvaluator {\n\n    private val evalFun: IFn\n\n    init {\n        com.fastonetech.lib.clojure.require("com.fastonetech.lib.clojure.support.evaluation".toCljSymbol())\n        evalFun = Clojure.`var`("com.fastonetech.lib.clojure.support.evaluation/evaluate-expression")\n    }\n\n    override fun evaluate(expression: String, param: Any?): Any? =\n        evalFun(expression, param.toCljValue())\n\n}\n')),(0,r.kt)("h4",{id:"\u65b0\u589eevaluationclj\u6765\u5b9e\u73b0\u6700\u7ec8\u7684clojure\u8868\u8fbe\u5f0f\u7684\u89e3\u6790\u5904\u7406"},"\u65b0\u589eevaluation.clj\u6765\u5b9e\u73b0\u6700\u7ec8\u7684",(0,r.kt)("inlineCode",{parentName:"h4"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u89e3\u6790\u5904\u7406"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"evaluation.clj"),"\u662f\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u7684\u6587\u4ef6, \u7528\u4e8e\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u89e3\u6790.",(0,r.kt)("br",null),"\n\u4ee5\u4e0b\u662f\u76f8\u5173\u4ee3\u7801:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'(ns com.fastonetech.lib.clojure.support.evaluation\n  (:require [clojure.java.data :as data]))\n\n; We need to convert the list to vector to avoid the evaluator think the list is a function call.\n; For example, if we have a list like (1 2 3), the evaluator will think it is a function call.\n; So we need to convert it to [1 2 3] to avoid this problem.\n(defn as-available-form [form]\n  (if (seq? form) (into [] form) form))\n\n(defn object-to-map [object]\n  (data/from-java-deep object {:add-class false}))\n\n(defn object-to-form [^Object object]\n  (clojure.walk/postwalk as-available-form (object-to-map object)))\n\n(defn build-form [value-form expression-form]\n  (list `let [\'it value-form] expression-form))\n\n(defn expression-as-form [^String expression]\n  (read-string expression))\n\n(defn evaluate-expression [^String expression ^Object param]\n  (let [value-form (object-to-form param)\n        expression-form (expression-as-form expression)\n        form (build-form value-form expression-form)]\n    (println "Expression form: " form)\n    (let [result (eval form)]\n      (println "Result: " result)\n      result)))\n')),(0,r.kt)("h3",{id:"springboot\u96c6\u6210"},(0,r.kt)("inlineCode",{parentName:"h3"},"springboot"),"\u96c6\u6210"),(0,r.kt)("p",null,"\u8be5\u90e8\u5206\u4e3b\u8981\u662f\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u96c6\u6210\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"springboot"),"\u4e2d.",(0,r.kt)("br",null),"\n\u4e3b\u8981\u662f\u5c06",(0,r.kt)("inlineCode",{parentName:"p"},"ClojureExpressionConstraintValidator"),"\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u8fd9\u6837",(0,r.kt)("inlineCode",{parentName:"p"},"springboot"),"\u5c31\u53ef\u4ee5\u81ea\u52a8\u7684\u5bf9\u6ce8\u89e3\u8fdb\u884c\u9a8c\u8bc1\u4e86.",(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"clojureexpressionvalidationautoconfiguration"},"ClojureExpressionValidationAutoConfiguration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@AutoConfiguration\nclass ClojureExpressionValidationAutoConfiguration {\n\n    @Bean\n    @ConditionalOnMissingBean\n    fun clojureExpressionConstraintValidator(evaluator: ClojureExpressionEvaluator): ClojureExpressionConstraintValidator =\n        ClojureExpressionConstraintValidator(\n            evaluator = evaluator\n        )\n\n    @Bean\n    @ConditionalOnMissingBean\n    fun clojureExpressionEvaluator(): ClojureExpressionEvaluator =\n        DefaultClojureExpressionEvaluator\n\n}\n")),(0,r.kt)("h4",{id:"\u914d\u7f6emeta-infspringorgspringframeworkbootautoconfigureautoconfigurationimports"},"\u914d\u7f6e",(0,r.kt)("inlineCode",{parentName:"h4"},"META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports")),(0,r.kt)("p",null,"\u5728springboot3\u4e2d, \u6211\u4eec\u9700\u8981\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"),"\n\u4e2d\u6dfb\u52a0\u9700\u8981\u81ea\u52a8\u914d\u7f6e\u7684\u7c7b.",(0,r.kt)("br",null),"\n\u65e7\u7684\u7248\u672c\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"spring.factories"),", \u4f46\u662f\u5728springboot3\u4e2d\u5df2\u7ecf\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\u4e86.",(0,r.kt)("br",null)),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"com.fastonetech.lib.validation.spring.autoconfigure.ClojureExpressionValidationAutoConfiguration\n")),(0,r.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u770b\u5230, \u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u7684\u4e92\u64cd\u4f5c, \u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u7684\u89e3\u6790.",(0,r.kt)("br",null),"\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"springboot"),"\u4e2d\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u9a8c\u8bc1\u4e86.",(0,r.kt)("br",null),"\n\u4f46\u662f\u76ee\u524d\u7684\u5b9e\u73b0\u8fd8\u6709\u5f88\u591a\u4e0d\u8db3, \u4e3b\u8981\u5982\u4e0b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6ca1\u6709\u5bf9",(0,r.kt)("inlineCode",{parentName:"li"},"clojure"),"\u8868\u8fbe\u5f0f\u8fdb\u884c\u7f13\u5b58, \u5bf9\u4e8e\u540c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u591a\u6b21\u9a8c\u8bc1\u4f1a\u91cd\u590d\u89e3\u6790",(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"clojure"),"\u8868\u8fbe\u5f0f\u5185\u53ea\u80fd\u8bbf\u95ee",(0,r.kt)("inlineCode",{parentName:"li"},"clojure.core"),"\u547d\u540d\u7a7a\u95f4\u7684\u5185\u5bb9, \u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u547d\u540d\u7a7a\u95f4\u7684\u5185\u5bb9",(0,r.kt)("br",null))),(0,r.kt)("p",null,"\u8fd9\u4e9b\u90fd\u662f\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9, \u4f46\u662f\u76ee\u524d\u8fd8\u6ca1\u6709\u65f6\u95f4\u53bb\u505a.",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"\u9047\u5230\u7684\u95ee\u9898"},"\u9047\u5230\u7684\u95ee\u9898"),(0,r.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u6ce8\u89e3\u6ca1\u6709\u88ab\u8bc6\u522b"},"\u81ea\u5b9a\u4e49\u6ce8\u89e3\u6ca1\u6709\u88ab\u8bc6\u522b"),(0,r.kt)("h4",{id:"\u539f\u56e0"},"\u539f\u56e0"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u95ee\u9898\u7684\u4e3b\u8981\u539f\u56e0\u5728\u5b9a\u4e49\u6ce8\u89e3\u662f\u6307\u5b9a\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"@Target"),"\u6ce8\u89e3\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"AnnotationTarget.PROPERTY"),"\u9020\u6210\u7684"),(0,r.kt)("p",null,"\u53cd\u7f16\u8bd1\u540e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"java"),"\u4ee3\u7801\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\n@Metadata(\n        mv = {1, 8, 0},\n        k = 1,\n        d1 = {"\\u0000\\"\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0010\\u0000\\n\\u0000\\n\\u0002\\u0010\\u000e\\n\\u0002\\b\\b\\n\\u0002\\u0010\\u000b\\n\\u0002\\b\\u0002\\n\\u0002\\u0010\\b\\n\\u0002\\b\\u0002\\b\\u0086\\b\\u0018\\u00002\\u00020\\u0001B\\r\\u0012\\u0006\\u0010\\u0002\\u001a\\u00020\\u0003\xa2\\u0006\\u0002\\u0010\\u0004J\\t\\u0010\\t\\u001a\\u00020\\u0003H\xc6\\u0003J\\u0013\\u0010\\n\\u001a\\u00020\\u00002\\b\\b\\u0002\\u0010\\u0002\\u001a\\u00020\\u0003H\xc6\\u0001J\\u0013\\u0010\\u000b\\u001a\\u00020\\f2\\b\\u0010\\r\\u001a\\u0004\\u0018\\u00010\\u0001H\xd6\\u0003J\\t\\u0010\\u000e\\u001a\\u00020\\u000fH\xd6\\u0001J\\t\\u0010\\u0010\\u001a\\u00020\\u0003H\xd6\\u0001R\\u001c\\u0010\\u0002\\u001a\\u00020\\u00038\\u0006X\\u0087\\u0004\xa2\\u0006\\u000e\\n\\u0000\\u0012\\u0004\\b\\u0005\\u0010\\u0006\\u001a\\u0004\\b\\u0007\\u0010\\b\xa8\\u0006\\u0011"},\n        d2 = {"Lcom/fastonetech/lib/validation/clojure/PatchUser;", "", "username", "", "(Ljava/lang/String;)V", "getUsername$annotations", "()V", "getUsername", "()Ljava/lang/String;", "component1", "copy", "equals", "", "other", "hashCode", "", "toString", "fastone-web-spring-boot-starter"}\n)\npublic final class PatchUser {\n\n    @NotNull\n    private final String username;\n\n    /** @deprecated */\n    // $FF: synthetic method\n    @ClojureExpressionConstraint(\n            message = "the username must be a string and the length must be greater than 5",\n            value = "(and (string? it) (> (count it) 5))"\n    )\n    public static void getUsername$annotations() {\n    }\n\n    @NotNull\n    public final String getUsername() {\n        return this.username;\n    }\n\n    public PatchUser(@NotNull String username) {\n        Intrinsics.checkNotNullParameter(username, "username");\n        super();\n        this.username = username;\n    }\n\n    @NotNull\n    public final String component1() {\n        return this.username;\n    }\n\n    @NotNull\n    public final PatchUser copy(@NotNull String username) {\n        Intrinsics.checkNotNullParameter(username, "username");\n        return new PatchUser(username);\n    }\n\n    // $FF: synthetic method\n    public static PatchUser copy$default(PatchUser var0, String var1, int var2, Object var3) {\n        if ((var2 & 1) != 0) {\n            var1 = var0.username;\n        }\n\n        return var0.copy(var1);\n    }\n\n    @NotNull\n    public String toString() {\n        return "PatchUser(username=" + this.username + ")";\n    }\n\n    public int hashCode() {\n        String var10000 = this.username;\n        return var10000 != null ? var10000.hashCode() : 0;\n    }\n\n    public boolean equals(@Nullable Object var1) {\n        if (this != var1) {\n            if (var1 instanceof PatchUser) {\n                PatchUser var2 = (PatchUser) var1;\n                if (Intrinsics.areEqual(this.username, var2.username)) {\n                    return true;\n                }\n            }\n\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n}\n')),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u6ce8\u89e3\u6700\u7ec8\u5e76\u6ca1\u6709\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"getUsername"),"\u65b9\u6cd5\u4e0a, \u800c\u662f\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"getUsername$annotations"),"\u65b9\u6cd5\u4e0a.",(0,r.kt)("br",null),"\n\u6211\u4e4b\u524d\u4ee5\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"AnnotationTarget.PROPERTY"),"\u662f\u4f1a\u5c06\u6ce8\u89e3\u5e94\u7528\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"get"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"set"),"\u65b9\u6cd5\u4e0a, \u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u8fd9\u6837.",(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"\u89e3\u51b3\u65b9\u6848"},"\u89e3\u51b3\u65b9\u6848"),(0,r.kt)("p",null,"\u662f\u5c06",(0,r.kt)("inlineCode",{parentName:"p"},"@Target"),"\u6ce8\u89e3\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"AnnotationTarget.PROPERTY"),"\u53bb\u6389.",(0,r.kt)("br",null)),(0,r.kt)("p",null,"\u89e3\u51b3\u540e\u53cd\u7f16\u8bd1\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"java"),"\u4ee3\u7801\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.fastonetech.lib.validation.clojure;\n\nimport kotlin.Metadata;\nimport kotlin.jvm.internal.Intrinsics;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;\n\n@Metadata(\n        mv = {1, 8, 0},\n        k = 1,\n        d1 = {"\\u0000\\"\\n\\u0002\\u0018\\u0002\\n\\u0002\\u0010\\u0000\\n\\u0000\\n\\u0002\\u0010\\u000e\\n\\u0002\\b\\u0006\\n\\u0002\\u0010\\u000b\\n\\u0002\\b\\u0002\\n\\u0002\\u0010\\b\\n\\u0002\\b\\u0002\\b\\u0086\\b\\u0018\\u00002\\u00020\\u0001B\\r\\u0012\\u0006\\u0010\\u0002\\u001a\\u00020\\u0003\xa2\\u0006\\u0002\\u0010\\u0004J\\t\\u0010\\u0007\\u001a\\u00020\\u0003H\xc6\\u0003J\\u0013\\u0010\\b\\u001a\\u00020\\u00002\\b\\b\\u0002\\u0010\\u0002\\u001a\\u00020\\u0003H\xc6\\u0001J\\u0013\\u0010\\t\\u001a\\u00020\\n2\\b\\u0010\\u000b\\u001a\\u0004\\u0018\\u00010\\u0001H\xd6\\u0003J\\t\\u0010\\f\\u001a\\u00020\\rH\xd6\\u0001J\\t\\u0010\\u000e\\u001a\\u00020\\u0003H\xd6\\u0001R\\u0016\\u0010\\u0002\\u001a\\u00020\\u00038\\u0006X\\u0087\\u0004\xa2\\u0006\\b\\n\\u0000\\u001a\\u0004\\b\\u0005\\u0010\\u0006\xa8\\u0006\\u000f"},\n        d2 = {"Lcom/fastonetech/lib/validation/clojure/PatchUser;", "", "username", "", "(Ljava/lang/String;)V", "getUsername", "()Ljava/lang/String;", "component1", "copy", "equals", "", "other", "hashCode", "", "toString", "fastone-web-spring-boot-starter"}\n)\npublic final class PatchUser {\n\n    @ClojureExpressionConstraint(\n            message = "the username must be a string and the length must be greater than 5",\n            value = "(and (string? it) (> (count it) 5))"\n    )\n    @NotNull\n    private final String username;\n\n    @NotNull\n    public final String getUsername() {\n        return this.username;\n    }\n\n    public PatchUser(@NotNull String username) {\n        Intrinsics.checkNotNullParameter(username, "username");\n        super();\n        this.username = username;\n    }\n\n    @NotNull\n    public final String component1() {\n        return this.username;\n    }\n\n    @NotNull\n    public final PatchUser copy(@NotNull String username) {\n        Intrinsics.checkNotNullParameter(username, "username");\n        return new PatchUser(username);\n    }\n\n    // $FF: synthetic method\n    public static PatchUser copy$default(PatchUser var0, String var1, int var2, Object var3) {\n        if ((var2 & 1) != 0) {\n            var1 = var0.username;\n        }\n\n        return var0.copy(var1);\n    }\n\n    @NotNull\n    public String toString() {\n        return "PatchUser(username=" + this.username + ")";\n    }\n\n    public int hashCode() {\n        String var10000 = this.username;\n        return var10000 != null ? var10000.hashCode() : 0;\n    }\n\n    public boolean equals(@Nullable Object var1) {\n        if (this != var1) {\n            if (var1 instanceof PatchUser) {\n                PatchUser var2 = (PatchUser) var1;\n                if (Intrinsics.areEqual(this.username, var2.username)) {\n                    return true;\n                }\n            }\n\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n}\n\n')),(0,r.kt)("p",null,"\u8fd9\u6b21\u6ce8\u89e3\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"username"),"\u5b57\u6bb5\u4e0a\u4e86.",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"clojure\u4e2d\u7684eval\u51fd\u6570\u6240\u9700\u7684form\u4e2d\u4e0d\u80fd\u4f9d\u8d56\u5916\u90e8\u7684\u53d8\u91cf"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"eval"),"\u51fd\u6570\u6240\u9700\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"form"),"\u4e2d\u4e0d\u80fd\u4f9d\u8d56\u5916\u90e8\u7684\u53d8\u91cf"),(0,r.kt)("p",null,"\u5f53\u6267\u884c\u5982\u4e0b\u4ee3\u7801\u65f6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},"(defn eval-example []\n  (let [x 10]\n    (eval `(+ x 20))))\n(eval-example)\n")),(0,r.kt)("p",null,"\u4f1a\u62a5\u9519\u4ee5\u4e0b\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-log"},"Syntax error compiling at (/tmp/form-init13157191612884728008.clj:1:1).\nNo such var: user/x\n")),(0,r.kt)("h4",{id:"\u539f\u56e0-1"},"\u539f\u56e0"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u51fd\u6570\u6240\u9700\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"form"),"\u4e2d\u4e0d\u80fd\u4f9d\u8d56\u5916\u90e8\u7684\u53d8\u91cf, \u8981\u4e48\u88ab\u4f9d\u8d56\u7684\u53d8\u91cf\u662f\u5168\u5c40\n\u4ece\u62a5\u9519\u53ef\u4ee5\u770b\u5230\u5b83\u5c1d\u8bd5\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"user"),"\u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u627e",(0,r.kt)("inlineCode",{parentName:"p"},"x"),"\u8fd9\u4e2a\u53d8\u91cf, \u4f46\u662f\u5e76\u6ca1\u6709\u627e\u5230.",(0,r.kt)("br",null),"\n\u800c\u6211\u4eec\u7684\u547d\u540d\u7a7a\u95f4\u4e0d\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"user"),"\u6240\u4ee5\u4f1a\u62a5\u9519.",(0,r.kt)("br",null),"\n\u8fd9\u4e2a\u95ee\u9898\u7684\u672c\u8d28\u539f\u56e0\u662f\u56e0\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u51fd\u6570\u5185\u90e8\u6267\u884c\u7684\u4ee3\u7801\u548c\u5916\u90e8\u7684\u4ee3\u7801\u662f\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4, \u6240\u4ee5\u4e0d\u80fd\u4f9d\u8d56\u8c03\u7528\u5916\u90e8\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\n\u51fd\u6570\u7684\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf.",(0,r.kt)("br",null)),(0,r.kt)("p",null,"\u9700\u8981\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"form"),"\u4e2d\u91cd\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"binding"),"\u6216\u8005\u53d8\u91cf"),(0,r.kt)("h4",{id:"\u89e3\u51b3\u65b9\u6848-1"},"\u89e3\u51b3\u65b9\u6848"),(0,r.kt)("p",null,"\u5728\u9700\u8981",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"form"),"\u4e2d\u91cd\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"binding"),"\u53d8\u91cf"),(0,r.kt)("h3",{id:"clojure\u4e2d\u7684eval\u51fd\u6570\u6240\u9700\u7684form\u4e2dbinding\u4e86\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5f53\u6267\u884c\u65f6\u4f1a\u62a5\u9519"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"eval"),"\u51fd\u6570\u6240\u9700\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"form"),"\u4e2d",(0,r.kt)("inlineCode",{parentName:"h3"},"binding"),"\u4e86\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5f53\u6267\u884c\u65f6\u4f1a\u62a5\u9519"),(0,r.kt)("p",null,"\u62a5\u9519\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-log"},"embed object in code, maybe print-dup not defined: Person(age=30)\n")),(0,r.kt)("h4",{id:"\u539f\u56e0-2"},"\u539f\u56e0"),(0,r.kt)("p",null,"\u7531\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u9700\u8981\u5c06\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u6570\u636e\u7ed3\u6784, \u7136\u540e\u5728\u8fd0\u884c\u65f6\u89e3\u91ca\u548c\u6267\u884c\u8fd9\u4e2a\u8868\u8fbe\u5f0f.",(0,r.kt)("br",null),"\n\u5728\u5c06\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u6570\u636e\u7ed3\u6784\u7684\u8fc7\u7a0b\u4e2d, ",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u9700\u8981\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"print-dup"),"\u51fd\u6570\u5c06\u8868\u8fbe\u5f0f\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32,\n\u4ee5\u4fbf\u540e\u7eed\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"read"),"\u51fd\u6570\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e32\u8fd8\u539f\u4e3aClojure\u6570\u636e\u7ed3\u6784.",(0,r.kt)("br",null),"\n\u56e0\u6b64, \u5f53\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u51fd\u6570\u6267\u884c\u8868\u8fbe\u5f0f\u65f6\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e2d\u5305\u542b\u65e0\u6cd5\u5e8f\u5217\u5316\u4e3a\u5b57\u7b26\u4e32\u7684\u5bf9\u8c61\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u9519\u8bef.",(0,r.kt)("br",null),"\n\u800c\u5f53\u4e0d\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u51fd\u6570\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7531\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u4e0d\u9700\u8981\u5c06\u5b83\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u9519\u8bef.",(0,r.kt)("br",null),"\n\u7efc\u4e0a\u6240\u8ff0, ",(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u51fd\u6570\u6240\u9700\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"form"),"\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"binding"),"\u4e86\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5f53\u6267\u884c\u65f6\u4f1a\u62a5\u9519.",(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"\u89e3\u51b3\u65b9\u6848-2"},"\u89e3\u51b3\u65b9\u6848"),(0,r.kt)("p",null,"\u5c06\u81ea\u5b9a\u4e49\u5bf9\u8c61\u8f6c\u6362\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u7684\u5185\u7f6e\u6570\u636e\u7ed3\u6784\u4ece\u800c\u907f\u514d\u8fd9\u4e2a\u95ee\u9898.",(0,r.kt)("br",null),"\n\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"clojure.java.data"),"\u4e2d\u7684\u51fd\u6570",(0,r.kt)("inlineCode",{parentName:"p"},"from-java-deep"),"\u8fdb\u884c\u8f6c\u6362",(0,r.kt)("br",null),"\n\u8f6c\u6362\u540e\u7684\u6570\u636e\u7ed3\u6784\u5982\u679c\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"list"),"\u8fd8\u9700\u8981\u8f6c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"vec"),", \u8fd9\u662f\u56e0\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"list"),"\u4ee3\u8868\u4e86\u51fd\u6570\u8c03\u7528, \u800c",(0,r.kt)("inlineCode",{parentName:"p"},"vec"),"\u4ee3\u8868\u4e86\u6570\u636e\u7ed3\u6784,\n\u6240\u4ee5\u9700\u8981\u8f6c\u6362\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"vec"),".",(0,r.kt)("br",null),"\n\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"clojure.walk/postwalk"),"\u51fd\u6570\u8fdb\u884c\u9012\u5f52\u8f6c\u6362.",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"\u5907\u6ce8"},"\u5907\u6ce8"),(0,r.kt)("h3",{id:"clojure\u4e2d\u7684eval\u51fd\u6570"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"eval"),"\u51fd\u6570"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"eval"),"\u51fd\u6570\u662f\u5c06\u7ed9\u5b9a\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"form"),"\u7f16\u8bd1\u6267\u884c, \u8fd4\u56de\u6267\u884c\u7ed3\u679c.",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"clojure\u4e2d\u7684form"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"form")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"form"),"\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u4e2d\u7684\u8868\u8fbe\u5f0f, \u4e5f\u5c31\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u4e2d\u7684\u4ee3\u7801.",(0,r.kt)("br",null),"\n\u4f8b\u5982:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},"(+ 1 2)\n")),(0,r.kt)("h3",{id:"clojure\u4e2d\u7684binding"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"h3"},"binding")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"binding"),"\u662f\u5c06\u53d8\u91cf\u7ed1\u5b9a\u5230\u4e00\u4e2a\u503c, \u4f7f\u5f97\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"binding"),"\u7684\u4f5c\u7528\u57df\u5185, \u53d8\u91cf\u7684\u503c\u4e3a\u7ed1\u5b9a\u7684\u503c.",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"clojure\u4e2d\u7684\u5168\u5c40\u53d8\u91cf"},(0,r.kt)("inlineCode",{parentName:"h3"},"clojure"),"\u4e2d\u7684\u5168\u5c40\u53d8\u91cf"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\u662f\u6307\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"clojure"),"\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u53d8\u91cf.",(0,r.kt)("br",null),"\n\u4f8b\u5982:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},"(def x 10)\n")),(0,r.kt)("p",null,"\u8fd9\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"x"),"\u5c31\u662f\u5168\u5c40\u53d8\u91cf.",(0,r.kt)("br",null)),(0,r.kt)("p",null,"\u5c40\u90e8\u53d8\u91cf\u662f\u6307\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf.",(0,r.kt)("br",null),"\n\u4f8b\u5982:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},"(defn test []\n  (let [x 10] x))\n")),(0,r.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kotlinlang.org/docs/annotations.html#annotation-use-site-targets"},"Annotation use-site targets")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.baeldung.com/spring-mvc-custom-validator"},"Spring MVC Custom Validation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://clojure.org/reference/evaluation"},"Evaluation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/6221716/variable-scope-eval-in-clojure"},"Variable scope + eval in Clojure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/23039818/modifying-expressions-at-runtime"},"Modifying expressions at runtime")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/11730828/clojure-and-dynamic"},"clojure and ^:dynamic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/64075760/convert-java-objects-to-clojure-types"},"convert Java objects to Clojure types")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/6630432/access-java-fields-dynamically-in-clojure"},"Access Java fields dynamically in Clojure?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://wizardforcel.gitbooks.io/clojure-fpftj/content/index.html"},"Clojure\u5165\u95e8\u6559\u7a0b"))))}c.isMDXComponent=!0}}]);