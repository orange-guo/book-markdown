"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[1353],{8789:t=>{t.exports=JSON.parse('{"blogPosts":[{"id":"/2023/02/27/index","metadata":{"permalink":"/markdowns/blog/2023/02/27/index","source":"@site/blog/2023-02-27/index.md","title":"\u89e3\u51b3TestContainers\u4e2d\u62c9\u53d6\u7279\u5b9adocker registry\u4e2d\u7684\u955c\u50cf\u9700\u8981\u8ba4\u8bc1\u7684\u95ee\u9898","description":"\u80cc\u666f","date":"2023-02-27T00:00:00.000Z","formattedDate":"February 27, 2023","tags":[{"label":"testcontainers","permalink":"/markdowns/blog/tags/testcontainers"},{"label":"docker","permalink":"/markdowns/blog/tags/docker"}],"readingTime":3.72,"hasTruncateMarker":false,"authors":[{"name":"Xiangcheng Kuo","title":"programmer on jvm platform","url":"https://github.com/orange-guo","imageURL":"https://github.com/orange-guo.png","key":"xiangcheng.kuo"}],"frontMatter":{"authors":["xiangcheng.kuo"],"tags":["testcontainers","docker"]},"nextItem":{"title":"\u542f\u7528SSH\u5bc6\u7801\u9a8c\u8bc1","permalink":"/markdowns/blog/2023/02/24/index"}},"content":"## \u80cc\u666f\\n\\n\u5728`docker registry`\u914d\u7f6e\u4e86\u8ba4\u8bc1\u540e, \u9879\u76ee\u4e2d`CICD`\u4e2d\u8fd0\u884c\u7684`test case`\u5931\u8d25, \u9519\u8bef\u65e5\u5fd7\u5982\u4e0b\\n\\n```log\\njava.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@24f6f6bf testClass = com.fastonetech.lib.auditing.JaversAspectTest, locations = [], classes = [com.fastonetech.lib.auditing.TestApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = [\\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\\"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@9da1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7e22550a, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5bc9ba1d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4189d70b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@e20413a0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6cfcd46d, org.springframework.boot.test.context.SpringBootTestAnnotation@35498888], resourceBasePath = \\"src/main/webapp\\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\\n\\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:142)\\n\\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)\\n\\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\\n\\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\\n\\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)\\n\\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)\\n\\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\\n\\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\\n\\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\\n\\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\\n\\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\\n\\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\\n\\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\\n\\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\\n\\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)\\n\\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\\n\\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)\\n\\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\\n\\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\\n\\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\\n\\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\\n\\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\\n\\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\\n\\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\\n\\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\\n\\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\\n\\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\\n\\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\\n\\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\\n\\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\\n\\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\\n\\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)\\n\\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\\n\\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\\n\\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\\n\\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\\n\\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\\n\\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)\\n\\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)\\n\\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)\\n\\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\\n\\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\\n\\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\\n\\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\\n\\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\\n\\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\\n\\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\\n\\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\\n\\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)\\n\\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\\n\\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\\n\\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\\n\\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\\n\\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)\\n\\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)\\n\\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\\n\\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name \'javersRepository\' defined in class path resource [com/fastonetech/lib/auditing/autoconfigure/JaversConfiguration.class]: Unsatisfied dependency expressed through method \'javersRepository\' parameter 0: Error creating bean with name \'javersClientConfiguration\' defined in com.fastonetech.lib.auditing.TestApplication: Unsatisfied dependency expressed through method \'javersClientConfiguration\' parameter 0: Error creating bean with name \'containerHelper\' defined in com.fastonetech.lib.auditing.TestApplication: Failed to instantiate [com.fastonetech.lib.auditing.ContainerHelper]: Factory method \'containerHelper\' threw exception with message: Container startup failed\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\\n\\tat app//org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\\n\\tat app//org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961)\\n\\tat app//org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915)\\n\\tat app//org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)\\n\\tat app//org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)\\n\\tat app//org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432)\\n\\tat app//org.springframework.boot.SpringApplication.run(SpringApplication.java:308)\\n\\tat app//org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\\n\\tat app//org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:59)\\n\\tat app//org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:47)\\n\\tat app//org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1386)\\n\\tat app//org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:543)\\n\\tat app//org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\\n\\tat app//org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\\n\\tat app//org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)\\n\\tat app//org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)\\n\\t... 87 more\\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name \'javersClientConfiguration\' defined in com.fastonetech.lib.auditing.TestApplication: Unsatisfied dependency expressed through method \'javersClientConfiguration\' parameter 0: Error creating bean with name \'containerHelper\' defined in com.fastonetech.lib.auditing.TestApplication: Failed to instantiate [com.fastonetech.lib.auditing.ContainerHelper]: Factory method \'containerHelper\' threw exception with message: Container startup failed\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\\n\\tat app//org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\\n\\tat app//org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\\n\\tat app//org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)\\n\\tat app//org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)\\n\\t... 111 more\\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name \'containerHelper\' defined in com.fastonetech.lib.auditing.TestApplication: Failed to instantiate [com.fastonetech.lib.auditing.ContainerHelper]: Factory method \'containerHelper\' threw exception with message: Container startup failed\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:491)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\\n\\tat app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\\n\\tat app//org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\\n\\tat app//org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\\n\\tat app//org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\\n\\tat app//org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405)\\n\\tat app//org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)\\n\\t... 125 more\\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.fastonetech.lib.auditing.ContainerHelper]: Factory method \'containerHelper\' threw exception with message: Container startup failed\\n\\tat app//org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)\\n\\tat app//org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\\n\\t... 139 more\\nCaused by: org.testcontainers.containers.ContainerLaunchException: Container startup failed\\n\\tat app//org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:349)\\n\\tat app//org.testcontainers.containers.GenericContainer.start(GenericContainer.java:322)\\n\\tat app//com.fastonetech.lib.auditing.ContainerHelper.<init>(ContainerHelper.kt:46)\\n\\tat app//com.fastonetech.lib.auditing.TestApplication.containerHelper(TestApplication.kt:20)\\n\\tat app//com.fastonetech.lib.auditing.TestApplication$$SpringCGLIB$$0.CGLIB$containerHelper$1(<generated>)\\n\\tat app//com.fastonetech.lib.auditing.TestApplication$$SpringCGLIB$$2.invoke(<generated>)\\n\\tat app//org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)\\n\\tat app//org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)\\n\\tat app//com.fastonetech.lib.auditing.TestApplication$$SpringCGLIB$$0.containerHelper(<generated>)\\n\\tat java.base@17.0.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base@17.0.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base@17.0.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base@17.0.1/java.lang.reflect.Method.invoke(Method.java:568)\\n\\tat app//org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)\\n\\t... 140 more\\nCaused by: org.testcontainers.containers.ContainerFetchException: Can\'t get Docker image: RemoteDockerImage(imageName=hub.fastonetech.com/cce/fastone-auditing:latest, imagePullPolicy=AlwaysPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@3b68a50c)\\n\\tat app//org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:1371)\\n\\tat app//org.testcontainers.containers.GenericContainer.logger(GenericContainer.java:651)\\n\\tat app//org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:331)\\n\\t... 153 more\\nCaused by: org.testcontainers.containers.ContainerFetchException: Failed to pull image: hub.fastonetech.com/cce/fastone-auditing:latest\\n\\tat app//org.testcontainers.images.RemoteDockerImage.resolve(RemoteDockerImage.java:119)\\n\\tat app//org.testcontainers.images.RemoteDockerImage.resolve(RemoteDockerImage.java:28)\\n\\tat app//org.testcontainers.utility.LazyFuture.getResolvedValue(LazyFuture.java:17)\\n\\tat app//org.testcontainers.utility.LazyFuture.get(LazyFuture.java:39)\\n\\tat app//org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:1369)\\n\\t... 155 more\\nCaused by: com.github.dockerjava.api.exception.InternalServerErrorException: Status 500: {\\"message\\":\\"unauthorized: unauthorized to access repository: cce/fastone-auditing, action: pull: unauthorized to access repository: cce/fastone-auditing, action: pull\\"}\\n\\n\\tat app//org.testcontainers.shaded.com.github.dockerjava.core.DefaultInvocationBuilder.execute(DefaultInvocationBuilder.java:247)\\n\\tat app//org.testcontainers.shaded.com.github.dockerjava.core.DefaultInvocationBuilder.lambda$executeAndStream$1(DefaultInvocationBuilder.java:269)\\n\\tat java.base@17.0.1/java.lang.Thread.run(Thread.java:833)\\n```\\n\\n## \u95ee\u9898\u5206\u6790\\n\\n\u6839\u636e\u4e0a\u8ff0\u65e5\u5fd7\u4e2d\u7684\u5173\u952e\u4fe1\u606f\u5f97\u51fa\u7531\u4e8e`docker registry`\u672a\u8ba4\u8bc1\u5bfc\u81f4\u8be5\u95ee\u9898\u7684\u51fa\u73b0\\n\\n```log\\nCaused by: com.github.dockerjava.api.exception.InternalServerErrorException: Status 500: {\\"message\\":\\"unauthorized: unauthorized to access repository: cce/fastone-auditing, action: pull: unauthorized to access repository: cce/fastone-auditing, action: pull\\"}\\n```\\n\\n## \u89e3\u51b3\u65b9\u6848\\n\\n\u5728\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\uff0c\u5148\u6267\u884c`docker login`\u547d\u4ee4\uff0c\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u5373\u53ef\\n\\n```bash\\ndocker login -u <username> -p <password> <registry>\\n```\\n\\n## \u53c2\u8003\\n\\n- [How to login to private DockerHub registry in runtime?](https://github.com/testcontainers/testcontainers-java/issues/968#issuecomment-872924394)"},{"id":"/2023/02/24/index","metadata":{"permalink":"/markdowns/blog/2023/02/24/index","source":"@site/blog/2023-02-24/index.md","title":"\u542f\u7528SSH\u5bc6\u7801\u9a8c\u8bc1","description":"\u80cc\u666f","date":"2023-02-24T00:00:00.000Z","formattedDate":"February 24, 2023","tags":[{"label":"ssh","permalink":"/markdowns/blog/tags/ssh"}],"readingTime":0.64,"hasTruncateMarker":false,"authors":[{"name":"Xiangcheng Kuo","title":"programmer on jvm platform","url":"https://github.com/orange-guo","imageURL":"https://github.com/orange-guo.png","key":"xiangcheng.kuo"}],"frontMatter":{"authors":["xiangcheng.kuo"],"tags":["ssh"]},"prevItem":{"title":"\u89e3\u51b3TestContainers\u4e2d\u62c9\u53d6\u7279\u5b9adocker registry\u4e2d\u7684\u955c\u50cf\u9700\u8981\u8ba4\u8bc1\u7684\u95ee\u9898","permalink":"/markdowns/blog/2023/02/27/index"},"nextItem":{"title":"\u5e38\u89c1\u7684\u547d\u540d\u524d\u7f00","permalink":"/markdowns/blog/2023/02/23/index"}},"content":"## \u80cc\u666f\\n\\n\u5728`ssh`\u4e2d, \u9ed8\u8ba4\u662f\u4e0d\u5141\u8bb8\u4f7f\u7528`password`\u8ba4\u8bc1\u7684, \u4f46\u662f\u6709\u65f6\u5019, \u6211\u4eec\u9700\u8981\u4f7f\u7528`password`\u8ba4\u8bc1.<br/>\\n\u4e3a\u4e86\u80fd\u591f\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd, \u6211\u4eec\u9700\u8981\u5bf9`ssh`\u8fdb\u884c\u914d\u7f6e\\n\\n## \u89e3\u51b3\u65b9\u6848\\n\\n### \u4fee\u6539`sshd`\u914d\u7f6e\u6587\u4ef6\\n\\n\u4fee\u6539`/etc/ssh/sshd_config`\u6587\u4ef6, \u5c06`PasswordAuthentication`\u8bbe\u7f6e\u4e3a`yes`\\n\\n```\\nPasswordAuthentication no\\n```\\n\\n### \u91cd\u542f`ssh`\u670d\u52a1\\n\\n\u4ee5\u4e0b\u6709\u4e24\u79cd\u65b9\u5f0f, \u9009\u62e9\u4e00\u79cd\u5373\u53ef\\n\\n**\u65b9\u5f0f1: systemd**\\n\\n```bash\\nsudo systemctl restart sshd\\n```\\n\\n**\u65b9\u5f0f2: service**\\n\\n```bash\\nsudo service sshd restart\\n```\\n\\n## \u53c2\u8003\\n\\n- [How to Enable SSH Password Authentication](https://serverpilot.io/docs/how-to-enable-ssh-password-authentication/)"},{"id":"/2023/02/23/index","metadata":{"permalink":"/markdowns/blog/2023/02/23/index","source":"@site/blog/2023-02-23/index.md","title":"\u5e38\u89c1\u7684\u547d\u540d\u524d\u7f00","description":"\u4ecb\u7ecd","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[{"label":"naming","permalink":"/markdowns/blog/tags/naming"}],"readingTime":8.475,"hasTruncateMarker":false,"authors":[{"name":"Xiangcheng Kuo","title":"programmer on jvm platform","url":"https://github.com/orange-guo","imageURL":"https://github.com/orange-guo.png","key":"xiangcheng.kuo"}],"frontMatter":{"authors":["xiangcheng.kuo"],"tags":["naming"]},"prevItem":{"title":"\u542f\u7528SSH\u5bc6\u7801\u9a8c\u8bc1","permalink":"/markdowns/blog/2023/02/24/index"},"nextItem":{"title":"springdoc-v2\u4e2d\u5728\u4e0d\u914d\u7f6e@ParameterObject\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0Pageable\u4ee5\u53caSort\u5bf9\u8c61\u5230API\u53c2\u6570\u7684\u8f6c\u6362","permalink":"/markdowns/blog/2023/02/22/index"}},"content":"## \u4ecb\u7ecd\\n\\n\u5728\u7f16\u7a0b\u4e2d, \u547d\u540d\u662f\u4e00\u4ef6\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5, \u597d\u7684\u547d\u540d\u80fd\u591f\u8ba9\u4ee3\u7801\u66f4\u52a0\u6613\u8bfb, \u4e5f\u80fd\u591f\u8ba9\u4ee3\u7801\u66f4\u52a0\u6613\u4e8e\u7ef4\u62a4.<br/>\\n\u901a\u5e38\u6211\u4eec\u5728\u9605\u8bfb\u7b2c\u4e09\u65b9\u5e93\u7684\u4ee3\u7801\u65f6, \u4f1a\u53d1\u73b0\u5f88\u591a\u65b9\u6cd5\u7684\u547d\u540d\u90fd\u662f\u4ee5\u4e00\u4e9b\u56fa\u5b9a\u7684\u547d\u540d\u524d\u7f00\u5f00\u5934\u7684.<br/>\\n\u672c\u6587\u4e3b\u8981\u603b\u7ed3\u76ee\u524d\u6211\u6240\u4e86\u89e3\u7684\u4e00\u4e9b\u5e38\u89c1\u7684\u547d\u540d\u524d\u7f00\u7684\u542b\u4e49. \u5e76\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b, \u5927\u81f4\u7684\u5206\u7c7b\u4e3b\u8981\u5982\u4e0b.<br/>\\n\\n- \u5bf9\u8c61\u7684\u521b\u5efa\\n- \u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u72b6\u6001\\n- \u5bf9\u8c61\u7684\u5143\u7d20\u64cd\u4f5c\\n- \u5176\u4ed6\\n\\n\u5bf9\u4e8e\u6bcf\u79cd\u547d\u540d\u89c4\u5219, \u6211\u90fd\u4f1a\u7ed9\u51fa\u4f8b\u5b50, \u4ee5\u4fbf\u4e8e\u66f4\u597d\u7684\u7406\u89e3. <br/>\\n\u4ee3\u7801\u4ee5`kotlin`\u5b9e\u73b0, \u4f46\u662f\u5927\u90e8\u5206\u7684\u547d\u540d\u89c4\u5219\u90fd\u662f\u901a\u7528\u7684, \u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u7684\u8bed\u8a00.<br/>\\n\\n## \u5bf9\u8c61\u521b\u5efa\\n\\n\u8fd9\u4e9b\u547d\u540d\u524d\u7f00\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u7684\u521b\u5efa\\n\\n### new\\n\\n\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u5b9e\u4f8b, \u8be5\u65b9\u6cd5\u901a\u5e38\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5, \u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u5b9e\u4f8b.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u58f0\u660e\u9759\u6001\u65b9\u6cd5`newAccount`\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684`Account`\u5bf9\u8c61\u5b9e\u4f8b\\n\\n```kotlin\\nclass Account(\\n\\tval name: String,\\n\\tval createdAt: ZonedDateTime,\\n) {\\n\\n\\tcompanion object {\\n\\n\\t\\tfun newAccount(name: String, createdAt: ZonedDateTime): Account =\\n\\t\\t\\tTODO(\\"DO SOMETHING\\")\\n\\n\\t}\\n\\n}\\n```\\n\\n### valueOf\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5c06\u57fa\u672c\u7c7b\u578b\u503c\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u5305\u88c5\u7c7b\u5bf9\u8c61, \u4e00\u822c\u9002\u7528\u4e8e\u5e95\u5c42\u5e93\u4e2d.<br/>\\n\u8be5\u65b9\u6cd5\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u7684\u4f7f\u7528\u573a\u666f\u5e76\u4e0d\u591a, \u4f46\u662f\u5728\u5e95\u5c42\u5e93\u4e2d, \u8be5\u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u666f\u8fd8\u662f\u6bd4\u8f83\u591a\u7684.<br/>\\n\u4e0b\u9762\u5217\u4e3e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684`valueOf`\u65b9\u6cd5\\n\\n- `Integer.valueOf` \u5c06`int`\u8f6c\u6362\u4e3a`Integer`\\n- `Long.valueOf` \u5c06`long`\u8f6c\u4e3a`Long`\\n- `Double.valueOf`\u5c06`double`\u8f6c\u4e3a`Double`\\n\\n### getInstance\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u83b7\u53d6\u5355\u4f8b\u5bf9\u8c61.<br/>\\n\u5728`kotlin`\u4e2d, \u901a\u5e38\u4f7f\u7528`companion object`\u6765\u58f0\u660e\u5355\u4f8b\u5bf9\u8c61\\n\\n#### \u6848\u4f8b\\n\\n- \u901a\u8fc7\u58f0\u660e`getInstance`\u65b9\u6cd5\u6765\u83b7\u53d6\u5355\u4f8b\u5bf9\u8c61\\n\\n```kotlin\\nclass AccountService {\\n\\n\\tcompanion object {\\n\\n\\t\\tfun getInstance(): AccountService =\\n\\t\\t\\tTODO(\\"DO SOMETHING\\")\\n\\n\\t}\\n\\n}\\n```\\n\\n### create\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u5b9e\u4f8b, \u4f46\u662f\u5b83\u4e0e`new`\u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e, \u5b83\u901a\u5e38\u7528\u4e8e\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e2d.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u901a\u8fc7`SessionRepositoryFactory`\u4e2d\u58f0\u660e\u7684\u5404\u79cd`create`\u65b9\u6cd5\u6765\u521b\u5efa\u4e0d\u540c\u7684`SessionRepository`\u5bf9\u8c61\\n\\n```kotlin\\ninterface SessionRepository {\\n\\n\\tfun getSession(requestId: String): Session\\n\\n}\\n\\ninterface SessionRepositoryFactory {\\n\\n\\tfun createInMemorySessionRepository(): SessionRepository\\n\\n\\tfun createDatabaseSessionRepository(): SessionRepository\\n\\n}\\n```\\n\\n### from\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5c06\u5bf9\u8c61\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u901a\u8fc7`Account`\u4e2d\u58f0\u660e\u7684`fromDto`\u548c`fromEntity`\u65b9\u6cd5\u6765\u5c06`AccountDto`\u548c`AccountEntity`\u8f6c\u6362\u4e3a`Account`\u5bf9\u8c61\\n\\n```kotlin\\nclass Account {\\n\\n\\tcompanion object {\\n\\n\\n\\t\\tfun fromDto(dto: AccountDto): Account =\\n\\t\\t\\tTODO(\\"DO SOMETHING\\")\\n\\n\\t\\tfun fromEntity(entity: AccountEntity): Account =\\n\\t\\t\\tTODO(\\"DO SOMETHING\\")\\n\\n\\t}\\n\\n}\\n```\\n\\n### copy\\n\\n\u8be5\u65b9\u6cd5\u7528\u4e8e\u590d\u5236\u5bf9\u8c61, \u8fd4\u56de\u65b0\u7684\u526f\u672c.<br/>\\n\u5728`kotlin`\u4e2d`copy`\u662f`data class`\u81ea\u5e26\u7684\u65b9\u6cd5, \u8be5\u65b9\u6cd5\u7528\u4e8e\u590d\u5236\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5bf9\u8c61.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- `kotlin`\u4e2d\u7684`copy`\u65b9\u6cd5\\n\\n```kotlin\\ndata class Person(val name: String, val age: Int)\\n\\nval person = Person(\\"Tom\\", 18)\\nval copiedPerson = person.copy(age = 20)\\n```\\n\\n### clone\\n\\n\u8be5\u65b9\u6cd5\u7528\u4e8e\u590d\u5236\u5bf9\u8c61, \u8fd4\u56de\u65b0\u7684\u526f\u672c.<br/>\\n\u5728`java`\u4e2d, `clone`\u662f`Object`\u7c7b\u4e2d\u7684\u65b9\u6cd5, \u8be5\u65b9\u6cd5\u7528\u4e8e\u590d\u5236\u4e00\u4e2a\u5bf9\u8c61.<br/>\\n`copy`\u548c`clone`\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e, `copy`\u65b9\u6cd5\u662f\u5bf9\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5bf9\u8c61\u7684\u590d\u5236, \u800c`clone`\u65b9\u6cd5\u5219\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- `java`\u4e2d\u7684`clone`\u65b9\u6cd5\\n\\n```java\\npublic class Person implements Cloneable {\\n\\n\\tprivate String name;\\n\\n\\tprivate int age;\\n\\n\\t@Override\\n\\tpublic Person clone() {\\n\\t\\ttry {\\n\\t\\t\\treturn (Person) super.clone();\\n\\t\\t} catch (CloneNotSupportedException e) {\\n\\t\\t\\tthrow new AssertionError();\\n\\t\\t}\\n\\t}\\n\\n}\\n```\\n\\n### with\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u590d\u5236\u5bf9\u8c61\u5e76\u4fee\u6539\u5176\u7279\u5b9a\u5c5e\u6027.<br/>\\n\u4e00\u822c\u88ab\u590d\u5236\u7684\u5bf9\u8c61\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61.<br/>\\n\u548ccopy\u7684\u533a\u522b\u5728\u4e8e, \u8c03\u7528copy\u65f6, \u53ef\u4ee5\u9009\u62e9\u6027\u7684\u4fee\u6539\u5bf9\u8c61\u7684\u67d0\u4e9b\u5c5e\u6027,\\n\u800c\u8c03\u7528with\u65f6, \u901a\u5e38\u662f\u4fee\u6539\u5bf9\u8c61\u7684\u5355\u4e2a\u5c5e\u6027.<br/>\\n\\n\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u7c7b\u4f3c\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d`curring`\u548c`partial apply`\u7684\u533a\u522b.<br/>\\n\u4e3b\u8981\u76f8\u4f3c\u70b9\u5728\u4e8e, \u53c2\u6570\u4f20\u5165\u7684\u6570\u91cf\u4e0d\u540c, \u53e6\u5916\u8fd4\u56de\u7684\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61/\u51fd\u6570.<br/>\\n\\n`curring`: \u6bcf\u6b21\u53ea\u80fd\u4f20\u5165\u4e00\u4e2a\u53c2\u6570, \u8fd4\u56de\u4e00\u4e2a\u51fd\u6570, \u8be5\u51fd\u6570\u63a5\u6536\u5269\u4f59\u7684\u53c2\u6570.<br/>\\n`partial apply`: \u6bcf\u6b21\u53ef\u4ee5\u4f20\u5165\u591a\u4e2a\u53c2\u6570, \u8fd4\u56de\u4e00\u4e2a\u51fd\u6570, \u8be5\u51fd\u6570\u63a5\u6536\u5269\u4f59\u7684\u53c2\u6570.<br/>\\n\\n\u5728`lombok`\u4e2d, \u901a\u8fc7`@With`\u6ce8\u89e3\u6765\u5b9e\u73b0`with`\u65b9\u6cd5.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u901a\u8fc7`with`\u65b9\u6cd5\u4fee\u6539\u7279\u5b9a\u5c5e\u6027\\n\\n```kotlin\\nval person = Person()\\nperson.withName(\\"John\\").withAge(30)\\n```\\n\\n### parse\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u5bf9\u8c61.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a`Date`\u5bf9\u8c61\\n\\n```kotlin\\nval date = Date.parse(\\"2020-01-01\\")\\n```\\n\\n### of\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5c06\u591a\u4e2a\u53c2\u6570\u7ec4\u5408\u4e3a\u4e00\u4e2a\u5bf9\u8c61.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u5c06\u591a\u4e2a\u53c2\u6570\u7ec4\u5408\u4e3a\u4e00\u4e2a\u5bf9\u8c61\\n\\n```kotlin\\nval list = List.of(1, 2, 3)\\n```\\n\\n## \u5c5e\u6027\u548c\u72b6\u6001\\n\\n\u8fd9\u4e9b\u547d\u540d\u524d\u7f00\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u72b6\u6001\\n\\n### get\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u83b7\u53d6\u7528\u6237\u7684\u59d3\u540d\\n\\n```kotlin\\nperson.getName()\\n```\\n\\n### set\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u4fee\u6539\u7528\u6237\u7684\u59d3\u540d\\n\\n```kotlin\\nperson.setName(name = \\"Jack\\")\\n```\\n\\n### is\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5224\u65ad\u5bf9\u8c61\u7684\u72b6\u6001.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u5224\u65ad\u7528\u6237\u662f\u5426\u6210\u5e74\\n\\n```kotlin\\nperson.isAdult()\\n```\\n\\n## \u5bf9\u8c61\u7684\u5143\u7d20\u64cd\u4f5c\\n\\n\u8fd9\u4e9b\u547d\u540d\u524d\u7f00\u7528\u4e8e\u8868\u793a\u542b\u6709\u4e00\u4e9b\u5143\u7d20\u7684\u5bf9\u8c61\u7684\u64cd\u4f5c, \u901a\u5e38\u5728\u5177\u6709\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u7684\u5bf9\u8c61\u4e2d\u6bd4\u8f83\u5e38\u89c1<br/>\\n\\n### has\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u5224\u65ad\u7528\u6237\u662f\u5426\u5177\u6709`ADMIN`\u89d2\u8272\\n\\n```kotlin\\nuser.hasRole(role = \\"ADMIN\\")\\n```\\n\\n### add\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5411\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u5143\u7d20.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u4e3a\u7528\u6237\u6388\u4e88`ADMIN`\u89d2\u8272\\n\\n```kotlin\\nuser.addRole(role = \\"ADMIN\\")\\n```\\n\\n### remove\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u4ece\u5bf9\u8c61\u4e2d\u79fb\u9664\u5143\u7d20.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u4e3a\u7528\u6237\u79fb\u9664`ADMIN`\u89d2\u8272\\n\\n```kotlin\\nuser.removeRole(role = \\"ADMIN\\")\\n```\\n\\n## \u5176\u4ed6\\n\\n\u8fd9\u4e9b\u547d\u540d\u524d\u7f00\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49, \u4f46\u662f\u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u573a\u666f\u4e2d, \u4f1a\u6709\u7279\u5b9a\u7684\u542b\u4e49.<br/>\\n\\n### to\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- \u5c06`Account`\u8f6c\u6362\u4e3a`AccountDto`\\n\\n```kotlin\\naccount.toDto()\\n```\\n\\n- \u5c06`Account`\u8f6c\u6362\u4e3a`AccountEntity`\\n\\n```kotlin\\naccount.toEntity()\\n```\\n\\n### do\\n\\n\u8be5\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c.<br/>\\n\u8be5\u65b9\u6cd5\u5728`spring`\u4e2d\u6bd4\u8f83\u5e38\u89c1, \u901a\u5e38\u8868\u793a\u5728\u6267\u884c\u5b8c\u67d0\u4e9b\u524d\u7f6e\u5de5\u4f5c, \u4f8b\u5982\u8f93\u5165\u9a8c\u8bc1, \u7136\u540e\u5f00\u59cb\u6267\u884c\u771f\u6b63\u7684\u64cd\u4f5c.<br/>\\n\\n#### \u6848\u4f8b\\n\\n- `org.springframework:spring-beans`\u4e2d`AbstractBeanFactory`\u7684`doGetBean`\u65b9\u6cd5\\n\\n```java\\npublic abstract class AbstractBeanFactory extends FactoryBeanRegistrySupport implements ConfigurableBeanFactory {\\n\\n\\tprotected <T> T doGetBean(\\n\\t\\t\\tString name, @Nullable Class<T> requiredType, @Nullable Object[] args, boolean typeCheckOnly)\\n\\t\\t\\tthrows BeansException {\\n\\n\\t}\\n\\n}\\n```\\n\\n- `org.springframework:spring-webmvc`\u4e2d`DispatcherServlet`\u7684`doDispatch`\u65b9\u6cd5\\n\\n```java\\npublic class DispatcherServlet extends FrameworkServlet {\\n\\n\\t@Override\\n\\tprotected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {\\n\\t\\t// DO SOMETHING\\n\\t}\\n\\n}\\n```\\n\\n- `org.springframework:spring-jdbc`\u4e2d`AbstractPlatformTransactionManager`\u7684`doBegin`\u65b9\u6cd5\\n\\n```java\\npublic abstract class AbstractPlatformTransactionManager implements PlatformTransactionManager {\\n\\n\\tprotected void doBegin(Object transaction, TransactionDefinition definition) {\\n\\t\\t// DO SOMETHING\\n\\t}\\n\\n}\\n```\\n\\n## \u53c2\u8003\\n\\n- [Effective Java\u7b2c\u4e00\u7ae0\u4e2d\u5173\u4e8e\u9759\u6001\u5de5\u5382\u7684\u547d\u540d\u4e60\u60ef](https://github.com/clxering/Effective-Java-3rd-edition-Chinese-English-bilingual/blob/dev/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors.md)\\n- [ORACLE Naming Conventions](https://www.oracle.com/java/technologies/javase/codeconventions-namingconventions.html)\\n- [Naming Conventions in Java](https://www.geeksforgeeks.org/java-naming-conventions/)"},{"id":"/2023/02/22/index","metadata":{"permalink":"/markdowns/blog/2023/02/22/index","source":"@site/blog/2023-02-22/index.md","title":"springdoc-v2\u4e2d\u5728\u4e0d\u914d\u7f6e@ParameterObject\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0Pageable\u4ee5\u53caSort\u5bf9\u8c61\u5230API\u53c2\u6570\u7684\u8f6c\u6362","description":"\u4ecb\u7ecd","date":"2023-02-22T00:00:00.000Z","formattedDate":"February 22, 2023","tags":[{"label":"springdoc","permalink":"/markdowns/blog/tags/springdoc"},{"label":"spring","permalink":"/markdowns/blog/tags/spring"}],"readingTime":4.985,"hasTruncateMarker":false,"authors":[{"name":"Xiangcheng Kuo","title":"programmer on jvm platform","url":"https://github.com/orange-guo","imageURL":"https://github.com/orange-guo.png","key":"xiangcheng.kuo"}],"frontMatter":{"authors":["xiangcheng.kuo"],"tags":["springdoc","spring"]},"prevItem":{"title":"\u5e38\u89c1\u7684\u547d\u540d\u524d\u7f00","permalink":"/markdowns/blog/2023/02/23/index"}},"content":"## \u4ecb\u7ecd\\n\\n`springdoc`\u662f\u4e00\u4e2a\u53ef\u4ee5\u5feb\u901f\u751f\u6210`API`\u6587\u6863\u7684\u7b2c\u4e09\u65b9\u516c\u5171\u5e93, \u5e76\u63d0\u4f9b\u4e86`UI`\u9875\u9762\u4ee5\u4f9b\u8bbf\u95ee.<br/>\\n\u540c\u65f6\u5b83\u4e5f\u63d0\u4f9b\u4e86`spring-webmvc`\u4e2d\u7684`handler`\u4e2d\u7684\u53c2\u6570\u5bf9\u8c61\u5230`API`\u53c2\u6570\u7684\u8f6c\u6362.<br/>\\n\u5bf9\u4e8e`spring-data-commons`\u4e2d\u7684`Pageable`\u548c`Sort`, `springdoc`\u63d0\u4f9b\u4e86\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd,\\n\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u542f\u7528\u4ee5\u53ca\u5728\u53c2\u6570\u4e2d\u58f0\u660e`@ParameterObject`<br/>\\n\\n```yaml title=\\"application.yml\\"\\nspringdoc:\\n  model-converters:\\n    pageable-converter:\\n      enabled: true\\n```\\n\\n\u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u9879\u76ee, \u5f53\u521a\u5f15\u5165`springdoc`\u65f6, \u9700\u8981\u914d\u7f6e\u5927\u91cf\u7684`@ParameterObject`\u6ce8\u89e3\u4ee5\u5b9e\u73b0\u53c2\u6570\u8f6c\u6362\u529f\u80fd.<br/>\\n\u8fd9\u4e2a\u8fc7\u7a0b\u901a\u5e38\u6bd4\u8f83\u7e41\u7410, \u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u5177\u6709\u4e00\u5b9a\u89c4\u6a21\u7684\u9879\u76ee\u800c\u8a00, \u5176\u5bf9\u5916\u63d0\u4f9b\u7684`API`\u5f80\u5f80\u4f1a\u975e\u5e38\u591a,\\n\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u4fee\u6539\u529f\u80fd\u624d\u80fd\u5b9e\u73b0\u8be5\u529f\u80fd<br/>\\n\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u9700\u8981\u4e00\u79cd\u89e3\u51b3\u65b9\u6848, \u5373\u5982\u4f55\u5728\u4e0d\u914d\u7f6e`@ParameterObject`\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0`Pageable`\u4ee5\u53ca`Sort`\u5bf9\u8c61\u5230API\u53c2\u6570\u7684\u8f6c\u6362\\n\\n## \u601d\u8def\\n\\n### @ParameterObject\\n\\n\u5728`springdoc`\u4e2d, `@ParameterObject`\u6ce8\u89e3\u7684\u83b7\u53d6\u662f\u6765\u81ea\u4e8e`spring-webmvc`\u4e2d\u7684`HandlerMethod`\u5bf9\u8c61\\n\\n### HandlerMethod\\n\\n\u8fd9\u4e2a\u5bf9\u8c61\u662f\u6211\u4eec\u5728`Controller`\u4e2d\u58f0\u660e\u7684`Handler`\u7684\u62bd\u8c61, \u5b83\u4e3b\u8981\u4fdd\u5b58\u4e86\u6211\u4eec\u58f0\u660e\u7684`Handler`\u7684\u4e00\u4e9b\u5143\u4fe1\u606f. <br/>\\n\u5b83\u7684`MethodParameter[] parameters`\u5c5e\u6027\u5305\u542b\u4e86\u8be5\u65b9\u6cd5\u7684\u6240\u6709\u53c2\u6570\u7684\u4fe1\u606f.<br/>\\n\\n### MethodParameter\\n\\n`MethodParameter`\u5bf9\u8c61\u7684`Annotation[] parameterAnnotations`\u5c5e\u6027\u5305\u542b\u4e86\u8be5\u53c2\u6570\u7684\u6240\u6709\u6ce8\u89e3.<br/>\\n\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539`Annotation[] parameterAnnotations`\u5c5e\u6027\u4ee5\u5b9e\u73b0\u52a8\u6001\u6dfb\u52a0`@ParameterObject`\u6ce8\u89e3\u7684\u529f\u80fd.<br/>\\n\\n### HandlerMapping\\n\\n\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4ece`spring`\u5bb9\u5668\u4e2d\u83b7\u53d6\u5230`MethodHandler`, \u56e0\u4e3a\u5176\u662f\u4fdd\u5b58\u5728`HandlerMapping`\u4e2d\u7684, `HandlerMapping`\\n\u53ef\u4ee5\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u5230.<br/>\\n\\n### BeanPostProcessor\\n\\n`spring`\u4e2d\u63d0\u4f9b\u4e86`BeanPostProcess`\u673a\u5236, \u4e3b\u8981\u5b9e\u73b0\u4e86\u5bf9`Bean`\u7684\u521b\u5efa\u8fdb\u884c\u62e6\u622a\u5904\u7406.<br/>\\n\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0`BeanPostProcessor`\u6765\u5bf9`HandlerMapping`\u4e2d\u7684`MethodHandler`\u4e2d\u7684`MethodParameter`\u7684`parameterAnnotations`\\n\u8fdb\u884c\u4fee\u6539\u4ee5\u5b9e\u73b0\u8ffd\u52a0`@ParameterObject`\u6ce8\u89e3\\n\\n## \u89e3\u51b3\u65b9\u6848\\n\\n### \u65b0\u589e`AppendSpringdocAnnotationBeanPostProcessor`\u7528\u4e8e\u5b9e\u73b0\u589e\u52a0`@ParameterObject`\u6ce8\u89e3\u7684\u80fd\u529b\\n\\n```kotlin title=\\"AppendSpringdocAnnotationBeanPostProcessor.kt\\"\\n/**\\n * We must add @ParameterObject annotation to Pageable and Sort parameter to ensure that springdoc can generate correct.\\n * But declaring @ParameterObject in the controller method is not a good idea, because it will take some time to.\\n * So we can use this class to avoid declaring @ParameterObject on method parameter which type is Pageable or Sort.\\n *\\n * @author Xiangcheng.Kuo\\n * @see org.springdoc.core.annotations.ParameterObject\\n * @see <a href=\\"https://springdoc.org/v2/#how-can-i-map-pageable-spring-data-commons-object-to-correct-url-parameter-in-swagger-ui\\">13.22. How can I map Pageable (spring-data-commons) object to correct URL-Parameter in Swagger UI?</a>\\n */\\ninternal class AppendSpringdocAnnotationBeanPostProcessor : BeanPostProcessor {\\n\\n\\toverride fun postProcessAfterInitialization(bean: Any, beanName: String): Any {\\n\\t\\tif (bean !is AbstractHandlerMethodMapping<*>) {\\n\\t\\t\\treturn bean\\n\\t\\t}\\n\\t\\tbean.handlerMethods?.forEach { (_: Any, handlerMethod: HandlerMethod) ->\\n\\t\\t\\thandlerMethod\\n\\t\\t\\t\\t.methodParameters\\n\\t\\t\\t\\t.filter {\\n\\t\\t\\t\\t\\tPageable::class.java.isAssignableFrom(it.parameterType) || Sort::class.java.isAssignableFrom(it.parameterType)\\n\\t\\t\\t\\t}.forEach { methodParameter: MethodParameter ->\\n\\t\\t\\t\\t\\taddAnnotationForParameter(methodParameter)\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn bean\\n\\t}\\n\\n\\tprivate fun addAnnotationForParameter(methodParameter: MethodParameter) {\\n\\t\\tval parameterAnnotationsField =\\n\\t\\t\\tFieldUtils.getDeclaredField(MethodParameter::class.java, \\"parameterAnnotations\\", true)\\n\\t\\tval annotations: MutableList<Annotation> =\\n\\t\\t\\t((parameterAnnotationsField[methodParameter] as Array<Annotation>?)\\n\\t\\t\\t\\t?: emptyArray<Annotation>()).toMutableList()\\n\\n\\t\\tif (annotations.stream().anyMatch(ParameterObject::class::isInstance)) {\\n\\t\\t\\treturn\\n\\t\\t}\\n\\n\\t\\tannotations.add(FakeParameterObject.create())\\n\\t\\tparameterAnnotationsField[methodParameter] = annotations.toTypedArray()\\n\\t}\\n\\n}\\n```\\n\\n### \u65b0\u589e`@ParameterObject`\u7684\u5b9e\u73b0\u7c7b, \u7531\u4e8e`kotlin`\u4e0d\u652f\u6301\u7ee7\u627f`annotation`, \u9700\u8981\u65b0\u5efa`java`\u7c7b\u6765\u7ee7\u627f`annotation`\\n\\n```java title=\\"FakeParameterObject.java\\"\\n/**\\n * Avoid the following kotlin compile error\\n * This type has a constructor, and thus must be initialized here\\n * This type is final, so it cannot be inherited from\\n *\\n * @author Xiangcheng.Kuo\\n * @see <a href=\\"https://stackoverflow.com/questions/51608924/implement-inherit-extend-annotation-in-kotlin\\">Implement (/inherit/~extend) annotation in Kotlin</a>\\n */\\npublic class FakeParameterObject implements ParameterObject {\\n\\n\\t@Override\\n\\tpublic Class<? extends Annotation> annotationType() {\\n\\t\\treturn FakeParameterObject.class;\\n\\t}\\n\\n\\tpublic static ParameterObject create() {\\n\\t\\treturn new FakeParameterObject();\\n\\t}\\n\\n}\\n```\\n\\n### \u65b0\u589eConfiguration, \u5c06`AppendSpringdocAnnotationBeanPostProcessor`\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\\n\\n```kotlin title=\\"ApidocAutoConfiguration.kt\\"\\n/**\\n * @author Xiangcheng.Kuo\\n */\\n@Configuration\\ninternal class ApidocAutoConfiguration {\\n\\n\\t@Bean\\n\\t@ConditionalOnProperty(Constants.SPRINGDOC_ENABLED, matchIfMissing = true)\\n\\tfun appendSpringdocAnnotationBeanPostProcessor(): BeanPostProcessor =\\n\\t\\tAppendSpringdocAnnotationBeanPostProcessor()\\n\\n}\\n```\\n\\n## \u5907\u6ce8\\n\\n### \u53cd\u5c04\\n\\n\u8be5\u89e3\u51b3\u65b9\u6cd5\u662f\u57fa\u4e8e\u53cd\u5c04\u7684, \u5e76\u4e14\u5728`spring`\u7684`BeanPostProcessor`\u4e2d\u4fee\u6539\u4e86`MethodParameter`\u7684`parameterAnnotations`\u5c5e\u6027.\\n\u8be5\u5c5e\u6027\u53ef\u80fd\u4f1a\u5728`spring`\u7684\u5176\u4ed6\u5730\u65b9\u88ab\u4f7f\u7528, \u56e0\u6b64\u53ef\u80fd\u4f1a\u5f15\u8d77\u4e00\u4e9b\u4e0d\u53ef\u9884\u77e5\u7684\u95ee\u9898.\\n\\n### `springdoc`\u5e94\u8be5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5173\u95ed\\n\\n\u5728\u751f\u4ea7\u73af\u5883\u4e2d, \u4e0d\u5e94\u8be5\u5f00\u542f`springdoc`, \u56e0\u4e3a\u8fd9\u4f1a\u66b4\u9732`swagger`\u7684`api`\u6587\u6863, \u4ece\u800c\u5bfc\u81f4`api`\u6587\u6863\u6cc4\u9732,\\n\\n\u4f7f\u7528`spring`\u4e2d\u63d0\u4f9b\u7684`profile`\u529f\u80fd\u4ee5\u5b9e\u73b0\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u5f00\u542f`springdoc`, \u751f\u4ea7\u6a21\u5f0f\u4e0b\u5173\u95ed`springdoc`\\n\\n```yaml title=\\"application.yml\\"\\nspringdoc:\\n  api-docs:\\n    enabled: false\\n  model-converters:\\n    pageable-converter:\\n      enabled: true\\n```\\n\\n```yaml title=\\"application-dev.yml\\"\\nspringdoc:\\n  api-docs:\\n    enabled: true\\n  model-converters:\\n    pageable-converter:\\n      enabled: true\\n```\\n\\n## \u53c2\u8003\\n\\n### springdoc-v2\\n\\n- [springdoc v2](https://springdoc.org/v2/)\\n- [13.22. How can I map Pageable (spring-data-commons) object to correct URL-Parameter in Swagger UI?](https://springdoc.org/v2/#how-can-i-map-pageable-spring-data-commons-object-to-correct-url-parameter-in-swagger-ui)\\n- [13.61. How can I extract fields from parameter object ?](https://springdoc.org/v2/#how-can-i-extract-fields-from-parameter-object)\\n\\n### spring\\n\\n- [Class HandlerMethod](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/method/HandlerMethod.html)\\n- [Class MethodParameter](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/MethodParameter.html)\\n- [Interface HandlerMapping](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/HandlerMapping.html)\\n- [Interface BeanPostProcessor](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/BeanPostProcessor.html)\\n\\n### kotlin\\n\\n- [Implement (/inherit/~extend) annotation in Kotlin](https://stackoverflow.com/questions/51608924/implement-inherit-extend-annotation-in-kotlin)"}]}')}}]);